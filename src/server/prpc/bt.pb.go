// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: bt.proto

package prpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BtStateEnum int32

const (
	BtStateEnum_unknown              BtStateEnum = 0
	BtStateEnum_checking_files       BtStateEnum = 1
	BtStateEnum_downloading_metadata BtStateEnum = 2
	BtStateEnum_downloading          BtStateEnum = 3
	BtStateEnum_finished             BtStateEnum = 4
	BtStateEnum_seeding              BtStateEnum = 5
	BtStateEnum_checking_resume_data BtStateEnum = 7
)

// Enum value maps for BtStateEnum.
var (
	BtStateEnum_name = map[int32]string{
		0: "unknown",
		1: "checking_files",
		2: "downloading_metadata",
		3: "downloading",
		4: "finished",
		5: "seeding",
		7: "checking_resume_data",
	}
	BtStateEnum_value = map[string]int32{
		"unknown":              0,
		"checking_files":       1,
		"downloading_metadata": 2,
		"downloading":          3,
		"finished":             4,
		"seeding":              5,
		"checking_resume_data": 7,
	}
)

func (x BtStateEnum) Enum() *BtStateEnum {
	p := new(BtStateEnum)
	*p = x
	return p
}

func (x BtStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BtStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_bt_proto_enumTypes[0].Descriptor()
}

func (BtStateEnum) Type() protoreflect.EnumType {
	return &file_bt_proto_enumTypes[0]
}

func (x BtStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BtStateEnum.Descriptor instead.
func (BtStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{0}
}

type BtFile_State int32

const (
	BtFile_stop        BtFile_State = 0
	BtFile_downloading BtFile_State = 1
	BtFile_completed   BtFile_State = 2
)

// Enum value maps for BtFile_State.
var (
	BtFile_State_name = map[int32]string{
		0: "stop",
		1: "downloading",
		2: "completed",
	}
	BtFile_State_value = map[string]int32{
		"stop":        0,
		"downloading": 1,
		"completed":   2,
	}
)

func (x BtFile_State) Enum() *BtFile_State {
	p := new(BtFile_State)
	*p = x
	return p
}

func (x BtFile_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BtFile_State) Descriptor() protoreflect.EnumDescriptor {
	return file_bt_proto_enumTypes[1].Descriptor()
}

func (BtFile_State) Type() protoreflect.EnumType {
	return &file_bt_proto_enumTypes[1]
}

func (x BtFile_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BtFile_State.Descriptor instead.
func (BtFile_State) EnumDescriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{0, 0}
}

type DownloadRequest_ReqType int32

const (
	DownloadRequest_MagnetUri DownloadRequest_ReqType = 0
	DownloadRequest_Torrent   DownloadRequest_ReqType = 1
	DownloadRequest_Resume    DownloadRequest_ReqType = 2
)

// Enum value maps for DownloadRequest_ReqType.
var (
	DownloadRequest_ReqType_name = map[int32]string{
		0: "MagnetUri",
		1: "Torrent",
		2: "Resume",
	}
	DownloadRequest_ReqType_value = map[string]int32{
		"MagnetUri": 0,
		"Torrent":   1,
		"Resume":    2,
	}
)

func (x DownloadRequest_ReqType) Enum() *DownloadRequest_ReqType {
	p := new(DownloadRequest_ReqType)
	*p = x
	return p
}

func (x DownloadRequest_ReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadRequest_ReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_bt_proto_enumTypes[2].Descriptor()
}

func (DownloadRequest_ReqType) Type() protoreflect.EnumType {
	return &file_bt_proto_enumTypes[2]
}

func (x DownloadRequest_ReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadRequest_ReqType.Descriptor instead.
func (DownloadRequest_ReqType) EnumDescriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{3, 0}
}

type GetMagnetUriReq_ReqType int32

const (
	GetMagnetUriReq_Torrent  GetMagnetUriReq_ReqType = 0
	GetMagnetUriReq_InfoHash GetMagnetUriReq_ReqType = 1
)

// Enum value maps for GetMagnetUriReq_ReqType.
var (
	GetMagnetUriReq_ReqType_name = map[int32]string{
		0: "Torrent",
		1: "InfoHash",
	}
	GetMagnetUriReq_ReqType_value = map[string]int32{
		"Torrent":  0,
		"InfoHash": 1,
	}
)

func (x GetMagnetUriReq_ReqType) Enum() *GetMagnetUriReq_ReqType {
	p := new(GetMagnetUriReq_ReqType)
	*p = x
	return p
}

func (x GetMagnetUriReq_ReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMagnetUriReq_ReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_bt_proto_enumTypes[3].Descriptor()
}

func (GetMagnetUriReq_ReqType) Type() protoreflect.EnumType {
	return &file_bt_proto_enumTypes[3]
}

func (x GetMagnetUriReq_ReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMagnetUriReq_ReqType.Descriptor instead.
func (GetMagnetUriReq_ReqType) EnumDescriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{6, 0}
}

type BtFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index      int32        `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	St         BtFile_State `protobuf:"varint,3,opt,name=st,proto3,enum=prpc.BtFile_State" json:"st,omitempty"`
	TotalSize  int64        `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Downloaded int64        `protobuf:"varint,5,opt,name=downloaded,proto3" json:"downloaded,omitempty"`
}

func (x *BtFile) Reset() {
	*x = BtFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BtFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BtFile) ProtoMessage() {}

func (x *BtFile) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BtFile.ProtoReflect.Descriptor instead.
func (*BtFile) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{0}
}

func (x *BtFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BtFile) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BtFile) GetSt() BtFile_State {
	if x != nil {
		return x.St
	}
	return BtFile_stop
}

func (x *BtFile) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *BtFile) GetDownloaded() int64 {
	if x != nil {
		return x.Downloaded
	}
	return 0
}

type TorrentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash    *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
	Name        string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SavePath    string    `protobuf:"bytes,3,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	Files       []*BtFile `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	TotalSize   int64     `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	PieceLength int32     `protobuf:"varint,6,opt,name=piece_length,json=pieceLength,proto3" json:"piece_length,omitempty"`
	NumPieces   int32     `protobuf:"varint,7,opt,name=num_pieces,json=numPieces,proto3" json:"num_pieces,omitempty"`
}

func (x *TorrentInfo) Reset() {
	*x = TorrentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorrentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentInfo) ProtoMessage() {}

func (x *TorrentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentInfo.ProtoReflect.Descriptor instead.
func (*TorrentInfo) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{1}
}

func (x *TorrentInfo) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *TorrentInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TorrentInfo) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

func (x *TorrentInfo) GetFiles() []*BtFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *TorrentInfo) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *TorrentInfo) GetPieceLength() int32 {
	if x != nil {
		return x.PieceLength
	}
	return 0
}

func (x *TorrentInfo) GetNumPieces() int32 {
	if x != nil {
		return x.NumPieces
	}
	return 0
}

type TorrentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash            *InfoHash   `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
	Name                string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DownloadPayloadRate int32       `protobuf:"varint,3,opt,name=download_payload_rate,json=downloadPayloadRate,proto3" json:"download_payload_rate,omitempty"`
	TotalDone           int64       `protobuf:"varint,4,opt,name=total_done,json=totalDone,proto3" json:"total_done,omitempty"`
	Total               int64       `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Progress            float32     `protobuf:"fixed32,6,opt,name=progress,proto3" json:"progress,omitempty"`
	NumPeers            int32       `protobuf:"varint,7,opt,name=num_peers,json=numPeers,proto3" json:"num_peers,omitempty"`
	State               BtStateEnum `protobuf:"varint,8,opt,name=state,proto3,enum=prpc.BtStateEnum" json:"state,omitempty"`
}

func (x *TorrentStatus) Reset() {
	*x = TorrentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorrentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentStatus) ProtoMessage() {}

func (x *TorrentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentStatus.ProtoReflect.Descriptor instead.
func (*TorrentStatus) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{2}
}

func (x *TorrentStatus) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *TorrentStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TorrentStatus) GetDownloadPayloadRate() int32 {
	if x != nil {
		return x.DownloadPayloadRate
	}
	return 0
}

func (x *TorrentStatus) GetTotalDone() int64 {
	if x != nil {
		return x.TotalDone
	}
	return 0
}

func (x *TorrentStatus) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TorrentStatus) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TorrentStatus) GetNumPeers() int32 {
	if x != nil {
		return x.NumPeers
	}
	return 0
}

func (x *TorrentStatus) GetState() BtStateEnum {
	if x != nil {
		return x.State
	}
	return BtStateEnum_unknown
}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     DownloadRequest_ReqType `protobuf:"varint,1,opt,name=type,proto3,enum=prpc.DownloadRequest_ReqType" json:"type,omitempty"`
	Content  []byte                  `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	SavePath string                  `protobuf:"bytes,3,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadRequest) GetType() DownloadRequest_ReqType {
	if x != nil {
		return x.Type
	}
	return DownloadRequest_MagnetUri
}

func (x *DownloadRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *DownloadRequest) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

type InfoHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Hash    []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *InfoHash) Reset() {
	*x = InfoHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoHash) ProtoMessage() {}

func (x *InfoHash) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoHash.ProtoReflect.Descriptor instead.
func (*InfoHash) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{4}
}

func (x *InfoHash) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *InfoHash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type DownloadRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *DownloadRespone) Reset() {
	*x = DownloadRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRespone) ProtoMessage() {}

func (x *DownloadRespone) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRespone.ProtoReflect.Descriptor instead.
func (*DownloadRespone) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadRespone) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type GetMagnetUriReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     GetMagnetUriReq_ReqType `protobuf:"varint,1,opt,name=type,proto3,enum=prpc.GetMagnetUriReq_ReqType" json:"type,omitempty"`
	Content  []byte                  `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	InfoHash *InfoHash               `protobuf:"bytes,3,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *GetMagnetUriReq) Reset() {
	*x = GetMagnetUriReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMagnetUriReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMagnetUriReq) ProtoMessage() {}

func (x *GetMagnetUriReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMagnetUriReq.ProtoReflect.Descriptor instead.
func (*GetMagnetUriReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{6}
}

func (x *GetMagnetUriReq) GetType() GetMagnetUriReq_ReqType {
	if x != nil {
		return x.Type
	}
	return GetMagnetUriReq_Torrent
}

func (x *GetMagnetUriReq) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetMagnetUriReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type GetMagnetUriRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash  *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
	MagnetUri string    `protobuf:"bytes,2,opt,name=magnet_uri,json=magnetUri,proto3" json:"magnet_uri,omitempty"`
}

func (x *GetMagnetUriRsp) Reset() {
	*x = GetMagnetUriRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMagnetUriRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMagnetUriRsp) ProtoMessage() {}

func (x *GetMagnetUriRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMagnetUriRsp.ProtoReflect.Descriptor instead.
func (*GetMagnetUriRsp) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{7}
}

func (x *GetMagnetUriRsp) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *GetMagnetUriRsp) GetMagnetUri() string {
	if x != nil {
		return x.MagnetUri
	}
	return ""
}

type GetResumeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *GetResumeDataReq) Reset() {
	*x = GetResumeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResumeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResumeDataReq) ProtoMessage() {}

func (x *GetResumeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResumeDataReq.ProtoReflect.Descriptor instead.
func (*GetResumeDataReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{8}
}

func (x *GetResumeDataReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type GetResumeDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResumeData []byte `protobuf:"bytes,9,opt,name=resume_data,json=resumeData,proto3" json:"resume_data,omitempty"`
}

func (x *GetResumeDataRsp) Reset() {
	*x = GetResumeDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResumeDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResumeDataRsp) ProtoMessage() {}

func (x *GetResumeDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResumeDataRsp.ProtoReflect.Descriptor instead.
func (*GetResumeDataRsp) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{9}
}

func (x *GetResumeDataRsp) GetResumeData() []byte {
	if x != nil {
		return x.ResumeData
	}
	return nil
}

type GetTorrentInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *GetTorrentInfoReq) Reset() {
	*x = GetTorrentInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentInfoReq) ProtoMessage() {}

func (x *GetTorrentInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentInfoReq.ProtoReflect.Descriptor instead.
func (*GetTorrentInfoReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{10}
}

func (x *GetTorrentInfoReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type GetTorrentInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TorrentInfo *TorrentInfo `protobuf:"bytes,1,opt,name=torrent_info,json=torrentInfo,proto3" json:"torrent_info,omitempty"`
}

func (x *GetTorrentInfoRsp) Reset() {
	*x = GetTorrentInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentInfoRsp) ProtoMessage() {}

func (x *GetTorrentInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentInfoRsp.ProtoReflect.Descriptor instead.
func (*GetTorrentInfoRsp) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{11}
}

func (x *GetTorrentInfoRsp) GetTorrentInfo() *TorrentInfo {
	if x != nil {
		return x.TorrentInfo
	}
	return nil
}

type GetBtStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *GetBtStatusReq) Reset() {
	*x = GetBtStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBtStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBtStatusReq) ProtoMessage() {}

func (x *GetBtStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBtStatusReq.ProtoReflect.Descriptor instead.
func (*GetBtStatusReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{12}
}

func (x *GetBtStatusReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type GetBtStatusRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *TorrentStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetBtStatusRsp) Reset() {
	*x = GetBtStatusRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBtStatusRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBtStatusRsp) ProtoMessage() {}

func (x *GetBtStatusRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBtStatusRsp.ProtoReflect.Descriptor instead.
func (*GetBtStatusRsp) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{13}
}

func (x *GetBtStatusRsp) GetStatus() *TorrentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type BtStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash []*InfoHash `protobuf:"bytes,1,rep,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *BtStatusRequest) Reset() {
	*x = BtStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BtStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BtStatusRequest) ProtoMessage() {}

func (x *BtStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BtStatusRequest.ProtoReflect.Descriptor instead.
func (*BtStatusRequest) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{14}
}

func (x *BtStatusRequest) GetInfoHash() []*InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type BtStatusRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusArray []*TorrentStatus `protobuf:"bytes,1,rep,name=status_array,json=statusArray,proto3" json:"status_array,omitempty"`
}

func (x *BtStatusRespone) Reset() {
	*x = BtStatusRespone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BtStatusRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BtStatusRespone) ProtoMessage() {}

func (x *BtStatusRespone) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BtStatusRespone.ProtoReflect.Descriptor instead.
func (*BtStatusRespone) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{15}
}

func (x *BtStatusRespone) GetStatusArray() []*TorrentStatus {
	if x != nil {
		return x.StatusArray
	}
	return nil
}

type TorrentInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash []*InfoHash `protobuf:"bytes,1,rep,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *TorrentInfoReq) Reset() {
	*x = TorrentInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorrentInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentInfoReq) ProtoMessage() {}

func (x *TorrentInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentInfoReq.ProtoReflect.Descriptor instead.
func (*TorrentInfoReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{16}
}

func (x *TorrentInfoReq) GetInfoHash() []*InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type TorrentInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ti *TorrentInfo `protobuf:"bytes,1,opt,name=ti,proto3" json:"ti,omitempty"`
}

func (x *TorrentInfoRes) Reset() {
	*x = TorrentInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorrentInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentInfoRes) ProtoMessage() {}

func (x *TorrentInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentInfoRes.ProtoReflect.Descriptor instead.
func (*TorrentInfoRes) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{17}
}

func (x *TorrentInfoRes) GetTi() *TorrentInfo {
	if x != nil {
		return x.Ti
	}
	return nil
}

type RemoveTorrentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *RemoveTorrentReq) Reset() {
	*x = RemoveTorrentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTorrentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTorrentReq) ProtoMessage() {}

func (x *RemoveTorrentReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTorrentReq.ProtoReflect.Descriptor instead.
func (*RemoveTorrentReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveTorrentReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type RemoveTorrentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveTorrentRes) Reset() {
	*x = RemoveTorrentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTorrentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTorrentRes) ProtoMessage() {}

func (x *RemoveTorrentRes) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTorrentRes.ProtoReflect.Descriptor instead.
func (*RemoveTorrentRes) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{19}
}

type FileProgressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *FileProgressReq) Reset() {
	*x = FileProgressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileProgressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProgressReq) ProtoMessage() {}

func (x *FileProgressReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProgressReq.ProtoReflect.Descriptor instead.
func (*FileProgressReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{20}
}

func (x *FileProgressReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type FileProgressRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
	Files    []*BtFile `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *FileProgressRes) Reset() {
	*x = FileProgressRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileProgressRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProgressRes) ProtoMessage() {}

func (x *FileProgressRes) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProgressRes.ProtoReflect.Descriptor instead.
func (*FileProgressRes) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{21}
}

func (x *FileProgressRes) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *FileProgressRes) GetFiles() []*BtFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileCompletedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileCompletedReq) Reset() {
	*x = FileCompletedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCompletedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCompletedReq) ProtoMessage() {}

func (x *FileCompletedReq) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCompletedReq.ProtoReflect.Descriptor instead.
func (*FileCompletedReq) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{22}
}

type FileCompletedRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash  *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
	FileIndex int32     `protobuf:"varint,2,opt,name=file_index,json=fileIndex,proto3" json:"file_index,omitempty"`
}

func (x *FileCompletedRes) Reset() {
	*x = FileCompletedRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bt_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCompletedRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCompletedRes) ProtoMessage() {}

func (x *FileCompletedRes) ProtoReflect() protoreflect.Message {
	mi := &file_bt_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCompletedRes.ProtoReflect.Descriptor instead.
func (*FileCompletedRes) Descriptor() ([]byte, []int) {
	return file_bt_proto_rawDescGZIP(), []int{23}
}

func (x *FileCompletedRes) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *FileCompletedRes) GetFileIndex() int32 {
	if x != nil {
		return x.FileIndex
	}
	return 0
}

var File_bt_proto protoreflect.FileDescriptor

var file_bt_proto_rawDesc = []byte{
	0x0a, 0x08, 0x62, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x72, 0x70, 0x63,
	0x22, 0xc8, 0x01, 0x0a, 0x06, 0x42, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x02, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x22, 0x31, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x02, 0x22, 0xf0, 0x01, 0x0a, 0x0b,
	0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x09, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08,
	0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x61, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x69, 0x65, 0x63, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x22, 0x9b,
	0x02, 0x0a, 0x0d, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x65,
	0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xae, 0x01, 0x0a,
	0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x61, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x31, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55,
	0x72, 0x69, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x10, 0x02, 0x22, 0x38, 0x0a,
	0x08, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3e, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x69,
	0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71,
	0x2e, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66,
	0x6f, 0x48, 0x61, 0x73, 0x68, 0x22, 0x24, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x10, 0x01, 0x22, 0x5d, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x73, 0x70, 0x12, 0x2b,
	0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x67, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x22, 0x3f, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x22, 0x33, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x40, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3d, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3d, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x42, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x12, 0x2b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x0f, 0x42,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x22, 0x49, 0x0a, 0x0f, 0x42,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x36,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x3d, 0x0a, 0x0e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66,
	0x6f, 0x48, 0x61, 0x73, 0x68, 0x22, 0x33, 0x0a, 0x0e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x02, 0x74, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x74, 0x69, 0x22, 0x3f, 0x0a, 0x10, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x22, 0x12, 0x0a, 0x10, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22,
	0x3e, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x62, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x22, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x22, 0x5e, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08,
	0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2a, 0x8e, 0x01, 0x0a, 0x0b, 0x42, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10,
	0x04, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x05, 0x12, 0x18,
	0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x10, 0x07, 0x32, 0xc2, 0x04, 0x0a, 0x09, 0x42, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65, 0x12,
	0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x38, 0x0a,
	0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74,
	0x55, 0x72, 0x69, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x42, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0a, 0x4f, 0x6e, 0x42, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x0f, 0x4f, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x28, 0x01, 0x30, 0x01, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x2f, 0x70, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bt_proto_rawDescOnce sync.Once
	file_bt_proto_rawDescData = file_bt_proto_rawDesc
)

func file_bt_proto_rawDescGZIP() []byte {
	file_bt_proto_rawDescOnce.Do(func() {
		file_bt_proto_rawDescData = protoimpl.X.CompressGZIP(file_bt_proto_rawDescData)
	})
	return file_bt_proto_rawDescData
}

var file_bt_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_bt_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_bt_proto_goTypes = []interface{}{
	(BtStateEnum)(0),             // 0: prpc.BtStateEnum
	(BtFile_State)(0),            // 1: prpc.BtFile.State
	(DownloadRequest_ReqType)(0), // 2: prpc.DownloadRequest.ReqType
	(GetMagnetUriReq_ReqType)(0), // 3: prpc.GetMagnetUriReq.ReqType
	(*BtFile)(nil),               // 4: prpc.BtFile
	(*TorrentInfo)(nil),          // 5: prpc.TorrentInfo
	(*TorrentStatus)(nil),        // 6: prpc.TorrentStatus
	(*DownloadRequest)(nil),      // 7: prpc.DownloadRequest
	(*InfoHash)(nil),             // 8: prpc.InfoHash
	(*DownloadRespone)(nil),      // 9: prpc.DownloadRespone
	(*GetMagnetUriReq)(nil),      // 10: prpc.GetMagnetUriReq
	(*GetMagnetUriRsp)(nil),      // 11: prpc.GetMagnetUriRsp
	(*GetResumeDataReq)(nil),     // 12: prpc.GetResumeDataReq
	(*GetResumeDataRsp)(nil),     // 13: prpc.GetResumeDataRsp
	(*GetTorrentInfoReq)(nil),    // 14: prpc.GetTorrentInfoReq
	(*GetTorrentInfoRsp)(nil),    // 15: prpc.GetTorrentInfoRsp
	(*GetBtStatusReq)(nil),       // 16: prpc.GetBtStatusReq
	(*GetBtStatusRsp)(nil),       // 17: prpc.GetBtStatusRsp
	(*BtStatusRequest)(nil),      // 18: prpc.BtStatusRequest
	(*BtStatusRespone)(nil),      // 19: prpc.BtStatusRespone
	(*TorrentInfoReq)(nil),       // 20: prpc.TorrentInfoReq
	(*TorrentInfoRes)(nil),       // 21: prpc.TorrentInfoRes
	(*RemoveTorrentReq)(nil),     // 22: prpc.RemoveTorrentReq
	(*RemoveTorrentRes)(nil),     // 23: prpc.RemoveTorrentRes
	(*FileProgressReq)(nil),      // 24: prpc.FileProgressReq
	(*FileProgressRes)(nil),      // 25: prpc.FileProgressRes
	(*FileCompletedReq)(nil),     // 26: prpc.FileCompletedReq
	(*FileCompletedRes)(nil),     // 27: prpc.FileCompletedRes
}
var file_bt_proto_depIdxs = []int32{
	1,  // 0: prpc.BtFile.st:type_name -> prpc.BtFile.State
	8,  // 1: prpc.TorrentInfo.info_hash:type_name -> prpc.InfoHash
	4,  // 2: prpc.TorrentInfo.files:type_name -> prpc.BtFile
	8,  // 3: prpc.TorrentStatus.info_hash:type_name -> prpc.InfoHash
	0,  // 4: prpc.TorrentStatus.state:type_name -> prpc.BtStateEnum
	2,  // 5: prpc.DownloadRequest.type:type_name -> prpc.DownloadRequest.ReqType
	8,  // 6: prpc.DownloadRespone.info_hash:type_name -> prpc.InfoHash
	3,  // 7: prpc.GetMagnetUriReq.type:type_name -> prpc.GetMagnetUriReq.ReqType
	8,  // 8: prpc.GetMagnetUriReq.info_hash:type_name -> prpc.InfoHash
	8,  // 9: prpc.GetMagnetUriRsp.info_hash:type_name -> prpc.InfoHash
	8,  // 10: prpc.GetResumeDataReq.info_hash:type_name -> prpc.InfoHash
	8,  // 11: prpc.GetTorrentInfoReq.info_hash:type_name -> prpc.InfoHash
	5,  // 12: prpc.GetTorrentInfoRsp.torrent_info:type_name -> prpc.TorrentInfo
	8,  // 13: prpc.GetBtStatusReq.info_hash:type_name -> prpc.InfoHash
	6,  // 14: prpc.GetBtStatusRsp.status:type_name -> prpc.TorrentStatus
	8,  // 15: prpc.BtStatusRequest.info_hash:type_name -> prpc.InfoHash
	6,  // 16: prpc.BtStatusRespone.status_array:type_name -> prpc.TorrentStatus
	8,  // 17: prpc.TorrentInfoReq.info_hash:type_name -> prpc.InfoHash
	5,  // 18: prpc.TorrentInfoRes.ti:type_name -> prpc.TorrentInfo
	8,  // 19: prpc.RemoveTorrentReq.info_hash:type_name -> prpc.InfoHash
	8,  // 20: prpc.FileProgressReq.info_hash:type_name -> prpc.InfoHash
	8,  // 21: prpc.FileProgressRes.info_hash:type_name -> prpc.InfoHash
	4,  // 22: prpc.FileProgressRes.files:type_name -> prpc.BtFile
	8,  // 23: prpc.FileCompletedRes.info_hash:type_name -> prpc.InfoHash
	7,  // 24: prpc.BtService.Parse:input_type -> prpc.DownloadRequest
	7,  // 25: prpc.BtService.Download:input_type -> prpc.DownloadRequest
	22, // 26: prpc.BtService.RemoveTorrent:input_type -> prpc.RemoveTorrentReq
	10, // 27: prpc.BtService.GetMagnetUri:input_type -> prpc.GetMagnetUriReq
	12, // 28: prpc.BtService.GetResumeData:input_type -> prpc.GetResumeDataReq
	14, // 29: prpc.BtService.GetTorrentInfo:input_type -> prpc.GetTorrentInfoReq
	16, // 30: prpc.BtService.GetBtStatus:input_type -> prpc.GetBtStatusReq
	18, // 31: prpc.BtService.OnBtStatus:input_type -> prpc.BtStatusRequest
	26, // 32: prpc.BtService.OnFileCompleted:input_type -> prpc.FileCompletedReq
	9,  // 33: prpc.BtService.Parse:output_type -> prpc.DownloadRespone
	9,  // 34: prpc.BtService.Download:output_type -> prpc.DownloadRespone
	23, // 35: prpc.BtService.RemoveTorrent:output_type -> prpc.RemoveTorrentRes
	11, // 36: prpc.BtService.GetMagnetUri:output_type -> prpc.GetMagnetUriRsp
	13, // 37: prpc.BtService.GetResumeData:output_type -> prpc.GetResumeDataRsp
	15, // 38: prpc.BtService.GetTorrentInfo:output_type -> prpc.GetTorrentInfoRsp
	17, // 39: prpc.BtService.GetBtStatus:output_type -> prpc.GetBtStatusRsp
	19, // 40: prpc.BtService.OnBtStatus:output_type -> prpc.BtStatusRespone
	27, // 41: prpc.BtService.OnFileCompleted:output_type -> prpc.FileCompletedRes
	33, // [33:42] is the sub-list for method output_type
	24, // [24:33] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_bt_proto_init() }
func file_bt_proto_init() {
	if File_bt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BtFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorrentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorrentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMagnetUriReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMagnetUriRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResumeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResumeDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTorrentInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTorrentInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBtStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBtStatusRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BtStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BtStatusRespone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorrentInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorrentInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTorrentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTorrentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileProgressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileProgressRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCompletedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bt_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCompletedRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bt_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bt_proto_goTypes,
		DependencyIndexes: file_bt_proto_depIdxs,
		EnumInfos:         file_bt_proto_enumTypes,
		MessageInfos:      file_bt_proto_msgTypes,
	}.Build()
	File_bt_proto = out.File
	file_bt_proto_rawDesc = nil
	file_bt_proto_goTypes = nil
	file_bt_proto_depIdxs = nil
}

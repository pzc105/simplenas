// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: user.proto

package prpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Room_Type int32

const (
	Room_Unknown  Room_Type = 0
	Room_Category Room_Type = 1
	Room_Danmaku  Room_Type = 2
)

// Enum value maps for Room_Type.
var (
	Room_Type_name = map[int32]string{
		0: "Unknown",
		1: "Category",
		2: "Danmaku",
	}
	Room_Type_value = map[string]int32{
		"Unknown":  0,
		"Category": 1,
		"Danmaku":  2,
	}
)

func (x Room_Type) Enum() *Room_Type {
	p := new(Room_Type)
	*p = x
	return p
}

func (x Room_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Room_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[0].Descriptor()
}

func (Room_Type) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[0]
}

func (x Room_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Room_Type.Descriptor instead.
func (Room_Type) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{37, 0}
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email           string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Passwd          string `protobuf:"bytes,4,opt,name=passwd,proto3" json:"passwd,omitempty"`
	HomeDirectoryId int64  `protobuf:"varint,5,opt,name=home_directory_id,json=homeDirectoryId,proto3" json:"home_directory_id,omitempty"`
	MagnetRootId    int64  `protobuf:"varint,6,opt,name=magnet_root_id,json=magnetRootId,proto3" json:"magnet_root_id,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *UserInfo) GetHomeDirectoryId() int64 {
	if x != nil {
		return x.HomeDirectoryId
	}
	return 0
}

func (x *UserInfo) GetMagnetRootId() int64 {
	if x != nil {
		return x.MagnetRootId
	}
	return 0
}

type RegisterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *RegisterInfo) Reset() {
	*x = RegisterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterInfo) ProtoMessage() {}

func (x *RegisterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterInfo.ProtoReflect.Descriptor instead.
func (*RegisterInfo) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterInfo) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type RegisterRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterRet) Reset() {
	*x = RegisterRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRet) ProtoMessage() {}

func (x *RegisterRet) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRet.ProtoReflect.Descriptor instead.
func (*RegisterRet) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

type EmailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailInfo) Reset() {
	*x = EmailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailInfo) ProtoMessage() {}

func (x *EmailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailInfo.ProtoReflect.Descriptor instead.
func (*EmailInfo) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *EmailInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type IsUsedEmailRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsUsedEmailRet) Reset() {
	*x = IsUsedEmailRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUsedEmailRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUsedEmailRet) ProtoMessage() {}

func (x *IsUsedEmailRet) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUsedEmailRet.ProtoReflect.Descriptor instead.
func (*IsUsedEmailRet) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

type LoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email      string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Passwd     string `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	RememberMe bool   `protobuf:"varint,3,opt,name=remember_me,json=rememberMe,proto3" json:"remember_me,omitempty"`
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *LoginInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginInfo) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *LoginInfo) GetRememberMe() bool {
	if x != nil {
		return x.RememberMe
	}
	return false
}

type LoginRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string    `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserInfo   *UserInfo `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	RememberMe bool      `protobuf:"varint,3,opt,name=remember_me,json=rememberMe,proto3" json:"remember_me,omitempty"`
}

func (x *LoginRet) Reset() {
	*x = LoginRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRet) ProtoMessage() {}

func (x *LoginRet) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRet.ProtoReflect.Descriptor instead.
func (*LoginRet) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *LoginRet) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginRet) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *LoginRet) GetRememberMe() bool {
	if x != nil {
		return x.RememberMe
	}
	return false
}

type ChangePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	OldPasswd string `protobuf:"bytes,2,opt,name=old_passwd,json=oldPasswd,proto3" json:"old_passwd,omitempty"`
	NewPasswd string `protobuf:"bytes,3,opt,name=new_passwd,json=newPasswd,proto3" json:"new_passwd,omitempty"`
}

func (x *ChangePasswordReq) Reset() {
	*x = ChangePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordReq) ProtoMessage() {}

func (x *ChangePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordReq.ProtoReflect.Descriptor instead.
func (*ChangePasswordReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *ChangePasswordReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ChangePasswordReq) GetOldPasswd() string {
	if x != nil {
		return x.OldPasswd
	}
	return ""
}

func (x *ChangePasswordReq) GetNewPasswd() string {
	if x != nil {
		return x.NewPasswd
	}
	return ""
}

type ChangePasswordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangePasswordRsp) Reset() {
	*x = ChangePasswordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRsp) ProtoMessage() {}

func (x *ChangePasswordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRsp.ProtoReflect.Descriptor instead.
func (*ChangePasswordRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

type NewCategoryItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TypeId       CategoryItem_Type `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3,enum=prpc.CategoryItem_Type" json:"type_id,omitempty"`
	ResourcePath string            `protobuf:"bytes,3,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	Introduce    string            `protobuf:"bytes,4,opt,name=introduce,proto3" json:"introduce,omitempty"`
	ParentId     int64             `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
}

func (x *NewCategoryItemReq) Reset() {
	*x = NewCategoryItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCategoryItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCategoryItemReq) ProtoMessage() {}

func (x *NewCategoryItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCategoryItemReq.ProtoReflect.Descriptor instead.
func (*NewCategoryItemReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *NewCategoryItemReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewCategoryItemReq) GetTypeId() CategoryItem_Type {
	if x != nil {
		return x.TypeId
	}
	return CategoryItem_Unknown
}

func (x *NewCategoryItemReq) GetResourcePath() string {
	if x != nil {
		return x.ResourcePath
	}
	return ""
}

func (x *NewCategoryItemReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *NewCategoryItemReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type NewCategoryItemRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewCategoryItemRes) Reset() {
	*x = NewCategoryItemRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCategoryItemRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCategoryItemRes) ProtoMessage() {}

func (x *NewCategoryItemRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCategoryItemRes.ProtoReflect.Descriptor instead.
func (*NewCategoryItemRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

type DelCategoryItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *DelCategoryItemReq) Reset() {
	*x = DelCategoryItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCategoryItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCategoryItemReq) ProtoMessage() {}

func (x *DelCategoryItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCategoryItemReq.ProtoReflect.Descriptor instead.
func (*DelCategoryItemReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *DelCategoryItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type DelCategoryItemRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCategoryItemRes) Reset() {
	*x = DelCategoryItemRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCategoryItemRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCategoryItemRes) ProtoMessage() {}

func (x *DelCategoryItemRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCategoryItemRes.ProtoReflect.Descriptor instead.
func (*DelCategoryItemRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

type RenameItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  int64  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	NewName string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *RenameItemReq) Reset() {
	*x = RenameItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameItemReq) ProtoMessage() {}

func (x *RenameItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameItemReq.ProtoReflect.Descriptor instead.
func (*RenameItemReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *RenameItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *RenameItemReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type RenameItemRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RenameItemRes) Reset() {
	*x = RenameItemRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameItemRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameItemRes) ProtoMessage() {}

func (x *RenameItemRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameItemRes.ProtoReflect.Descriptor instead.
func (*RenameItemRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

type QuerySubItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId int64  `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	ShareId  string `protobuf:"bytes,2,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	PageNum  int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	Rows     int32  `protobuf:"varint,4,opt,name=rows,proto3" json:"rows,omitempty"`
	Desc     bool   `protobuf:"varint,5,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *QuerySubItemsReq) Reset() {
	*x = QuerySubItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySubItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubItemsReq) ProtoMessage() {}

func (x *QuerySubItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubItemsReq.ProtoReflect.Descriptor instead.
func (*QuerySubItemsReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *QuerySubItemsReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QuerySubItemsReq) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *QuerySubItemsReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QuerySubItemsReq) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *QuerySubItemsReq) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type QuerySubItemsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentItem    *CategoryItem   `protobuf:"bytes,1,opt,name=parent_item,json=parentItem,proto3" json:"parent_item,omitempty"`
	Items         []*CategoryItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	TotalRowCount int32           `protobuf:"varint,3,opt,name=total_row_count,json=totalRowCount,proto3" json:"total_row_count,omitempty"`
}

func (x *QuerySubItemsRes) Reset() {
	*x = QuerySubItemsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySubItemsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubItemsRes) ProtoMessage() {}

func (x *QuerySubItemsRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubItemsRes.ProtoReflect.Descriptor instead.
func (*QuerySubItemsRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *QuerySubItemsRes) GetParentItem() *CategoryItem {
	if x != nil {
		return x.ParentItem
	}
	return nil
}

func (x *QuerySubItemsRes) GetItems() []*CategoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *QuerySubItemsRes) GetTotalRowCount() int32 {
	if x != nil {
		return x.TotalRowCount
	}
	return 0
}

type QueryBtVideosReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
}

func (x *QueryBtVideosReq) Reset() {
	*x = QueryBtVideosReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBtVideosReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBtVideosReq) ProtoMessage() {}

func (x *QueryBtVideosReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBtVideosReq.ProtoReflect.Descriptor instead.
func (*QueryBtVideosReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *QueryBtVideosReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type BtFileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIndex int32          `protobuf:"varint,1,opt,name=file_index,json=fileIndex,proto3" json:"file_index,omitempty"`
	Meta      *VideoMetadata `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *BtFileMetadata) Reset() {
	*x = BtFileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BtFileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BtFileMetadata) ProtoMessage() {}

func (x *BtFileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BtFileMetadata.ProtoReflect.Descriptor instead.
func (*BtFileMetadata) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *BtFileMetadata) GetFileIndex() int32 {
	if x != nil {
		return x.FileIndex
	}
	return 0
}

func (x *BtFileMetadata) GetMeta() *VideoMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

type QueryBtVideosRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*BtFileMetadata `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryBtVideosRes) Reset() {
	*x = QueryBtVideosRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBtVideosRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBtVideosRes) ProtoMessage() {}

func (x *QueryBtVideosRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBtVideosRes.ProtoReflect.Descriptor instead.
func (*QueryBtVideosRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *QueryBtVideosRes) GetData() []*BtFileMetadata {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddBtVideosReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoHash       *InfoHash `protobuf:"bytes,1,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`
	FileIndexes    []int32   `protobuf:"varint,2,rep,packed,name=file_indexes,json=fileIndexes,proto3" json:"file_indexes,omitempty"`
	CategoryItemId int64     `protobuf:"varint,3,opt,name=category_item_id,json=categoryItemId,proto3" json:"category_item_id,omitempty"`
}

func (x *AddBtVideosReq) Reset() {
	*x = AddBtVideosReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBtVideosReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBtVideosReq) ProtoMessage() {}

func (x *AddBtVideosReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBtVideosReq.ProtoReflect.Descriptor instead.
func (*AddBtVideosReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *AddBtVideosReq) GetInfoHash() *InfoHash {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *AddBtVideosReq) GetFileIndexes() []int32 {
	if x != nil {
		return x.FileIndexes
	}
	return nil
}

func (x *AddBtVideosReq) GetCategoryItemId() int64 {
	if x != nil {
		return x.CategoryItemId
	}
	return 0
}

type AddBtVideosRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBtVideosRes) Reset() {
	*x = AddBtVideosRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBtVideosRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBtVideosRes) ProtoMessage() {}

func (x *AddBtVideosRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBtVideosRes.ProtoReflect.Descriptor instead.
func (*AddBtVideosRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

type QueryItemInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  int64  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ShareId string `protobuf:"bytes,2,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *QueryItemInfoReq) Reset() {
	*x = QueryItemInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryItemInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItemInfoReq) ProtoMessage() {}

func (x *QueryItemInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItemInfoReq.ProtoReflect.Descriptor instead.
func (*QueryItemInfoReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *QueryItemInfoReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *QueryItemInfoReq) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type QueryItemInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemInfo  *CategoryItem `protobuf:"bytes,1,opt,name=item_info,json=itemInfo,proto3" json:"item_info,omitempty"`
	VideoInfo *Video        `protobuf:"bytes,2,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
}

func (x *QueryItemInfoRes) Reset() {
	*x = QueryItemInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryItemInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItemInfoRes) ProtoMessage() {}

func (x *QueryItemInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItemInfoRes.ProtoReflect.Descriptor instead.
func (*QueryItemInfoRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *QueryItemInfoRes) GetItemInfo() *CategoryItem {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

func (x *QueryItemInfoRes) GetVideoInfo() *Video {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

type ShareItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *ShareItemReq) Reset() {
	*x = ShareItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareItemReq) ProtoMessage() {}

func (x *ShareItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareItemReq.ProtoReflect.Descriptor instead.
func (*ShareItemReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24}
}

func (x *ShareItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ShareItemRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  int64  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ShareId string `protobuf:"bytes,2,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *ShareItemRes) Reset() {
	*x = ShareItemRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareItemRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareItemRes) ProtoMessage() {}

func (x *ShareItemRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareItemRes.ProtoReflect.Descriptor instead.
func (*ShareItemRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{25}
}

func (x *ShareItemRes) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ShareItemRes) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type QuerySharedItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *QuerySharedItemsReq) Reset() {
	*x = QuerySharedItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySharedItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySharedItemsReq) ProtoMessage() {}

func (x *QuerySharedItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySharedItemsReq.ProtoReflect.Descriptor instead.
func (*QuerySharedItemsReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{26}
}

func (x *QuerySharedItemsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QuerySharedItemsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SharedItems []*SharedItem `protobuf:"bytes,1,rep,name=shared_items,json=sharedItems,proto3" json:"shared_items,omitempty"`
}

func (x *QuerySharedItemsRes) Reset() {
	*x = QuerySharedItemsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySharedItemsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySharedItemsRes) ProtoMessage() {}

func (x *QuerySharedItemsRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySharedItemsRes.ProtoReflect.Descriptor instead.
func (*QuerySharedItemsRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{27}
}

func (x *QuerySharedItemsRes) GetSharedItems() []*SharedItem {
	if x != nil {
		return x.SharedItems
	}
	return nil
}

type DelSharedItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareId string `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *DelSharedItemReq) Reset() {
	*x = DelSharedItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSharedItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSharedItemReq) ProtoMessage() {}

func (x *DelSharedItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSharedItemReq.ProtoReflect.Descriptor instead.
func (*DelSharedItemReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{28}
}

func (x *DelSharedItemReq) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type DelSharedItemRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSharedItemRes) Reset() {
	*x = DelSharedItemRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSharedItemRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSharedItemRes) ProtoMessage() {}

func (x *DelSharedItemRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSharedItemRes.ProtoReflect.Descriptor instead.
func (*DelSharedItemRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{29}
}

type SubtitleFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SubtitleFile) Reset() {
	*x = SubtitleFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubtitleFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtitleFile) ProtoMessage() {}

func (x *SubtitleFile) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubtitleFile.ProtoReflect.Descriptor instead.
func (*SubtitleFile) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{30}
}

func (x *SubtitleFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubtitleFile) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type UploadSubtitleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId    int64           `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Subtitles []*SubtitleFile `protobuf:"bytes,2,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
}

func (x *UploadSubtitleReq) Reset() {
	*x = UploadSubtitleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSubtitleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSubtitleReq) ProtoMessage() {}

func (x *UploadSubtitleReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSubtitleReq.ProtoReflect.Descriptor instead.
func (*UploadSubtitleReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{31}
}

func (x *UploadSubtitleReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *UploadSubtitleReq) GetSubtitles() []*SubtitleFile {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

type UploadSubtitleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadSubtitleRes) Reset() {
	*x = UploadSubtitleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSubtitleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSubtitleRes) ProtoMessage() {}

func (x *UploadSubtitleRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSubtitleRes.ProtoReflect.Descriptor instead.
func (*UploadSubtitleRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{32}
}

type GetBtMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req *DownloadRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *GetBtMetaReq) Reset() {
	*x = GetBtMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBtMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBtMetaReq) ProtoMessage() {}

func (x *GetBtMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBtMetaReq.ProtoReflect.Descriptor instead.
func (*GetBtMetaReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{33}
}

func (x *GetBtMetaReq) GetReq() *DownloadRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

type GetBtMetaRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TorrentInfo *TorrentInfo `protobuf:"bytes,1,opt,name=torrent_info,json=torrentInfo,proto3" json:"torrent_info,omitempty"`
}

func (x *GetBtMetaRsp) Reset() {
	*x = GetBtMetaRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBtMetaRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBtMetaRsp) ProtoMessage() {}

func (x *GetBtMetaRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBtMetaRsp.ProtoReflect.Descriptor instead.
func (*GetBtMetaRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{34}
}

func (x *GetBtMetaRsp) GetTorrentInfo() *TorrentInfo {
	if x != nil {
		return x.TorrentInfo
	}
	return nil
}

type NewBtHlsTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req              *DownloadRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	CategoryParentId int64            `protobuf:"varint,2,opt,name=category_parent_id,json=categoryParentId,proto3" json:"category_parent_id,omitempty"`
	RecursiveNewPath bool             `protobuf:"varint,3,opt,name=recursive_new_path,json=recursiveNewPath,proto3" json:"recursive_new_path,omitempty"`
}

func (x *NewBtHlsTaskReq) Reset() {
	*x = NewBtHlsTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBtHlsTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBtHlsTaskReq) ProtoMessage() {}

func (x *NewBtHlsTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBtHlsTaskReq.ProtoReflect.Descriptor instead.
func (*NewBtHlsTaskReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{35}
}

func (x *NewBtHlsTaskReq) GetReq() *DownloadRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *NewBtHlsTaskReq) GetCategoryParentId() int64 {
	if x != nil {
		return x.CategoryParentId
	}
	return 0
}

func (x *NewBtHlsTaskReq) GetRecursiveNewPath() bool {
	if x != nil {
		return x.RecursiveNewPath
	}
	return false
}

type NewBtHlsTaskRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewBtHlsTaskRsp) Reset() {
	*x = NewBtHlsTaskRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBtHlsTaskRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBtHlsTaskRsp) ProtoMessage() {}

func (x *NewBtHlsTaskRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBtHlsTaskRsp.ProtoReflect.Descriptor instead.
func (*NewBtHlsTaskRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{36}
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Room_Type `protobuf:"varint,1,opt,name=type,proto3,enum=prpc.Room_Type" json:"type,omitempty"`
	Id   int64     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{37}
}

func (x *Room) GetType() Room_Type {
	if x != nil {
		return x.Type
	}
	return Room_Unknown
}

func (x *Room) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type JoinChatRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room *Room `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *JoinChatRoomReq) Reset() {
	*x = JoinChatRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChatRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChatRoomReq) ProtoMessage() {}

func (x *JoinChatRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChatRoomReq.ProtoReflect.Descriptor instead.
func (*JoinChatRoomReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{38}
}

func (x *JoinChatRoomReq) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	SentTime int64  `protobuf:"varint,3,opt,name=sent_time,json=sentTime,proto3" json:"sent_time,omitempty"`
	Msg      string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{39}
}

func (x *ChatMessage) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChatMessage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ChatMessage) GetSentTime() int64 {
	if x != nil {
		return x.SentTime
	}
	return 0
}

func (x *ChatMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type JoinChatRoomRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room     *Room          `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	ChatMsgs []*ChatMessage `protobuf:"bytes,2,rep,name=chat_msgs,json=chatMsgs,proto3" json:"chat_msgs,omitempty"`
}

func (x *JoinChatRoomRes) Reset() {
	*x = JoinChatRoomRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChatRoomRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChatRoomRes) ProtoMessage() {}

func (x *JoinChatRoomRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChatRoomRes.ProtoReflect.Descriptor instead.
func (*JoinChatRoomRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{40}
}

func (x *JoinChatRoomRes) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *JoinChatRoomRes) GetChatMsgs() []*ChatMessage {
	if x != nil {
		return x.ChatMsgs
	}
	return nil
}

type SendMsg2ChatRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room    *Room        `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	ChatMsg *ChatMessage `protobuf:"bytes,2,opt,name=chat_msg,json=chatMsg,proto3" json:"chat_msg,omitempty"`
}

func (x *SendMsg2ChatRoomReq) Reset() {
	*x = SendMsg2ChatRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsg2ChatRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsg2ChatRoomReq) ProtoMessage() {}

func (x *SendMsg2ChatRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsg2ChatRoomReq.ProtoReflect.Descriptor instead.
func (*SendMsg2ChatRoomReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{41}
}

func (x *SendMsg2ChatRoomReq) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *SendMsg2ChatRoomReq) GetChatMsg() *ChatMessage {
	if x != nil {
		return x.ChatMsg
	}
	return nil
}

type SendMsg2ChatRoomRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendMsg2ChatRoomRes) Reset() {
	*x = SendMsg2ChatRoomRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsg2ChatRoomRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsg2ChatRoomRes) ProtoMessage() {}

func (x *SendMsg2ChatRoomRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsg2ChatRoomRes.ProtoReflect.Descriptor instead.
func (*SendMsg2ChatRoomRes) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{42}
}

type AddMagnetCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId     int64  `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	CategoryName string `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	Introduce    string `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
}

func (x *AddMagnetCategoryReq) Reset() {
	*x = AddMagnetCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMagnetCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMagnetCategoryReq) ProtoMessage() {}

func (x *AddMagnetCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMagnetCategoryReq.ProtoReflect.Descriptor instead.
func (*AddMagnetCategoryReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{43}
}

func (x *AddMagnetCategoryReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddMagnetCategoryReq) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *AddMagnetCategoryReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type AddMagnetCategoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMagnetCategoryRsp) Reset() {
	*x = AddMagnetCategoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMagnetCategoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMagnetCategoryRsp) ProtoMessage() {}

func (x *AddMagnetCategoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMagnetCategoryRsp.ProtoReflect.Descriptor instead.
func (*AddMagnetCategoryRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{44}
}

type AddMagnetUriReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int64  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	MagnetUri  string `protobuf:"bytes,2,opt,name=magnet_uri,json=magnetUri,proto3" json:"magnet_uri,omitempty"`
	Introduce  string `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
}

func (x *AddMagnetUriReq) Reset() {
	*x = AddMagnetUriReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMagnetUriReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMagnetUriReq) ProtoMessage() {}

func (x *AddMagnetUriReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMagnetUriReq.ProtoReflect.Descriptor instead.
func (*AddMagnetUriReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{45}
}

func (x *AddMagnetUriReq) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AddMagnetUriReq) GetMagnetUri() string {
	if x != nil {
		return x.MagnetUri
	}
	return ""
}

func (x *AddMagnetUriReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type AddMagnetUriRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMagnetUriRsp) Reset() {
	*x = AddMagnetUriRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMagnetUriRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMagnetUriRsp) ProtoMessage() {}

func (x *AddMagnetUriRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMagnetUriRsp.ProtoReflect.Descriptor instead.
func (*AddMagnetUriRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{46}
}

type QueryMagnetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId   int64  `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	SearchCond string `protobuf:"bytes,2,opt,name=search_cond,json=searchCond,proto3" json:"search_cond,omitempty"`
	PageNum    int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	Rows       int32  `protobuf:"varint,4,opt,name=rows,proto3" json:"rows,omitempty"`
}

func (x *QueryMagnetReq) Reset() {
	*x = QueryMagnetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMagnetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMagnetReq) ProtoMessage() {}

func (x *QueryMagnetReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMagnetReq.ProtoReflect.Descriptor instead.
func (*QueryMagnetReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{47}
}

func (x *QueryMagnetReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryMagnetReq) GetSearchCond() string {
	if x != nil {
		return x.SearchCond
	}
	return ""
}

func (x *QueryMagnetReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMagnetReq) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

type QueryMagnetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items         []*CategoryItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalRowCount int32           `protobuf:"varint,2,opt,name=total_row_count,json=totalRowCount,proto3" json:"total_row_count,omitempty"`
}

func (x *QueryMagnetRsp) Reset() {
	*x = QueryMagnetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMagnetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMagnetRsp) ProtoMessage() {}

func (x *QueryMagnetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMagnetRsp.ProtoReflect.Descriptor instead.
func (*QueryMagnetRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{48}
}

func (x *QueryMagnetRsp) GetItems() []*CategoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *QueryMagnetRsp) GetTotalRowCount() int32 {
	if x != nil {
		return x.TotalRowCount
	}
	return 0
}

type DelMagnetCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelMagnetCategoryReq) Reset() {
	*x = DelMagnetCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMagnetCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMagnetCategoryReq) ProtoMessage() {}

func (x *DelMagnetCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMagnetCategoryReq.ProtoReflect.Descriptor instead.
func (*DelMagnetCategoryReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{49}
}

func (x *DelMagnetCategoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelMagnetCategoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMagnetCategoryRsp) Reset() {
	*x = DelMagnetCategoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMagnetCategoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMagnetCategoryRsp) ProtoMessage() {}

func (x *DelMagnetCategoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMagnetCategoryRsp.ProtoReflect.Descriptor instead.
func (*DelMagnetCategoryRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{50}
}

type GetTorrentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTorrentsReq) Reset() {
	*x = GetTorrentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentsReq) ProtoMessage() {}

func (x *GetTorrentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentsReq.ProtoReflect.Descriptor instead.
func (*GetTorrentsReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{51}
}

type GetTorrentsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TorrentInfo []*TorrentInfo `protobuf:"bytes,1,rep,name=torrent_info,json=torrentInfo,proto3" json:"torrent_info,omitempty"`
}

func (x *GetTorrentsRsp) Reset() {
	*x = GetTorrentsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentsRsp) ProtoMessage() {}

func (x *GetTorrentsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentsRsp.ProtoReflect.Descriptor instead.
func (*GetTorrentsRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{52}
}

func (x *GetTorrentsRsp) GetTorrentInfo() []*TorrentInfo {
	if x != nil {
		return x.TorrentInfo
	}
	return nil
}

type RenameBtVideoNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  int64  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RefName string `protobuf:"bytes,2,opt,name=ref_name,json=refName,proto3" json:"ref_name,omitempty"`
}

func (x *RenameBtVideoNameReq) Reset() {
	*x = RenameBtVideoNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameBtVideoNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameBtVideoNameReq) ProtoMessage() {}

func (x *RenameBtVideoNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameBtVideoNameReq.ProtoReflect.Descriptor instead.
func (*RenameBtVideoNameReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{53}
}

func (x *RenameBtVideoNameReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *RenameBtVideoNameReq) GetRefName() string {
	if x != nil {
		return x.RefName
	}
	return ""
}

type RenameBtVideoNameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RenameBtVideoNameRsp) Reset() {
	*x = RenameBtVideoNameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameBtVideoNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameBtVideoNameRsp) ProtoMessage() {}

func (x *RenameBtVideoNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameBtVideoNameRsp.ProtoReflect.Descriptor instead.
func (*RenameBtVideoNameRsp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{54}
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x72,
	0x70, 0x63, 0x1a, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x08, 0x62, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61,
	0x67, 0x6e, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0c, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x74, 0x22, 0x21, 0x0a, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x49, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x22, 0x5a, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x22, 0x6e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x22, 0x67, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x22, 0x13, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0xba, 0x01, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x43, 0x0a,
	0x0d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x62,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x22, 0x99, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x62,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x3f, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x58, 0x0a, 0x0e, 0x42, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x10, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x09, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08,
	0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x42, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x22,
	0x6f, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x27, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x0c, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2d, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x11, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22,
	0x37, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12,
	0x27, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x96,
	0x01, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x42, 0x74, 0x48, 0x6c, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x27, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65,
	0x4e, 0x65, 0x77, 0x50, 0x61, 0x74, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x42, 0x74,
	0x48, 0x6c, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x6b, 0x0a, 0x04, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x61,
	0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x10, 0x02, 0x22, 0x31, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x72, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x61,
	0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67,
	0x73, 0x22, 0x63, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x32, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73,
	0x67, 0x32, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x76, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67, 0x6e,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x22, 0x6f, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x11,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x73,
	0x70, 0x22, 0x7d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x22, 0x62, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x67, 0x6e, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x73, 0x70, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x22, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a,
	0x0a, 0x14, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x73, 0x70, 0x32, 0x97, 0x0f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x73, 0x65, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x0f, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x74, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12,
	0x3f, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x3c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x6e, 0x65,
	0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0a, 0x4f, 0x6e, 0x42,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x65, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12,
	0x45, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x39,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x14, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x48,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x70,
	0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x11, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x42, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x73,
	0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x42, 0x74, 0x48, 0x6c, 0x73, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x74, 0x48, 0x6c,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x4e, 0x65, 0x77, 0x42, 0x74, 0x48, 0x6c, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x12,
	0x3e, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12,
	0x48, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x32, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x32, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x32, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x11, 0x41, 0x64, 0x64,
	0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67,
	0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x55, 0x72,
	0x69, 0x52, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x67,
	0x6e, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x70, 0x63,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x4d,
	0x61, 0x67, 0x6e, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x67, 0x6e, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x42, 0x08, 0x5a, 0x06,
	0x2e, 0x2f, 0x70, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_user_proto_goTypes = []interface{}{
	(Room_Type)(0),               // 0: prpc.Room.Type
	(*UserInfo)(nil),             // 1: prpc.UserInfo
	(*RegisterInfo)(nil),         // 2: prpc.RegisterInfo
	(*RegisterRet)(nil),          // 3: prpc.RegisterRet
	(*EmailInfo)(nil),            // 4: prpc.EmailInfo
	(*IsUsedEmailRet)(nil),       // 5: prpc.IsUsedEmailRet
	(*LoginInfo)(nil),            // 6: prpc.LoginInfo
	(*LoginRet)(nil),             // 7: prpc.LoginRet
	(*ChangePasswordReq)(nil),    // 8: prpc.ChangePasswordReq
	(*ChangePasswordRsp)(nil),    // 9: prpc.ChangePasswordRsp
	(*NewCategoryItemReq)(nil),   // 10: prpc.NewCategoryItemReq
	(*NewCategoryItemRes)(nil),   // 11: prpc.NewCategoryItemRes
	(*DelCategoryItemReq)(nil),   // 12: prpc.DelCategoryItemReq
	(*DelCategoryItemRes)(nil),   // 13: prpc.DelCategoryItemRes
	(*RenameItemReq)(nil),        // 14: prpc.RenameItemReq
	(*RenameItemRes)(nil),        // 15: prpc.RenameItemRes
	(*QuerySubItemsReq)(nil),     // 16: prpc.QuerySubItemsReq
	(*QuerySubItemsRes)(nil),     // 17: prpc.QuerySubItemsRes
	(*QueryBtVideosReq)(nil),     // 18: prpc.QueryBtVideosReq
	(*BtFileMetadata)(nil),       // 19: prpc.BtFileMetadata
	(*QueryBtVideosRes)(nil),     // 20: prpc.QueryBtVideosRes
	(*AddBtVideosReq)(nil),       // 21: prpc.AddBtVideosReq
	(*AddBtVideosRes)(nil),       // 22: prpc.AddBtVideosRes
	(*QueryItemInfoReq)(nil),     // 23: prpc.QueryItemInfoReq
	(*QueryItemInfoRes)(nil),     // 24: prpc.QueryItemInfoRes
	(*ShareItemReq)(nil),         // 25: prpc.ShareItemReq
	(*ShareItemRes)(nil),         // 26: prpc.ShareItemRes
	(*QuerySharedItemsReq)(nil),  // 27: prpc.QuerySharedItemsReq
	(*QuerySharedItemsRes)(nil),  // 28: prpc.QuerySharedItemsRes
	(*DelSharedItemReq)(nil),     // 29: prpc.DelSharedItemReq
	(*DelSharedItemRes)(nil),     // 30: prpc.DelSharedItemRes
	(*SubtitleFile)(nil),         // 31: prpc.SubtitleFile
	(*UploadSubtitleReq)(nil),    // 32: prpc.UploadSubtitleReq
	(*UploadSubtitleRes)(nil),    // 33: prpc.UploadSubtitleRes
	(*GetBtMetaReq)(nil),         // 34: prpc.GetBtMetaReq
	(*GetBtMetaRsp)(nil),         // 35: prpc.GetBtMetaRsp
	(*NewBtHlsTaskReq)(nil),      // 36: prpc.NewBtHlsTaskReq
	(*NewBtHlsTaskRsp)(nil),      // 37: prpc.NewBtHlsTaskRsp
	(*Room)(nil),                 // 38: prpc.Room
	(*JoinChatRoomReq)(nil),      // 39: prpc.JoinChatRoomReq
	(*ChatMessage)(nil),          // 40: prpc.ChatMessage
	(*JoinChatRoomRes)(nil),      // 41: prpc.JoinChatRoomRes
	(*SendMsg2ChatRoomReq)(nil),  // 42: prpc.SendMsg2ChatRoomReq
	(*SendMsg2ChatRoomRes)(nil),  // 43: prpc.SendMsg2ChatRoomRes
	(*AddMagnetCategoryReq)(nil), // 44: prpc.AddMagnetCategoryReq
	(*AddMagnetCategoryRsp)(nil), // 45: prpc.AddMagnetCategoryRsp
	(*AddMagnetUriReq)(nil),      // 46: prpc.AddMagnetUriReq
	(*AddMagnetUriRsp)(nil),      // 47: prpc.AddMagnetUriRsp
	(*QueryMagnetReq)(nil),       // 48: prpc.QueryMagnetReq
	(*QueryMagnetRsp)(nil),       // 49: prpc.QueryMagnetRsp
	(*DelMagnetCategoryReq)(nil), // 50: prpc.DelMagnetCategoryReq
	(*DelMagnetCategoryRsp)(nil), // 51: prpc.DelMagnetCategoryRsp
	(*GetTorrentsReq)(nil),       // 52: prpc.GetTorrentsReq
	(*GetTorrentsRsp)(nil),       // 53: prpc.GetTorrentsRsp
	(*RenameBtVideoNameReq)(nil), // 54: prpc.RenameBtVideoNameReq
	(*RenameBtVideoNameRsp)(nil), // 55: prpc.RenameBtVideoNameRsp
	(CategoryItem_Type)(0),       // 56: prpc.CategoryItem.Type
	(*CategoryItem)(nil),         // 57: prpc.CategoryItem
	(*InfoHash)(nil),             // 58: prpc.InfoHash
	(*VideoMetadata)(nil),        // 59: prpc.VideoMetadata
	(*Video)(nil),                // 60: prpc.Video
	(*SharedItem)(nil),           // 61: prpc.SharedItem
	(*DownloadRequest)(nil),      // 62: prpc.DownloadRequest
	(*TorrentInfo)(nil),          // 63: prpc.TorrentInfo
	(*RemoveTorrentReq)(nil),     // 64: prpc.RemoveTorrentReq
	(*GetMagnetUriReq)(nil),      // 65: prpc.GetMagnetUriReq
	(*BtStatusRequest)(nil),      // 66: prpc.BtStatusRequest
	(*DownloadRespone)(nil),      // 67: prpc.DownloadRespone
	(*RemoveTorrentRes)(nil),     // 68: prpc.RemoveTorrentRes
	(*GetMagnetUriRsp)(nil),      // 69: prpc.GetMagnetUriRsp
	(*BtStatusRespone)(nil),      // 70: prpc.BtStatusRespone
}
var file_user_proto_depIdxs = []int32{
	1,  // 0: prpc.RegisterInfo.user_info:type_name -> prpc.UserInfo
	1,  // 1: prpc.LoginRet.user_info:type_name -> prpc.UserInfo
	56, // 2: prpc.NewCategoryItemReq.type_id:type_name -> prpc.CategoryItem.Type
	57, // 3: prpc.QuerySubItemsRes.parent_item:type_name -> prpc.CategoryItem
	57, // 4: prpc.QuerySubItemsRes.items:type_name -> prpc.CategoryItem
	58, // 5: prpc.QueryBtVideosReq.info_hash:type_name -> prpc.InfoHash
	59, // 6: prpc.BtFileMetadata.meta:type_name -> prpc.VideoMetadata
	19, // 7: prpc.QueryBtVideosRes.data:type_name -> prpc.BtFileMetadata
	58, // 8: prpc.AddBtVideosReq.info_hash:type_name -> prpc.InfoHash
	57, // 9: prpc.QueryItemInfoRes.item_info:type_name -> prpc.CategoryItem
	60, // 10: prpc.QueryItemInfoRes.video_info:type_name -> prpc.Video
	61, // 11: prpc.QuerySharedItemsRes.shared_items:type_name -> prpc.SharedItem
	31, // 12: prpc.UploadSubtitleReq.subtitles:type_name -> prpc.SubtitleFile
	62, // 13: prpc.GetBtMetaReq.req:type_name -> prpc.DownloadRequest
	63, // 14: prpc.GetBtMetaRsp.torrent_info:type_name -> prpc.TorrentInfo
	62, // 15: prpc.NewBtHlsTaskReq.req:type_name -> prpc.DownloadRequest
	0,  // 16: prpc.Room.type:type_name -> prpc.Room.Type
	38, // 17: prpc.JoinChatRoomReq.room:type_name -> prpc.Room
	38, // 18: prpc.JoinChatRoomRes.room:type_name -> prpc.Room
	40, // 19: prpc.JoinChatRoomRes.chat_msgs:type_name -> prpc.ChatMessage
	38, // 20: prpc.SendMsg2ChatRoomReq.room:type_name -> prpc.Room
	40, // 21: prpc.SendMsg2ChatRoomReq.chat_msg:type_name -> prpc.ChatMessage
	57, // 22: prpc.QueryMagnetRsp.items:type_name -> prpc.CategoryItem
	63, // 23: prpc.GetTorrentsRsp.torrent_info:type_name -> prpc.TorrentInfo
	2,  // 24: prpc.UserService.Register:input_type -> prpc.RegisterInfo
	4,  // 25: prpc.UserService.IsUsedEmail:input_type -> prpc.EmailInfo
	6,  // 26: prpc.UserService.Login:input_type -> prpc.LoginInfo
	6,  // 27: prpc.UserService.FastLogin:input_type -> prpc.LoginInfo
	6,  // 28: prpc.UserService.IsLogined:input_type -> prpc.LoginInfo
	8,  // 29: prpc.UserService.ChangePassword:input_type -> prpc.ChangePasswordReq
	62, // 30: prpc.UserService.Download:input_type -> prpc.DownloadRequest
	64, // 31: prpc.UserService.RemoveTorrent:input_type -> prpc.RemoveTorrentReq
	65, // 32: prpc.UserService.GetMagnetUri:input_type -> prpc.GetMagnetUriReq
	52, // 33: prpc.UserService.GetTorrents:input_type -> prpc.GetTorrentsReq
	66, // 34: prpc.UserService.OnBtStatus:input_type -> prpc.BtStatusRequest
	18, // 35: prpc.UserService.QueryBtVideos:input_type -> prpc.QueryBtVideosReq
	10, // 36: prpc.UserService.NewCategoryItem:input_type -> prpc.NewCategoryItemReq
	12, // 37: prpc.UserService.DelCategoryItem:input_type -> prpc.DelCategoryItemReq
	14, // 38: prpc.UserService.RenameItem:input_type -> prpc.RenameItemReq
	21, // 39: prpc.UserService.AddBtVideos:input_type -> prpc.AddBtVideosReq
	25, // 40: prpc.UserService.ShareItem:input_type -> prpc.ShareItemReq
	27, // 41: prpc.UserService.QuerySharedItems:input_type -> prpc.QuerySharedItemsReq
	29, // 42: prpc.UserService.DelSharedItem:input_type -> prpc.DelSharedItemReq
	16, // 43: prpc.UserService.QuerySubItems:input_type -> prpc.QuerySubItemsReq
	23, // 44: prpc.UserService.QueryItemInfo:input_type -> prpc.QueryItemInfoReq
	32, // 45: prpc.UserService.UploadSubtitle:input_type -> prpc.UploadSubtitleReq
	54, // 46: prpc.UserService.RenameBtVideoName:input_type -> prpc.RenameBtVideoNameReq
	34, // 47: prpc.UserService.GetBtMeta:input_type -> prpc.GetBtMetaReq
	36, // 48: prpc.UserService.NewBtHlsTask:input_type -> prpc.NewBtHlsTaskReq
	39, // 49: prpc.UserService.JoinChatRoom:input_type -> prpc.JoinChatRoomReq
	42, // 50: prpc.UserService.SendMsg2ChatRoom:input_type -> prpc.SendMsg2ChatRoomReq
	44, // 51: prpc.UserService.AddMagnetCategory:input_type -> prpc.AddMagnetCategoryReq
	46, // 52: prpc.UserService.AddMagnetUri:input_type -> prpc.AddMagnetUriReq
	48, // 53: prpc.UserService.QueryMagnet:input_type -> prpc.QueryMagnetReq
	50, // 54: prpc.UserService.DelMagnetCategory:input_type -> prpc.DelMagnetCategoryReq
	3,  // 55: prpc.UserService.Register:output_type -> prpc.RegisterRet
	5,  // 56: prpc.UserService.IsUsedEmail:output_type -> prpc.IsUsedEmailRet
	7,  // 57: prpc.UserService.Login:output_type -> prpc.LoginRet
	7,  // 58: prpc.UserService.FastLogin:output_type -> prpc.LoginRet
	7,  // 59: prpc.UserService.IsLogined:output_type -> prpc.LoginRet
	9,  // 60: prpc.UserService.ChangePassword:output_type -> prpc.ChangePasswordRsp
	67, // 61: prpc.UserService.Download:output_type -> prpc.DownloadRespone
	68, // 62: prpc.UserService.RemoveTorrent:output_type -> prpc.RemoveTorrentRes
	69, // 63: prpc.UserService.GetMagnetUri:output_type -> prpc.GetMagnetUriRsp
	53, // 64: prpc.UserService.GetTorrents:output_type -> prpc.GetTorrentsRsp
	70, // 65: prpc.UserService.OnBtStatus:output_type -> prpc.BtStatusRespone
	20, // 66: prpc.UserService.QueryBtVideos:output_type -> prpc.QueryBtVideosRes
	11, // 67: prpc.UserService.NewCategoryItem:output_type -> prpc.NewCategoryItemRes
	13, // 68: prpc.UserService.DelCategoryItem:output_type -> prpc.DelCategoryItemRes
	15, // 69: prpc.UserService.RenameItem:output_type -> prpc.RenameItemRes
	22, // 70: prpc.UserService.AddBtVideos:output_type -> prpc.AddBtVideosRes
	26, // 71: prpc.UserService.ShareItem:output_type -> prpc.ShareItemRes
	28, // 72: prpc.UserService.QuerySharedItems:output_type -> prpc.QuerySharedItemsRes
	30, // 73: prpc.UserService.DelSharedItem:output_type -> prpc.DelSharedItemRes
	17, // 74: prpc.UserService.QuerySubItems:output_type -> prpc.QuerySubItemsRes
	24, // 75: prpc.UserService.QueryItemInfo:output_type -> prpc.QueryItemInfoRes
	33, // 76: prpc.UserService.UploadSubtitle:output_type -> prpc.UploadSubtitleRes
	55, // 77: prpc.UserService.RenameBtVideoName:output_type -> prpc.RenameBtVideoNameRsp
	35, // 78: prpc.UserService.GetBtMeta:output_type -> prpc.GetBtMetaRsp
	37, // 79: prpc.UserService.NewBtHlsTask:output_type -> prpc.NewBtHlsTaskRsp
	41, // 80: prpc.UserService.JoinChatRoom:output_type -> prpc.JoinChatRoomRes
	43, // 81: prpc.UserService.SendMsg2ChatRoom:output_type -> prpc.SendMsg2ChatRoomRes
	45, // 82: prpc.UserService.AddMagnetCategory:output_type -> prpc.AddMagnetCategoryRsp
	47, // 83: prpc.UserService.AddMagnetUri:output_type -> prpc.AddMagnetUriRsp
	49, // 84: prpc.UserService.QueryMagnet:output_type -> prpc.QueryMagnetRsp
	51, // 85: prpc.UserService.DelMagnetCategory:output_type -> prpc.DelMagnetCategoryRsp
	55, // [55:86] is the sub-list for method output_type
	24, // [24:55] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	file_category_proto_init()
	file_video_proto_init()
	file_bt_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUsedEmailRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCategoryItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCategoryItemRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCategoryItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCategoryItemRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameItemRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySubItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySubItemsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBtVideosReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BtFileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBtVideosRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBtVideosReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBtVideosRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryItemInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryItemInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareItemRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySharedItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySharedItemsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSharedItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSharedItemRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubtitleFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSubtitleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSubtitleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBtMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBtMetaRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBtHlsTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBtHlsTaskRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinChatRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinChatRoomRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsg2ChatRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsg2ChatRoomRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMagnetCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMagnetCategoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMagnetUriReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMagnetUriRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMagnetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMagnetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMagnetCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMagnetCategoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTorrentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTorrentsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameBtVideoNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameBtVideoNameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		EnumInfos:         file_user_proto_enumTypes,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: category.proto

#include "category.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace prpc {
        template <typename>
PROTOBUF_CONSTEXPR CategoryItem::CategoryItem(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.sub_item_ids_)*/ {},
      /* _impl_._sub_item_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.resource_path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.poster_path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.introduce_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.other_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ ::int64_t{0},
      /*decltype(_impl_.creator_)*/ ::int64_t{0},
      /*decltype(_impl_.parent_id_)*/ ::int64_t{0},
      /*decltype(_impl_.type_id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CategoryItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CategoryItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CategoryItemDefaultTypeInternal() {}
  union {
    CategoryItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CategoryItemDefaultTypeInternal _CategoryItem_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SharedItem::SharedItem(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.share_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.item_id_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SharedItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SharedItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SharedItemDefaultTypeInternal() {}
  union {
    SharedItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SharedItemDefaultTypeInternal _SharedItem_default_instance_;
}  // namespace prpc
static ::_pb::Metadata file_level_metadata_category_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_category_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_category_2eproto = nullptr;
const ::uint32_t TableStruct_category_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.type_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.creator_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.resource_path_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.poster_path_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.introduce_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.other_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.parent_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::CategoryItem, _impl_.sub_item_ids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::SharedItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::SharedItem, _impl_.item_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::SharedItem, _impl_.share_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::prpc::CategoryItem)},
        {18, -1, -1, sizeof(::prpc::SharedItem)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::prpc::_CategoryItem_default_instance_._instance,
    &::prpc::_SharedItem_default_instance_._instance,
};
const char descriptor_table_protodef_category_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016category.proto\022\004prpc\"\270\002\n\014CategoryItem\022"
    "\n\n\002id\030\001 \001(\003\022(\n\007type_id\030\002 \001(\0162\027.prpc.Cate"
    "goryItem.Type\022\017\n\007creator\030\003 \001(\003\022\014\n\004name\030\004"
    " \001(\t\022\025\n\rresource_path\030\005 \001(\t\022\023\n\013poster_pa"
    "th\030\006 \001(\t\022\021\n\tintroduce\030\007 \001(\t\022\r\n\005other\030\010 \001"
    "(\t\022\021\n\tparent_id\030\t \001(\003\022\024\n\014sub_item_ids\030\n "
    "\003(\003\"\\\n\004Type\022\013\n\007Unknown\020\000\022\010\n\004Home\020\001\022\r\n\tDi"
    "rectory\020\002\022\t\n\005Video\020\003\022\t\n\005Other\020\004\022\t\n\005Audio"
    "\020\005\022\r\n\tMagnetUri\020\006\"/\n\nSharedItem\022\017\n\007item_"
    "id\030\001 \001(\003\022\020\n\010share_id\030\002 \001(\tB\010Z\006./prpcb\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_category_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_category_2eproto = {
    false,
    false,
    404,
    descriptor_table_protodef_category_2eproto,
    "category.proto",
    &descriptor_table_category_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_category_2eproto::offsets,
    file_level_metadata_category_2eproto,
    file_level_enum_descriptors_category_2eproto,
    file_level_service_descriptors_category_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_category_2eproto_getter() {
  return &descriptor_table_category_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_category_2eproto(&descriptor_table_category_2eproto);
namespace prpc {
const ::google::protobuf::EnumDescriptor* CategoryItem_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_category_2eproto);
  return file_level_enum_descriptors_category_2eproto[0];
}
bool CategoryItem_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CategoryItem_Type CategoryItem::Unknown;
constexpr CategoryItem_Type CategoryItem::Home;
constexpr CategoryItem_Type CategoryItem::Directory;
constexpr CategoryItem_Type CategoryItem::Video;
constexpr CategoryItem_Type CategoryItem::Other;
constexpr CategoryItem_Type CategoryItem::Audio;
constexpr CategoryItem_Type CategoryItem::MagnetUri;
constexpr CategoryItem_Type CategoryItem::Type_MIN;
constexpr CategoryItem_Type CategoryItem::Type_MAX;
constexpr int CategoryItem::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class CategoryItem::_Internal {
 public:
};

CategoryItem::CategoryItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.CategoryItem)
}
CategoryItem::CategoryItem(const CategoryItem& from) : ::google::protobuf::Message() {
  CategoryItem* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sub_item_ids_){from._impl_.sub_item_ids_},
      /* _impl_._sub_item_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.name_){},
      decltype(_impl_.resource_path_){},
      decltype(_impl_.poster_path_){},
      decltype(_impl_.introduce_){},
      decltype(_impl_.other_){},
      decltype(_impl_.id_){},
      decltype(_impl_.creator_){},
      decltype(_impl_.parent_id_){},
      decltype(_impl_.type_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.resource_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resource_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_path().empty()) {
    _this->_impl_.resource_path_.Set(from._internal_resource_path(), _this->GetArenaForAllocation());
  }
  _impl_.poster_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.poster_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_poster_path().empty()) {
    _this->_impl_.poster_path_.Set(from._internal_poster_path(), _this->GetArenaForAllocation());
  }
  _impl_.introduce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.introduce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_introduce().empty()) {
    _this->_impl_.introduce_.Set(from._internal_introduce(), _this->GetArenaForAllocation());
  }
  _impl_.other_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.other_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_other().empty()) {
    _this->_impl_.other_.Set(from._internal_other(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.type_id_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_id_));

  // @@protoc_insertion_point(copy_constructor:prpc.CategoryItem)
}
inline void CategoryItem::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sub_item_ids_){arena},
      /* _impl_._sub_item_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.name_){},
      decltype(_impl_.resource_path_){},
      decltype(_impl_.poster_path_){},
      decltype(_impl_.introduce_){},
      decltype(_impl_.other_){},
      decltype(_impl_.id_){::int64_t{0}},
      decltype(_impl_.creator_){::int64_t{0}},
      decltype(_impl_.parent_id_){::int64_t{0}},
      decltype(_impl_.type_id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resource_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resource_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.poster_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.poster_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.introduce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.introduce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.other_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.other_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CategoryItem::~CategoryItem() {
  // @@protoc_insertion_point(destructor:prpc.CategoryItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CategoryItem::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sub_item_ids_.~RepeatedField();
  _impl_.name_.Destroy();
  _impl_.resource_path_.Destroy();
  _impl_.poster_path_.Destroy();
  _impl_.introduce_.Destroy();
  _impl_.other_.Destroy();
}
void CategoryItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CategoryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.CategoryItem)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_sub_item_ids()->Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.resource_path_.ClearToEmpty();
  _impl_.poster_path_.ClearToEmpty();
  _impl_.introduce_.ClearToEmpty();
  _impl_.other_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CategoryItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 76, 2> CategoryItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CategoryItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CategoryItem, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.id_)}},
    // .prpc.CategoryItem.Type type_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CategoryItem, _impl_.type_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.type_id_)}},
    // int64 creator = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CategoryItem, _impl_.creator_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.creator_)}},
    // string name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.name_)}},
    // string resource_path = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.resource_path_)}},
    // string poster_path = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.poster_path_)}},
    // string introduce = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.introduce_)}},
    // string other = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.other_)}},
    // int64 parent_id = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CategoryItem, _impl_.parent_id_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.parent_id_)}},
    // repeated int64 sub_item_ids = 10;
    {::_pbi::TcParser::FastV64P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.sub_item_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 id = 1;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .prpc.CategoryItem.Type type_id = 2;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.type_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 creator = 3;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.creator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 4;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resource_path = 5;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.resource_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string poster_path = 6;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.poster_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string introduce = 7;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.introduce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string other = 8;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.other_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 parent_id = 9;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.parent_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 sub_item_ids = 10;
    {PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.sub_item_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
    "\21\0\0\0\4\15\13\11\5\0\0\0\0\0\0\0"
    "prpc.CategoryItem"
    "name"
    "resource_path"
    "poster_path"
    "introduce"
    "other"
  }},
};

::uint8_t* CategoryItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.CategoryItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // .prpc.CategoryItem.Type type_id = 2;
  if (this->_internal_type_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type_id(), target);
  }

  // int64 creator = 3;
  if (this->_internal_creator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_creator(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.CategoryItem.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string resource_path = 5;
  if (!this->_internal_resource_path().empty()) {
    const std::string& _s = this->_internal_resource_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.CategoryItem.resource_path");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string poster_path = 6;
  if (!this->_internal_poster_path().empty()) {
    const std::string& _s = this->_internal_poster_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.CategoryItem.poster_path");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string introduce = 7;
  if (!this->_internal_introduce().empty()) {
    const std::string& _s = this->_internal_introduce();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.CategoryItem.introduce");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string other = 8;
  if (!this->_internal_other().empty()) {
    const std::string& _s = this->_internal_other();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.CategoryItem.other");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // int64 parent_id = 9;
  if (this->_internal_parent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<9>(
            stream, this->_internal_parent_id(), target);
  }

  // repeated int64 sub_item_ids = 10;
  {
    int byte_size = _impl_._sub_item_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(10, _internal_sub_item_ids(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.CategoryItem)
  return target;
}

::size_t CategoryItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.CategoryItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 sub_item_ids = 10;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_sub_item_ids())
    ;
    _impl_._sub_item_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string resource_path = 5;
  if (!this->_internal_resource_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_resource_path());
  }

  // string poster_path = 6;
  if (!this->_internal_poster_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_poster_path());
  }

  // string introduce = 7;
  if (!this->_internal_introduce().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_introduce());
  }

  // string other = 8;
  if (!this->_internal_other().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_other());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // int64 creator = 3;
  if (this->_internal_creator() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_creator());
  }

  // int64 parent_id = 9;
  if (this->_internal_parent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_parent_id());
  }

  // .prpc.CategoryItem.Type type_id = 2;
  if (this->_internal_type_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CategoryItem::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CategoryItem::MergeImpl
};
const ::google::protobuf::Message::ClassData*CategoryItem::GetClassData() const { return &_class_data_; }


void CategoryItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CategoryItem*>(&to_msg);
  auto& from = static_cast<const CategoryItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.CategoryItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sub_item_ids()->MergeFrom(from._internal_sub_item_ids());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_resource_path().empty()) {
    _this->_internal_set_resource_path(from._internal_resource_path());
  }
  if (!from._internal_poster_path().empty()) {
    _this->_internal_set_poster_path(from._internal_poster_path());
  }
  if (!from._internal_introduce().empty()) {
    _this->_internal_set_introduce(from._internal_introduce());
  }
  if (!from._internal_other().empty()) {
    _this->_internal_set_other(from._internal_other());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_creator() != 0) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (from._internal_parent_id() != 0) {
    _this->_internal_set_parent_id(from._internal_parent_id());
  }
  if (from._internal_type_id() != 0) {
    _this->_internal_set_type_id(from._internal_type_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CategoryItem::CopyFrom(const CategoryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.CategoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CategoryItem::IsInitialized() const {
  return true;
}

void CategoryItem::InternalSwap(CategoryItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sub_item_ids_.InternalSwap(&other->_impl_.sub_item_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resource_path_, lhs_arena,
                                       &other->_impl_.resource_path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.poster_path_, lhs_arena,
                                       &other->_impl_.poster_path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.introduce_, lhs_arena,
                                       &other->_impl_.introduce_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.other_, lhs_arena,
                                       &other->_impl_.other_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.type_id_)
      + sizeof(CategoryItem::_impl_.type_id_)
      - PROTOBUF_FIELD_OFFSET(CategoryItem, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata CategoryItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_category_2eproto_getter, &descriptor_table_category_2eproto_once,
      file_level_metadata_category_2eproto[0]);
}
// ===================================================================

class SharedItem::_Internal {
 public:
};

SharedItem::SharedItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.SharedItem)
}
SharedItem::SharedItem(const SharedItem& from) : ::google::protobuf::Message() {
  SharedItem* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){},
      decltype(_impl_.item_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_share_id().empty()) {
    _this->_impl_.share_id_.Set(from._internal_share_id(), _this->GetArenaForAllocation());
  }
  _this->_impl_.item_id_ = from._impl_.item_id_;

  // @@protoc_insertion_point(copy_constructor:prpc.SharedItem)
}
inline void SharedItem::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){},
      decltype(_impl_.item_id_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SharedItem::~SharedItem() {
  // @@protoc_insertion_point(destructor:prpc.SharedItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SharedItem::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.share_id_.Destroy();
}
void SharedItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SharedItem::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.SharedItem)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_.ClearToEmpty();
  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SharedItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2> SharedItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SharedItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string share_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SharedItem, _impl_.share_id_)}},
    // int64 item_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SharedItem, _impl_.item_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SharedItem, _impl_.item_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 item_id = 1;
    {PROTOBUF_FIELD_OFFSET(SharedItem, _impl_.item_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string share_id = 2;
    {PROTOBUF_FIELD_OFFSET(SharedItem, _impl_.share_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\10\0\0\0\0\0"
    "prpc.SharedItem"
    "share_id"
  }},
};

::uint8_t* SharedItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.SharedItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_item_id(), target);
  }

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    const std::string& _s = this->_internal_share_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.SharedItem.share_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.SharedItem)
  return target;
}

::size_t SharedItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.SharedItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_share_id());
  }

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SharedItem::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SharedItem::MergeImpl
};
const ::google::protobuf::Message::ClassData*SharedItem::GetClassData() const { return &_class_data_; }


void SharedItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SharedItem*>(&to_msg);
  auto& from = static_cast<const SharedItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.SharedItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_share_id().empty()) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SharedItem::CopyFrom(const SharedItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.SharedItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SharedItem::IsInitialized() const {
  return true;
}

void SharedItem::InternalSwap(SharedItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.share_id_, lhs_arena,
                                       &other->_impl_.share_id_, rhs_arena);
        swap(_impl_.item_id_, other->_impl_.item_id_);
}

::google::protobuf::Metadata SharedItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_category_2eproto_getter, &descriptor_table_category_2eproto_once,
      file_level_metadata_category_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace prpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#include "user.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace prpc {
PROTOBUF_CONSTEXPR UserInfo::UserInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.email_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.passwd_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.id_)*/ ::int64_t{0}

  , /*decltype(_impl_.home_directory_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserInfoDefaultTypeInternal() {}
  union {
    UserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserInfoDefaultTypeInternal _UserInfo_default_instance_;
PROTOBUF_CONSTEXPR RegisterInfo::RegisterInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegisterInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterInfoDefaultTypeInternal() {}
  union {
    RegisterInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterInfoDefaultTypeInternal _RegisterInfo_default_instance_;
PROTOBUF_CONSTEXPR RegisterRet::RegisterRet(
    ::_pbi::ConstantInitialized) {}
struct RegisterRetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterRetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterRetDefaultTypeInternal() {}
  union {
    RegisterRet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterRetDefaultTypeInternal _RegisterRet_default_instance_;
PROTOBUF_CONSTEXPR EmailInfo::EmailInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EmailInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmailInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmailInfoDefaultTypeInternal() {}
  union {
    EmailInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmailInfoDefaultTypeInternal _EmailInfo_default_instance_;
PROTOBUF_CONSTEXPR IsUsedEmailRet::IsUsedEmailRet(
    ::_pbi::ConstantInitialized) {}
struct IsUsedEmailRetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsUsedEmailRetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsUsedEmailRetDefaultTypeInternal() {}
  union {
    IsUsedEmailRet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsUsedEmailRetDefaultTypeInternal _IsUsedEmailRet_default_instance_;
PROTOBUF_CONSTEXPR LoginInfo::LoginInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.passwd_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.remember_me_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginInfoDefaultTypeInternal() {}
  union {
    LoginInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginInfoDefaultTypeInternal _LoginInfo_default_instance_;
PROTOBUF_CONSTEXPR LoginRet::LoginRet(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.user_info_)*/nullptr
  , /*decltype(_impl_.remember_me_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginRetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginRetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginRetDefaultTypeInternal() {}
  union {
    LoginRet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginRetDefaultTypeInternal _LoginRet_default_instance_;
PROTOBUF_CONSTEXPR NewCategoryItemReq::NewCategoryItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.resource_path_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.introduce_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.parent_id_)*/ ::int64_t{0}

  , /*decltype(_impl_.type_id_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NewCategoryItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewCategoryItemReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewCategoryItemReqDefaultTypeInternal() {}
  union {
    NewCategoryItemReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewCategoryItemReqDefaultTypeInternal _NewCategoryItemReq_default_instance_;
PROTOBUF_CONSTEXPR NewCategoryItemRes::NewCategoryItemRes(
    ::_pbi::ConstantInitialized) {}
struct NewCategoryItemResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewCategoryItemResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewCategoryItemResDefaultTypeInternal() {}
  union {
    NewCategoryItemRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewCategoryItemResDefaultTypeInternal _NewCategoryItemRes_default_instance_;
PROTOBUF_CONSTEXPR DelCategoryItemReq::DelCategoryItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DelCategoryItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelCategoryItemReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelCategoryItemReqDefaultTypeInternal() {}
  union {
    DelCategoryItemReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelCategoryItemReqDefaultTypeInternal _DelCategoryItemReq_default_instance_;
PROTOBUF_CONSTEXPR DelCategoryItemRes::DelCategoryItemRes(
    ::_pbi::ConstantInitialized) {}
struct DelCategoryItemResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelCategoryItemResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelCategoryItemResDefaultTypeInternal() {}
  union {
    DelCategoryItemRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelCategoryItemResDefaultTypeInternal _DelCategoryItemRes_default_instance_;
PROTOBUF_CONSTEXPR QuerySubItemsReq::QuerySubItemsReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.parent_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySubItemsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySubItemsReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySubItemsReqDefaultTypeInternal() {}
  union {
    QuerySubItemsReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySubItemsReqDefaultTypeInternal _QuerySubItemsReq_default_instance_;
PROTOBUF_CONSTEXPR QuerySubItemsRes::QuerySubItemsRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.parent_item_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySubItemsResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySubItemsResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySubItemsResDefaultTypeInternal() {}
  union {
    QuerySubItemsRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySubItemsResDefaultTypeInternal _QuerySubItemsRes_default_instance_;
PROTOBUF_CONSTEXPR QueryBtVideosReq::QueryBtVideosReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_hash_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBtVideosReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBtVideosReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBtVideosReqDefaultTypeInternal() {}
  union {
    QueryBtVideosReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBtVideosReqDefaultTypeInternal _QueryBtVideosReq_default_instance_;
PROTOBUF_CONSTEXPR BtFileMetadata::BtFileMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_.file_index_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BtFileMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BtFileMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BtFileMetadataDefaultTypeInternal() {}
  union {
    BtFileMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BtFileMetadataDefaultTypeInternal _BtFileMetadata_default_instance_;
PROTOBUF_CONSTEXPR QueryBtVideosRes::QueryBtVideosRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBtVideosResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBtVideosResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBtVideosResDefaultTypeInternal() {}
  union {
    QueryBtVideosRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBtVideosResDefaultTypeInternal _QueryBtVideosRes_default_instance_;
PROTOBUF_CONSTEXPR AddBtVideosReq::AddBtVideosReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_indexes_)*/ {}
  ,/* _impl_._file_indexes_cached_byte_size_ = */ { 0 }

  , /*decltype(_impl_.info_hash_)*/nullptr
  , /*decltype(_impl_.category_item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddBtVideosReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddBtVideosReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddBtVideosReqDefaultTypeInternal() {}
  union {
    AddBtVideosReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddBtVideosReqDefaultTypeInternal _AddBtVideosReq_default_instance_;
PROTOBUF_CONSTEXPR AddBtVideosRes::AddBtVideosRes(
    ::_pbi::ConstantInitialized) {}
struct AddBtVideosResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddBtVideosResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddBtVideosResDefaultTypeInternal() {}
  union {
    AddBtVideosRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddBtVideosResDefaultTypeInternal _AddBtVideosRes_default_instance_;
PROTOBUF_CONSTEXPR QueryItemInfoReq::QueryItemInfoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryItemInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryItemInfoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryItemInfoReqDefaultTypeInternal() {}
  union {
    QueryItemInfoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryItemInfoReqDefaultTypeInternal _QueryItemInfoReq_default_instance_;
PROTOBUF_CONSTEXPR QueryItemInfoRes::QueryItemInfoRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_info_)*/nullptr
  , /*decltype(_impl_.video_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryItemInfoResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryItemInfoResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryItemInfoResDefaultTypeInternal() {}
  union {
    QueryItemInfoRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryItemInfoResDefaultTypeInternal _QueryItemInfoRes_default_instance_;
PROTOBUF_CONSTEXPR ShareItemReq::ShareItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareItemReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareItemReqDefaultTypeInternal() {}
  union {
    ShareItemReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareItemReqDefaultTypeInternal _ShareItemReq_default_instance_;
PROTOBUF_CONSTEXPR ShareItemRes::ShareItemRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareItemResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareItemResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareItemResDefaultTypeInternal() {}
  union {
    ShareItemRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareItemResDefaultTypeInternal _ShareItemRes_default_instance_;
PROTOBUF_CONSTEXPR QuerySharedItemsReq::QuerySharedItemsReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySharedItemsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySharedItemsReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySharedItemsReqDefaultTypeInternal() {}
  union {
    QuerySharedItemsReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySharedItemsReqDefaultTypeInternal _QuerySharedItemsReq_default_instance_;
PROTOBUF_CONSTEXPR QuerySharedItemsRes::QuerySharedItemsRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.shared_items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuerySharedItemsResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySharedItemsResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySharedItemsResDefaultTypeInternal() {}
  union {
    QuerySharedItemsRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySharedItemsResDefaultTypeInternal _QuerySharedItemsRes_default_instance_;
PROTOBUF_CONSTEXPR DelSharedItemReq::DelSharedItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DelSharedItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelSharedItemReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelSharedItemReqDefaultTypeInternal() {}
  union {
    DelSharedItemReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelSharedItemReqDefaultTypeInternal _DelSharedItemReq_default_instance_;
PROTOBUF_CONSTEXPR DelSharedItemRes::DelSharedItemRes(
    ::_pbi::ConstantInitialized) {}
struct DelSharedItemResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelSharedItemResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelSharedItemResDefaultTypeInternal() {}
  union {
    DelSharedItemRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelSharedItemResDefaultTypeInternal _DelSharedItemRes_default_instance_;
PROTOBUF_CONSTEXPR RefreshSubtitleReq::RefreshSubtitleReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshSubtitleReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshSubtitleReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshSubtitleReqDefaultTypeInternal() {}
  union {
    RefreshSubtitleReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshSubtitleReqDefaultTypeInternal _RefreshSubtitleReq_default_instance_;
PROTOBUF_CONSTEXPR RefreshSubtitleRes::RefreshSubtitleRes(
    ::_pbi::ConstantInitialized) {}
struct RefreshSubtitleResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshSubtitleResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshSubtitleResDefaultTypeInternal() {}
  union {
    RefreshSubtitleRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshSubtitleResDefaultTypeInternal _RefreshSubtitleRes_default_instance_;
PROTOBUF_CONSTEXPR SubtitleFile::SubtitleFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.content_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubtitleFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubtitleFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubtitleFileDefaultTypeInternal() {}
  union {
    SubtitleFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubtitleFileDefaultTypeInternal _SubtitleFile_default_instance_;
PROTOBUF_CONSTEXPR UploadSubtitleReq::UploadSubtitleReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subtitles_)*/{}
  , /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UploadSubtitleReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadSubtitleReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadSubtitleReqDefaultTypeInternal() {}
  union {
    UploadSubtitleReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadSubtitleReqDefaultTypeInternal _UploadSubtitleReq_default_instance_;
PROTOBUF_CONSTEXPR UploadSubtitleRes::UploadSubtitleRes(
    ::_pbi::ConstantInitialized) {}
struct UploadSubtitleResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadSubtitleResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadSubtitleResDefaultTypeInternal() {}
  union {
    UploadSubtitleRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadSubtitleResDefaultTypeInternal _UploadSubtitleRes_default_instance_;
PROTOBUF_CONSTEXPR JoinChatRoomReq::JoinChatRoomReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JoinChatRoomReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinChatRoomReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinChatRoomReqDefaultTypeInternal() {}
  union {
    JoinChatRoomReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinChatRoomReqDefaultTypeInternal _JoinChatRoomReq_default_instance_;
PROTOBUF_CONSTEXPR ChatMessage::ChatMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.msg_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.user_id_)*/ ::int64_t{0}

  , /*decltype(_impl_.sent_time_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChatMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatMessageDefaultTypeInternal() {}
  union {
    ChatMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatMessageDefaultTypeInternal _ChatMessage_default_instance_;
PROTOBUF_CONSTEXPR JoinChatRoomRes::JoinChatRoomRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.chat_msgs_)*/{}
  , /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JoinChatRoomResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinChatRoomResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinChatRoomResDefaultTypeInternal() {}
  union {
    JoinChatRoomRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinChatRoomResDefaultTypeInternal _JoinChatRoomRes_default_instance_;
PROTOBUF_CONSTEXPR SendMsg2ChatRoomReq::SendMsg2ChatRoomReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.chat_msg_)*/nullptr
  , /*decltype(_impl_.item_id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMsg2ChatRoomReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMsg2ChatRoomReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMsg2ChatRoomReqDefaultTypeInternal() {}
  union {
    SendMsg2ChatRoomReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMsg2ChatRoomReqDefaultTypeInternal _SendMsg2ChatRoomReq_default_instance_;
PROTOBUF_CONSTEXPR SendMsg2ChatRoomRes::SendMsg2ChatRoomRes(
    ::_pbi::ConstantInitialized) {}
struct SendMsg2ChatRoomResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMsg2ChatRoomResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMsg2ChatRoomResDefaultTypeInternal() {}
  union {
    SendMsg2ChatRoomRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMsg2ChatRoomResDefaultTypeInternal _SendMsg2ChatRoomRes_default_instance_;
}  // namespace prpc
static ::_pb::Metadata file_level_metadata_user_2eproto[36];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_user_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_user_2eproto = nullptr;
const ::uint32_t TableStruct_user_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::UserInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::UserInfo, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::prpc::UserInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::prpc::UserInfo, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::prpc::UserInfo, _impl_.passwd_),
    PROTOBUF_FIELD_OFFSET(::prpc::UserInfo, _impl_.home_directory_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RegisterInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RegisterInfo, _impl_.user_info_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RegisterRet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::EmailInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::EmailInfo, _impl_.email_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::IsUsedEmailRet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::LoginInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::LoginInfo, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::prpc::LoginInfo, _impl_.passwd_),
    PROTOBUF_FIELD_OFFSET(::prpc::LoginInfo, _impl_.remember_me_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::LoginRet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::LoginRet, _impl_.token_),
    PROTOBUF_FIELD_OFFSET(::prpc::LoginRet, _impl_.user_info_),
    PROTOBUF_FIELD_OFFSET(::prpc::LoginRet, _impl_.remember_me_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::NewCategoryItemReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::NewCategoryItemReq, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::prpc::NewCategoryItemReq, _impl_.type_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::NewCategoryItemReq, _impl_.resource_path_),
    PROTOBUF_FIELD_OFFSET(::prpc::NewCategoryItemReq, _impl_.introduce_),
    PROTOBUF_FIELD_OFFSET(::prpc::NewCategoryItemReq, _impl_.parent_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::NewCategoryItemRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::DelCategoryItemReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::DelCategoryItemReq, _impl_.item_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::DelCategoryItemRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySubItemsReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySubItemsReq, _impl_.parent_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySubItemsReq, _impl_.share_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySubItemsRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySubItemsRes, _impl_.parent_item_),
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySubItemsRes, _impl_.items_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QueryBtVideosReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QueryBtVideosReq, _impl_.info_hash_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::BtFileMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::BtFileMetadata, _impl_.file_index_),
    PROTOBUF_FIELD_OFFSET(::prpc::BtFileMetadata, _impl_.meta_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QueryBtVideosRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QueryBtVideosRes, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::AddBtVideosReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::AddBtVideosReq, _impl_.info_hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::AddBtVideosReq, _impl_.file_indexes_),
    PROTOBUF_FIELD_OFFSET(::prpc::AddBtVideosReq, _impl_.category_item_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::AddBtVideosRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QueryItemInfoReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QueryItemInfoReq, _impl_.item_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::QueryItemInfoReq, _impl_.share_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QueryItemInfoRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QueryItemInfoRes, _impl_.item_info_),
    PROTOBUF_FIELD_OFFSET(::prpc::QueryItemInfoRes, _impl_.video_info_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::ShareItemReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::ShareItemReq, _impl_.item_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::ShareItemRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::ShareItemRes, _impl_.item_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::ShareItemRes, _impl_.share_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySharedItemsReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySharedItemsReq, _impl_.user_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySharedItemsRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::QuerySharedItemsRes, _impl_.shared_items_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::DelSharedItemReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::DelSharedItemReq, _impl_.share_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::DelSharedItemRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RefreshSubtitleReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RefreshSubtitleReq, _impl_.item_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RefreshSubtitleRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::SubtitleFile, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::SubtitleFile, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::prpc::SubtitleFile, _impl_.content_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::UploadSubtitleReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::UploadSubtitleReq, _impl_.item_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::UploadSubtitleReq, _impl_.subtitles_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::UploadSubtitleRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::JoinChatRoomReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::JoinChatRoomReq, _impl_.item_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::ChatMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::ChatMessage, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::ChatMessage, _impl_.user_name_),
    PROTOBUF_FIELD_OFFSET(::prpc::ChatMessage, _impl_.sent_time_),
    PROTOBUF_FIELD_OFFSET(::prpc::ChatMessage, _impl_.msg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::JoinChatRoomRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::JoinChatRoomRes, _impl_.item_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::JoinChatRoomRes, _impl_.chat_msgs_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::SendMsg2ChatRoomReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::SendMsg2ChatRoomReq, _impl_.item_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::SendMsg2ChatRoomReq, _impl_.chat_msg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::SendMsg2ChatRoomRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::prpc::UserInfo)},
        { 13, -1, -1, sizeof(::prpc::RegisterInfo)},
        { 22, -1, -1, sizeof(::prpc::RegisterRet)},
        { 30, -1, -1, sizeof(::prpc::EmailInfo)},
        { 39, -1, -1, sizeof(::prpc::IsUsedEmailRet)},
        { 47, -1, -1, sizeof(::prpc::LoginInfo)},
        { 58, -1, -1, sizeof(::prpc::LoginRet)},
        { 69, -1, -1, sizeof(::prpc::NewCategoryItemReq)},
        { 82, -1, -1, sizeof(::prpc::NewCategoryItemRes)},
        { 90, -1, -1, sizeof(::prpc::DelCategoryItemReq)},
        { 99, -1, -1, sizeof(::prpc::DelCategoryItemRes)},
        { 107, -1, -1, sizeof(::prpc::QuerySubItemsReq)},
        { 117, -1, -1, sizeof(::prpc::QuerySubItemsRes)},
        { 127, -1, -1, sizeof(::prpc::QueryBtVideosReq)},
        { 136, -1, -1, sizeof(::prpc::BtFileMetadata)},
        { 146, -1, -1, sizeof(::prpc::QueryBtVideosRes)},
        { 155, -1, -1, sizeof(::prpc::AddBtVideosReq)},
        { 166, -1, -1, sizeof(::prpc::AddBtVideosRes)},
        { 174, -1, -1, sizeof(::prpc::QueryItemInfoReq)},
        { 184, -1, -1, sizeof(::prpc::QueryItemInfoRes)},
        { 194, -1, -1, sizeof(::prpc::ShareItemReq)},
        { 203, -1, -1, sizeof(::prpc::ShareItemRes)},
        { 213, -1, -1, sizeof(::prpc::QuerySharedItemsReq)},
        { 222, -1, -1, sizeof(::prpc::QuerySharedItemsRes)},
        { 231, -1, -1, sizeof(::prpc::DelSharedItemReq)},
        { 240, -1, -1, sizeof(::prpc::DelSharedItemRes)},
        { 248, -1, -1, sizeof(::prpc::RefreshSubtitleReq)},
        { 257, -1, -1, sizeof(::prpc::RefreshSubtitleRes)},
        { 265, -1, -1, sizeof(::prpc::SubtitleFile)},
        { 275, -1, -1, sizeof(::prpc::UploadSubtitleReq)},
        { 285, -1, -1, sizeof(::prpc::UploadSubtitleRes)},
        { 293, -1, -1, sizeof(::prpc::JoinChatRoomReq)},
        { 302, -1, -1, sizeof(::prpc::ChatMessage)},
        { 314, -1, -1, sizeof(::prpc::JoinChatRoomRes)},
        { 324, -1, -1, sizeof(::prpc::SendMsg2ChatRoomReq)},
        { 334, -1, -1, sizeof(::prpc::SendMsg2ChatRoomRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::prpc::_UserInfo_default_instance_._instance,
    &::prpc::_RegisterInfo_default_instance_._instance,
    &::prpc::_RegisterRet_default_instance_._instance,
    &::prpc::_EmailInfo_default_instance_._instance,
    &::prpc::_IsUsedEmailRet_default_instance_._instance,
    &::prpc::_LoginInfo_default_instance_._instance,
    &::prpc::_LoginRet_default_instance_._instance,
    &::prpc::_NewCategoryItemReq_default_instance_._instance,
    &::prpc::_NewCategoryItemRes_default_instance_._instance,
    &::prpc::_DelCategoryItemReq_default_instance_._instance,
    &::prpc::_DelCategoryItemRes_default_instance_._instance,
    &::prpc::_QuerySubItemsReq_default_instance_._instance,
    &::prpc::_QuerySubItemsRes_default_instance_._instance,
    &::prpc::_QueryBtVideosReq_default_instance_._instance,
    &::prpc::_BtFileMetadata_default_instance_._instance,
    &::prpc::_QueryBtVideosRes_default_instance_._instance,
    &::prpc::_AddBtVideosReq_default_instance_._instance,
    &::prpc::_AddBtVideosRes_default_instance_._instance,
    &::prpc::_QueryItemInfoReq_default_instance_._instance,
    &::prpc::_QueryItemInfoRes_default_instance_._instance,
    &::prpc::_ShareItemReq_default_instance_._instance,
    &::prpc::_ShareItemRes_default_instance_._instance,
    &::prpc::_QuerySharedItemsReq_default_instance_._instance,
    &::prpc::_QuerySharedItemsRes_default_instance_._instance,
    &::prpc::_DelSharedItemReq_default_instance_._instance,
    &::prpc::_DelSharedItemRes_default_instance_._instance,
    &::prpc::_RefreshSubtitleReq_default_instance_._instance,
    &::prpc::_RefreshSubtitleRes_default_instance_._instance,
    &::prpc::_SubtitleFile_default_instance_._instance,
    &::prpc::_UploadSubtitleReq_default_instance_._instance,
    &::prpc::_UploadSubtitleRes_default_instance_._instance,
    &::prpc::_JoinChatRoomReq_default_instance_._instance,
    &::prpc::_ChatMessage_default_instance_._instance,
    &::prpc::_JoinChatRoomRes_default_instance_._instance,
    &::prpc::_SendMsg2ChatRoomReq_default_instance_._instance,
    &::prpc::_SendMsg2ChatRoomRes_default_instance_._instance,
};
const char descriptor_table_protodef_user_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nuser.proto\022\004prpc\032\016category.proto\032\013vide"
    "o.proto\032\010bt.proto\032\034google/api/annotation"
    "s.proto\"^\n\010UserInfo\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030"
    "\002 \001(\t\022\r\n\005email\030\003 \001(\t\022\016\n\006passwd\030\004 \001(\t\022\031\n\021"
    "home_directory_id\030\005 \001(\003\"1\n\014RegisterInfo\022"
    "!\n\tuser_info\030\001 \001(\0132\016.prpc.UserInfo\"\r\n\013Re"
    "gisterRet\"\032\n\tEmailInfo\022\r\n\005email\030\001 \001(\t\"\020\n"
    "\016IsUsedEmailRet\"\?\n\tLoginInfo\022\r\n\005email\030\001 "
    "\001(\t\022\016\n\006passwd\030\002 \001(\t\022\023\n\013remember_me\030\003 \001(\010"
    "\"Q\n\010LoginRet\022\r\n\005token\030\001 \001(\t\022!\n\tuser_info"
    "\030\002 \001(\0132\016.prpc.UserInfo\022\023\n\013remember_me\030\003 "
    "\001(\010\"\211\001\n\022NewCategoryItemReq\022\014\n\004name\030\001 \001(\t"
    "\022(\n\007type_id\030\002 \001(\0162\027.prpc.CategoryItem.Ty"
    "pe\022\025\n\rresource_path\030\003 \001(\t\022\021\n\tintroduce\030\004"
    " \001(\t\022\021\n\tparent_id\030\005 \001(\003\"\024\n\022NewCategoryIt"
    "emRes\"%\n\022DelCategoryItemReq\022\017\n\007item_id\030\001"
    " \001(\003\"\024\n\022DelCategoryItemRes\"7\n\020QuerySubIt"
    "emsReq\022\021\n\tparent_id\030\001 \001(\003\022\020\n\010share_id\030\002 "
    "\001(\t\"^\n\020QuerySubItemsRes\022\'\n\013parent_item\030\001"
    " \001(\0132\022.prpc.CategoryItem\022!\n\005items\030\002 \003(\0132"
    "\022.prpc.CategoryItem\"5\n\020QueryBtVideosReq\022"
    "!\n\tinfo_hash\030\001 \001(\0132\016.prpc.InfoHash\"G\n\016Bt"
    "FileMetadata\022\022\n\nfile_index\030\001 \001(\005\022!\n\004meta"
    "\030\002 \001(\0132\023.prpc.VideoMetadata\"6\n\020QueryBtVi"
    "deosRes\022\"\n\004data\030\001 \003(\0132\024.prpc.BtFileMetad"
    "ata\"c\n\016AddBtVideosReq\022!\n\tinfo_hash\030\001 \001(\013"
    "2\016.prpc.InfoHash\022\024\n\014file_indexes\030\002 \003(\005\022\030"
    "\n\020category_item_id\030\003 \001(\003\"\020\n\016AddBtVideosR"
    "es\"5\n\020QueryItemInfoReq\022\017\n\007item_id\030\001 \001(\003\022"
    "\020\n\010share_id\030\002 \001(\t\"Z\n\020QueryItemInfoRes\022%\n"
    "\titem_info\030\001 \001(\0132\022.prpc.CategoryItem\022\037\n\n"
    "video_info\030\002 \001(\0132\013.prpc.Video\"\037\n\014ShareIt"
    "emReq\022\017\n\007item_id\030\001 \001(\003\"1\n\014ShareItemRes\022\017"
    "\n\007item_id\030\001 \001(\003\022\020\n\010share_id\030\002 \001(\t\"&\n\023Que"
    "rySharedItemsReq\022\017\n\007user_id\030\001 \001(\003\"=\n\023Que"
    "rySharedItemsRes\022&\n\014shared_items\030\001 \003(\0132\020"
    ".prpc.SharedItem\"$\n\020DelSharedItemReq\022\020\n\010"
    "share_id\030\001 \001(\t\"\022\n\020DelSharedItemRes\"%\n\022Re"
    "freshSubtitleReq\022\017\n\007item_id\030\001 \001(\003\"\024\n\022Ref"
    "reshSubtitleRes\"-\n\014SubtitleFile\022\014\n\004name\030"
    "\001 \001(\t\022\017\n\007content\030\002 \001(\014\"K\n\021UploadSubtitle"
    "Req\022\017\n\007item_id\030\001 \001(\003\022%\n\tsubtitles\030\002 \003(\0132"
    "\022.prpc.SubtitleFile\"\023\n\021UploadSubtitleRes"
    "\"\"\n\017JoinChatRoomReq\022\017\n\007item_id\030\001 \001(\003\"Q\n\013"
    "ChatMessage\022\017\n\007user_id\030\001 \001(\003\022\021\n\tuser_nam"
    "e\030\002 \001(\t\022\021\n\tsent_time\030\003 \001(\003\022\013\n\003msg\030\004 \001(\t\""
    "H\n\017JoinChatRoomRes\022\017\n\007item_id\030\001 \001(\003\022$\n\tc"
    "hat_msgs\030\002 \003(\0132\021.prpc.ChatMessage\"K\n\023Sen"
    "dMsg2ChatRoomReq\022\017\n\007item_id\030\001 \001(\003\022#\n\010cha"
    "t_msg\030\002 \001(\0132\021.prpc.ChatMessage\"\025\n\023SendMs"
    "g2ChatRoomRes2\225\013\n\013UserService\022G\n\010Registe"
    "r\022\022.prpc.RegisterInfo\032\021.prpc.RegisterRet"
    "\"\024\202\323\344\223\002\016\"\t/register:\001*\022M\n\013IsUsedEmail\022\017."
    "prpc.EmailInfo\032\024.prpc.IsUsedEmailRet\"\027\202\323"
    "\344\223\002\021\"\014/isusedemail:\001*\022;\n\005Login\022\017.prpc.Lo"
    "ginInfo\032\016.prpc.LoginRet\"\021\202\323\344\223\002\013\"\006/login:"
    "\001*\022C\n\tFastLogin\022\017.prpc.LoginInfo\032\016.prpc."
    "LoginRet\"\025\202\323\344\223\002\017\"\n/fastlogin:\001*\022B\n\tIsLog"
    "ined\022\017.prpc.LoginInfo\032\016.prpc.LoginRet\"\024\202"
    "\323\344\223\002\016\"\t/islogged:\001*\022N\n\010Download\022\025.prpc.D"
    "ownloadRequest\032\025.prpc.DownloadRespone\"\024\202"
    "\323\344\223\002\016\"\t/download:\001*\022\?\n\rRemoveTorrent\022\026.p"
    "rpc.RemoveTorrentReq\032\026.prpc.RemoveTorren"
    "tRes\0226\n\010OnStatus\022\023.prpc.StatusRequest\032\023."
    "prpc.StatusRespone0\001\022\?\n\rQueryBtVideos\022\026."
    "prpc.QueryBtVideosReq\032\026.prpc.QueryBtVide"
    "osRes\022E\n\017NewCategoryItem\022\030.prpc.NewCateg"
    "oryItemReq\032\030.prpc.NewCategoryItemRes\022E\n\017"
    "DelCategoryItem\022\030.prpc.DelCategoryItemRe"
    "q\032\030.prpc.DelCategoryItemRes\0229\n\013AddBtVide"
    "os\022\024.prpc.AddBtVideosReq\032\024.prpc.AddBtVid"
    "eosRes\0223\n\tShareItem\022\022.prpc.ShareItemReq\032"
    "\022.prpc.ShareItemRes\022H\n\020QuerySharedItems\022"
    "\031.prpc.QuerySharedItemsReq\032\031.prpc.QueryS"
    "haredItemsRes\022\?\n\rDelSharedItem\022\026.prpc.De"
    "lSharedItemReq\032\026.prpc.DelSharedItemRes\022\?"
    "\n\rQuerySubItems\022\026.prpc.QuerySubItemsReq\032"
    "\026.prpc.QuerySubItemsRes\022\?\n\rQueryItemInfo"
    "\022\026.prpc.QueryItemInfoReq\032\026.prpc.QueryIte"
    "mInfoRes\022E\n\017RefreshSubtitle\022\030.prpc.Refre"
    "shSubtitleReq\032\030.prpc.RefreshSubtitleRes\022"
    "B\n\016UploadSubtitle\022\027.prpc.UploadSubtitleR"
    "eq\032\027.prpc.UploadSubtitleRes\022>\n\014JoinChatR"
    "oom\022\025.prpc.JoinChatRoomReq\032\025.prpc.JoinCh"
    "atRoomRes0\001\022H\n\020SendMsg2ChatRoom\022\031.prpc.S"
    "endMsg2ChatRoomReq\032\031.prpc.SendMsg2ChatRo"
    "omResB\010Z\006./prpcb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_user_2eproto_deps[4] =
    {
        &::descriptor_table_bt_2eproto,
        &::descriptor_table_category_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_video_2eproto,
};
static ::absl::once_flag descriptor_table_user_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_user_2eproto = {
    false,
    false,
    3463,
    descriptor_table_protodef_user_2eproto,
    "user.proto",
    &descriptor_table_user_2eproto_once,
    descriptor_table_user_2eproto_deps,
    4,
    36,
    schemas,
    file_default_instances,
    TableStruct_user_2eproto::offsets,
    file_level_metadata_user_2eproto,
    file_level_enum_descriptors_user_2eproto,
    file_level_service_descriptors_user_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_user_2eproto_getter() {
  return &descriptor_table_user_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_user_2eproto(&descriptor_table_user_2eproto);
namespace prpc {
// ===================================================================

class UserInfo::_Internal {
 public:
};

UserInfo::UserInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.email_) {}

    , decltype(_impl_.passwd_) {}

    , decltype(_impl_.id_) {}

    , decltype(_impl_.home_directory_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), _this->GetArenaForAllocation());
  }
  _impl_.passwd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.passwd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_passwd().empty()) {
    _this->_impl_.passwd_.Set(from._internal_passwd(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.home_directory_id_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.home_directory_id_));
  // @@protoc_insertion_point(copy_constructor:prpc.UserInfo)
}

inline void UserInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.email_) {}

    , decltype(_impl_.passwd_) {}

    , decltype(_impl_.id_) { ::int64_t{0} }

    , decltype(_impl_.home_directory_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.passwd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.passwd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:prpc.UserInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.email_.Destroy();
  _impl_.passwd_.Destroy();
}

void UserInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.UserInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.passwd_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.home_directory_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.home_directory_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.UserInfo.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.UserInfo.email"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string passwd = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_passwd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.UserInfo.passwd"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 home_directory_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.home_directory_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* UserInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.UserInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.UserInfo.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    const std::string& _s = this->_internal_email();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.UserInfo.email");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string passwd = 4;
  if (!this->_internal_passwd().empty()) {
    const std::string& _s = this->_internal_passwd();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.UserInfo.passwd");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 home_directory_id = 5;
  if (this->_internal_home_directory_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        5, this->_internal_home_directory_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.UserInfo)
  return target;
}

::size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.UserInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_email());
  }

  // string passwd = 4;
  if (!this->_internal_passwd().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_passwd());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // int64 home_directory_id = 5;
  if (this->_internal_home_directory_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_home_directory_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserInfo::GetClassData() const { return &_class_data_; }


void UserInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserInfo*>(&to_msg);
  auto& from = static_cast<const UserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.UserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_passwd().empty()) {
    _this->_internal_set_passwd(from._internal_passwd());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_home_directory_id() != 0) {
    _this->_internal_set_home_directory_id(from._internal_home_directory_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, lhs_arena,
                                       &other->_impl_.email_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.passwd_, lhs_arena,
                                       &other->_impl_.passwd_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.home_directory_id_)
      + sizeof(UserInfo::_impl_.home_directory_id_)
      - PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[0]);
}
// ===================================================================

class RegisterInfo::_Internal {
 public:
  static const ::prpc::UserInfo& user_info(const RegisterInfo* msg);
};

const ::prpc::UserInfo&
RegisterInfo::_Internal::user_info(const RegisterInfo* msg) {
  return *msg->_impl_.user_info_;
}
RegisterInfo::RegisterInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.RegisterInfo)
}
RegisterInfo::RegisterInfo(const RegisterInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegisterInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_user_info()) {
    _this->_impl_.user_info_ = new ::prpc::UserInfo(*from._impl_.user_info_);
  }
  // @@protoc_insertion_point(copy_constructor:prpc.RegisterInfo)
}

inline void RegisterInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.user_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RegisterInfo::~RegisterInfo() {
  // @@protoc_insertion_point(destructor:prpc.RegisterInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegisterInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.user_info_;
}

void RegisterInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegisterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.RegisterInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.user_info_ != nullptr) {
    delete _impl_.user_info_;
  }
  _impl_.user_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .prpc.UserInfo user_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* RegisterInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.RegisterInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .prpc.UserInfo user_info = 1;
  if (this->_internal_has_user_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::user_info(this),
        _Internal::user_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.RegisterInfo)
  return target;
}

::size_t RegisterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.RegisterInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.UserInfo user_info = 1;
  if (this->_internal_has_user_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.user_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegisterInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegisterInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegisterInfo::GetClassData() const { return &_class_data_; }


void RegisterInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegisterInfo*>(&to_msg);
  auto& from = static_cast<const RegisterInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.RegisterInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_user_info()) {
    _this->_internal_mutable_user_info()->::prpc::UserInfo::MergeFrom(
        from._internal_user_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterInfo::CopyFrom(const RegisterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.RegisterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterInfo::IsInitialized() const {
  return true;
}

void RegisterInfo::InternalSwap(RegisterInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.user_info_, other->_impl_.user_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[1]);
}
// ===================================================================

class RegisterRet::_Internal {
 public:
};

RegisterRet::RegisterRet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.RegisterRet)
}
RegisterRet::RegisterRet(const RegisterRet& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RegisterRet* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.RegisterRet)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegisterRet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegisterRet::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RegisterRet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[2]);
}
// ===================================================================

class EmailInfo::_Internal {
 public:
};

EmailInfo::EmailInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.EmailInfo)
}
EmailInfo::EmailInfo(const EmailInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EmailInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:prpc.EmailInfo)
}

inline void EmailInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.email_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EmailInfo::~EmailInfo() {
  // @@protoc_insertion_point(destructor:prpc.EmailInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EmailInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
}

void EmailInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EmailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.EmailInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmailInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.EmailInfo.email"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EmailInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.EmailInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    const std::string& _s = this->_internal_email();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.EmailInfo.email");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.EmailInfo)
  return target;
}

::size_t EmailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.EmailInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmailInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EmailInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmailInfo::GetClassData() const { return &_class_data_; }


void EmailInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EmailInfo*>(&to_msg);
  auto& from = static_cast<const EmailInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.EmailInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EmailInfo::CopyFrom(const EmailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.EmailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailInfo::IsInitialized() const {
  return true;
}

void EmailInfo::InternalSwap(EmailInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, lhs_arena,
                                       &other->_impl_.email_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmailInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[3]);
}
// ===================================================================

class IsUsedEmailRet::_Internal {
 public:
};

IsUsedEmailRet::IsUsedEmailRet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.IsUsedEmailRet)
}
IsUsedEmailRet::IsUsedEmailRet(const IsUsedEmailRet& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  IsUsedEmailRet* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.IsUsedEmailRet)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsUsedEmailRet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsUsedEmailRet::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata IsUsedEmailRet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[4]);
}
// ===================================================================

class LoginInfo::_Internal {
 public:
};

LoginInfo::LoginInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.LoginInfo)
}
LoginInfo::LoginInfo(const LoginInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_) {}

    , decltype(_impl_.passwd_) {}

    , decltype(_impl_.remember_me_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), _this->GetArenaForAllocation());
  }
  _impl_.passwd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.passwd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_passwd().empty()) {
    _this->_impl_.passwd_.Set(from._internal_passwd(), _this->GetArenaForAllocation());
  }
  _this->_impl_.remember_me_ = from._impl_.remember_me_;
  // @@protoc_insertion_point(copy_constructor:prpc.LoginInfo)
}

inline void LoginInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.email_) {}

    , decltype(_impl_.passwd_) {}

    , decltype(_impl_.remember_me_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.email_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.passwd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.passwd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginInfo::~LoginInfo() {
  // @@protoc_insertion_point(destructor:prpc.LoginInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
  _impl_.passwd_.Destroy();
}

void LoginInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.LoginInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _impl_.passwd_.ClearToEmpty();
  _impl_.remember_me_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.LoginInfo.email"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string passwd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_passwd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.LoginInfo.passwd"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bool remember_me = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.remember_me_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* LoginInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.LoginInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    const std::string& _s = this->_internal_email();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.LoginInfo.email");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string passwd = 2;
  if (!this->_internal_passwd().empty()) {
    const std::string& _s = this->_internal_passwd();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.LoginInfo.passwd");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool remember_me = 3;
  if (this->_internal_remember_me() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_remember_me(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.LoginInfo)
  return target;
}

::size_t LoginInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.LoginInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_email());
  }

  // string passwd = 2;
  if (!this->_internal_passwd().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_passwd());
  }

  // bool remember_me = 3;
  if (this->_internal_remember_me() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginInfo::GetClassData() const { return &_class_data_; }


void LoginInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginInfo*>(&to_msg);
  auto& from = static_cast<const LoginInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.LoginInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_passwd().empty()) {
    _this->_internal_set_passwd(from._internal_passwd());
  }
  if (from._internal_remember_me() != 0) {
    _this->_internal_set_remember_me(from._internal_remember_me());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginInfo::CopyFrom(const LoginInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.LoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginInfo::IsInitialized() const {
  return true;
}

void LoginInfo::InternalSwap(LoginInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, lhs_arena,
                                       &other->_impl_.email_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.passwd_, lhs_arena,
                                       &other->_impl_.passwd_, rhs_arena);

  swap(_impl_.remember_me_, other->_impl_.remember_me_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[5]);
}
// ===================================================================

class LoginRet::_Internal {
 public:
  static const ::prpc::UserInfo& user_info(const LoginRet* msg);
};

const ::prpc::UserInfo&
LoginRet::_Internal::user_info(const LoginRet* msg) {
  return *msg->_impl_.user_info_;
}
LoginRet::LoginRet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.LoginRet)
}
LoginRet::LoginRet(const LoginRet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginRet* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_) {}

    , decltype(_impl_.user_info_){nullptr}
    , decltype(_impl_.remember_me_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), _this->GetArenaForAllocation());
  }
  if (from._internal_has_user_info()) {
    _this->_impl_.user_info_ = new ::prpc::UserInfo(*from._impl_.user_info_);
  }
  _this->_impl_.remember_me_ = from._impl_.remember_me_;
  // @@protoc_insertion_point(copy_constructor:prpc.LoginRet)
}

inline void LoginRet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.token_) {}

    , decltype(_impl_.user_info_){nullptr}
    , decltype(_impl_.remember_me_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginRet::~LoginRet() {
  // @@protoc_insertion_point(destructor:prpc.LoginRet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginRet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  if (this != internal_default_instance()) delete _impl_.user_info_;
}

void LoginRet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginRet::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.LoginRet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.user_info_ != nullptr) {
    delete _impl_.user_info_;
  }
  _impl_.user_info_ = nullptr;
  _impl_.remember_me_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginRet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.LoginRet.token"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .prpc.UserInfo user_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool remember_me = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.remember_me_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* LoginRet::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.LoginRet)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.LoginRet.token");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .prpc.UserInfo user_info = 2;
  if (this->_internal_has_user_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::user_info(this),
        _Internal::user_info(this).GetCachedSize(), target, stream);
  }

  // bool remember_me = 3;
  if (this->_internal_remember_me() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_remember_me(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.LoginRet)
  return target;
}

::size_t LoginRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.LoginRet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // .prpc.UserInfo user_info = 2;
  if (this->_internal_has_user_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.user_info_);
  }

  // bool remember_me = 3;
  if (this->_internal_remember_me() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginRet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginRet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginRet::GetClassData() const { return &_class_data_; }


void LoginRet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginRet*>(&to_msg);
  auto& from = static_cast<const LoginRet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.LoginRet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_has_user_info()) {
    _this->_internal_mutable_user_info()->::prpc::UserInfo::MergeFrom(
        from._internal_user_info());
  }
  if (from._internal_remember_me() != 0) {
    _this->_internal_set_remember_me(from._internal_remember_me());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginRet::CopyFrom(const LoginRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.LoginRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRet::IsInitialized() const {
  return true;
}

void LoginRet::InternalSwap(LoginRet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, lhs_arena,
                                       &other->_impl_.token_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginRet, _impl_.remember_me_)
      + sizeof(LoginRet::_impl_.remember_me_)
      - PROTOBUF_FIELD_OFFSET(LoginRet, _impl_.user_info_)>(
          reinterpret_cast<char*>(&_impl_.user_info_),
          reinterpret_cast<char*>(&other->_impl_.user_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginRet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[6]);
}
// ===================================================================

class NewCategoryItemReq::_Internal {
 public:
};

NewCategoryItemReq::NewCategoryItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.NewCategoryItemReq)
}
NewCategoryItemReq::NewCategoryItemReq(const NewCategoryItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NewCategoryItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.resource_path_) {}

    , decltype(_impl_.introduce_) {}

    , decltype(_impl_.parent_id_) {}

    , decltype(_impl_.type_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.resource_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resource_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_path().empty()) {
    _this->_impl_.resource_path_.Set(from._internal_resource_path(), _this->GetArenaForAllocation());
  }
  _impl_.introduce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.introduce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_introduce().empty()) {
    _this->_impl_.introduce_.Set(from._internal_introduce(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.parent_id_, &from._impl_.parent_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.type_id_) -
    reinterpret_cast<char*>(&_impl_.parent_id_)) + sizeof(_impl_.type_id_));
  // @@protoc_insertion_point(copy_constructor:prpc.NewCategoryItemReq)
}

inline void NewCategoryItemReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.resource_path_) {}

    , decltype(_impl_.introduce_) {}

    , decltype(_impl_.parent_id_) { ::int64_t{0} }

    , decltype(_impl_.type_id_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resource_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resource_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.introduce_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.introduce_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewCategoryItemReq::~NewCategoryItemReq() {
  // @@protoc_insertion_point(destructor:prpc.NewCategoryItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewCategoryItemReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.resource_path_.Destroy();
  _impl_.introduce_.Destroy();
}

void NewCategoryItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NewCategoryItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.NewCategoryItemReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.resource_path_.ClearToEmpty();
  _impl_.introduce_.ClearToEmpty();
  ::memset(&_impl_.parent_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_id_) -
      reinterpret_cast<char*>(&_impl_.parent_id_)) + sizeof(_impl_.type_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewCategoryItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.NewCategoryItemReq.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .prpc.CategoryItem.Type type_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::uint32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_type_id(static_cast<::prpc::CategoryItem_Type>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // string resource_path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_resource_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.NewCategoryItemReq.resource_path"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string introduce = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_introduce();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.NewCategoryItemReq.introduce"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 parent_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.parent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* NewCategoryItemReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.NewCategoryItemReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.NewCategoryItemReq.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .prpc.CategoryItem.Type type_id = 2;
  if (this->_internal_type_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type_id(), target);
  }

  // string resource_path = 3;
  if (!this->_internal_resource_path().empty()) {
    const std::string& _s = this->_internal_resource_path();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.NewCategoryItemReq.resource_path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string introduce = 4;
  if (!this->_internal_introduce().empty()) {
    const std::string& _s = this->_internal_introduce();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.NewCategoryItemReq.introduce");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 parent_id = 5;
  if (this->_internal_parent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        5, this->_internal_parent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.NewCategoryItemReq)
  return target;
}

::size_t NewCategoryItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.NewCategoryItemReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string resource_path = 3;
  if (!this->_internal_resource_path().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_resource_path());
  }

  // string introduce = 4;
  if (!this->_internal_introduce().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_introduce());
  }

  // int64 parent_id = 5;
  if (this->_internal_parent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_parent_id());
  }

  // .prpc.CategoryItem.Type type_id = 2;
  if (this->_internal_type_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewCategoryItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NewCategoryItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewCategoryItemReq::GetClassData() const { return &_class_data_; }


void NewCategoryItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NewCategoryItemReq*>(&to_msg);
  auto& from = static_cast<const NewCategoryItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.NewCategoryItemReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_resource_path().empty()) {
    _this->_internal_set_resource_path(from._internal_resource_path());
  }
  if (!from._internal_introduce().empty()) {
    _this->_internal_set_introduce(from._internal_introduce());
  }
  if (from._internal_parent_id() != 0) {
    _this->_internal_set_parent_id(from._internal_parent_id());
  }
  if (from._internal_type_id() != 0) {
    _this->_internal_set_type_id(from._internal_type_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewCategoryItemReq::CopyFrom(const NewCategoryItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.NewCategoryItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewCategoryItemReq::IsInitialized() const {
  return true;
}

void NewCategoryItemReq::InternalSwap(NewCategoryItemReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resource_path_, lhs_arena,
                                       &other->_impl_.resource_path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.introduce_, lhs_arena,
                                       &other->_impl_.introduce_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NewCategoryItemReq, _impl_.type_id_)
      + sizeof(NewCategoryItemReq::_impl_.type_id_)
      - PROTOBUF_FIELD_OFFSET(NewCategoryItemReq, _impl_.parent_id_)>(
          reinterpret_cast<char*>(&_impl_.parent_id_),
          reinterpret_cast<char*>(&other->_impl_.parent_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NewCategoryItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[7]);
}
// ===================================================================

class NewCategoryItemRes::_Internal {
 public:
};

NewCategoryItemRes::NewCategoryItemRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.NewCategoryItemRes)
}
NewCategoryItemRes::NewCategoryItemRes(const NewCategoryItemRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NewCategoryItemRes* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.NewCategoryItemRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewCategoryItemRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewCategoryItemRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NewCategoryItemRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[8]);
}
// ===================================================================

class DelCategoryItemReq::_Internal {
 public:
};

DelCategoryItemReq::DelCategoryItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.DelCategoryItemReq)
}
DelCategoryItemReq::DelCategoryItemReq(const DelCategoryItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.DelCategoryItemReq)
}

inline void DelCategoryItemReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DelCategoryItemReq::~DelCategoryItemReq() {
  // @@protoc_insertion_point(destructor:prpc.DelCategoryItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DelCategoryItemReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void DelCategoryItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DelCategoryItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.DelCategoryItemReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelCategoryItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DelCategoryItemReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.DelCategoryItemReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.DelCategoryItemReq)
  return target;
}

::size_t DelCategoryItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.DelCategoryItemReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelCategoryItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DelCategoryItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelCategoryItemReq::GetClassData() const { return &_class_data_; }


void DelCategoryItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DelCategoryItemReq*>(&to_msg);
  auto& from = static_cast<const DelCategoryItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.DelCategoryItemReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelCategoryItemReq::CopyFrom(const DelCategoryItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.DelCategoryItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelCategoryItemReq::IsInitialized() const {
  return true;
}

void DelCategoryItemReq::InternalSwap(DelCategoryItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelCategoryItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[9]);
}
// ===================================================================

class DelCategoryItemRes::_Internal {
 public:
};

DelCategoryItemRes::DelCategoryItemRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.DelCategoryItemRes)
}
DelCategoryItemRes::DelCategoryItemRes(const DelCategoryItemRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DelCategoryItemRes* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.DelCategoryItemRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelCategoryItemRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelCategoryItemRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DelCategoryItemRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[10]);
}
// ===================================================================

class QuerySubItemsReq::_Internal {
 public:
};

QuerySubItemsReq::QuerySubItemsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QuerySubItemsReq)
}
QuerySubItemsReq::QuerySubItemsReq(const QuerySubItemsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySubItemsReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , decltype(_impl_.parent_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_share_id().empty()) {
    _this->_impl_.share_id_.Set(from._internal_share_id(), _this->GetArenaForAllocation());
  }
  _this->_impl_.parent_id_ = from._impl_.parent_id_;
  // @@protoc_insertion_point(copy_constructor:prpc.QuerySubItemsReq)
}

inline void QuerySubItemsReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , decltype(_impl_.parent_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuerySubItemsReq::~QuerySubItemsReq() {
  // @@protoc_insertion_point(destructor:prpc.QuerySubItemsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySubItemsReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.share_id_.Destroy();
}

void QuerySubItemsReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySubItemsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QuerySubItemsReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_.ClearToEmpty();
  _impl_.parent_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySubItemsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 parent_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.parent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string share_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_share_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.QuerySubItemsReq.share_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySubItemsReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QuerySubItemsReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 parent_id = 1;
  if (this->_internal_parent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_parent_id(), target);
  }

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    const std::string& _s = this->_internal_share_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.QuerySubItemsReq.share_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QuerySubItemsReq)
  return target;
}

::size_t QuerySubItemsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QuerySubItemsReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_share_id());
  }

  // int64 parent_id = 1;
  if (this->_internal_parent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_parent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySubItemsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySubItemsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySubItemsReq::GetClassData() const { return &_class_data_; }


void QuerySubItemsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySubItemsReq*>(&to_msg);
  auto& from = static_cast<const QuerySubItemsReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QuerySubItemsReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_share_id().empty()) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  if (from._internal_parent_id() != 0) {
    _this->_internal_set_parent_id(from._internal_parent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySubItemsReq::CopyFrom(const QuerySubItemsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QuerySubItemsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySubItemsReq::IsInitialized() const {
  return true;
}

void QuerySubItemsReq::InternalSwap(QuerySubItemsReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.share_id_, lhs_arena,
                                       &other->_impl_.share_id_, rhs_arena);

  swap(_impl_.parent_id_, other->_impl_.parent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySubItemsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[11]);
}
// ===================================================================

class QuerySubItemsRes::_Internal {
 public:
  static const ::prpc::CategoryItem& parent_item(const QuerySubItemsRes* msg);
};

const ::prpc::CategoryItem&
QuerySubItemsRes::_Internal::parent_item(const QuerySubItemsRes* msg) {
  return *msg->_impl_.parent_item_;
}
void QuerySubItemsRes::clear_parent_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.parent_item_ != nullptr) {
    delete _impl_.parent_item_;
  }
  _impl_.parent_item_ = nullptr;
}
void QuerySubItemsRes::clear_items() {
  _impl_.items_.Clear();
}
QuerySubItemsRes::QuerySubItemsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QuerySubItemsRes)
}
QuerySubItemsRes::QuerySubItemsRes(const QuerySubItemsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySubItemsRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.parent_item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_parent_item()) {
    _this->_impl_.parent_item_ = new ::prpc::CategoryItem(*from._impl_.parent_item_);
  }
  // @@protoc_insertion_point(copy_constructor:prpc.QuerySubItemsRes)
}

inline void QuerySubItemsRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.parent_item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuerySubItemsRes::~QuerySubItemsRes() {
  // @@protoc_insertion_point(destructor:prpc.QuerySubItemsRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySubItemsRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.parent_item_;
}

void QuerySubItemsRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySubItemsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QuerySubItemsRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.parent_item_ != nullptr) {
    delete _impl_.parent_item_;
  }
  _impl_.parent_item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySubItemsRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .prpc.CategoryItem parent_item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parent_item(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .prpc.CategoryItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySubItemsRes::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QuerySubItemsRes)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .prpc.CategoryItem parent_item = 1;
  if (this->_internal_has_parent_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::parent_item(this),
        _Internal::parent_item(this).GetCachedSize(), target, stream);
  }

  // repeated .prpc.CategoryItem items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QuerySubItemsRes)
  return target;
}

::size_t QuerySubItemsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QuerySubItemsRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.CategoryItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .prpc.CategoryItem parent_item = 1;
  if (this->_internal_has_parent_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.parent_item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySubItemsRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySubItemsRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySubItemsRes::GetClassData() const { return &_class_data_; }


void QuerySubItemsRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySubItemsRes*>(&to_msg);
  auto& from = static_cast<const QuerySubItemsRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QuerySubItemsRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_has_parent_item()) {
    _this->_internal_mutable_parent_item()->::prpc::CategoryItem::MergeFrom(
        from._internal_parent_item());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySubItemsRes::CopyFrom(const QuerySubItemsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QuerySubItemsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySubItemsRes::IsInitialized() const {
  return true;
}

void QuerySubItemsRes::InternalSwap(QuerySubItemsRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.parent_item_, other->_impl_.parent_item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySubItemsRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[12]);
}
// ===================================================================

class QueryBtVideosReq::_Internal {
 public:
  static const ::prpc::InfoHash& info_hash(const QueryBtVideosReq* msg);
};

const ::prpc::InfoHash&
QueryBtVideosReq::_Internal::info_hash(const QueryBtVideosReq* msg) {
  return *msg->_impl_.info_hash_;
}
void QueryBtVideosReq::clear_info_hash() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_hash_ != nullptr) {
    delete _impl_.info_hash_;
  }
  _impl_.info_hash_ = nullptr;
}
QueryBtVideosReq::QueryBtVideosReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QueryBtVideosReq)
}
QueryBtVideosReq::QueryBtVideosReq(const QueryBtVideosReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBtVideosReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_hash_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_hash()) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:prpc.QueryBtVideosReq)
}

inline void QueryBtVideosReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.info_hash_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryBtVideosReq::~QueryBtVideosReq() {
  // @@protoc_insertion_point(destructor:prpc.QueryBtVideosReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBtVideosReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}

void QueryBtVideosReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBtVideosReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QueryBtVideosReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_hash_ != nullptr) {
    delete _impl_.info_hash_;
  }
  _impl_.info_hash_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBtVideosReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .prpc.InfoHash info_hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_hash(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBtVideosReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QueryBtVideosReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  if (this->_internal_has_info_hash()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QueryBtVideosReq)
  return target;
}

::size_t QueryBtVideosReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QueryBtVideosReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  if (this->_internal_has_info_hash()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBtVideosReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBtVideosReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBtVideosReq::GetClassData() const { return &_class_data_; }


void QueryBtVideosReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBtVideosReq*>(&to_msg);
  auto& from = static_cast<const QueryBtVideosReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QueryBtVideosReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info_hash()) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBtVideosReq::CopyFrom(const QueryBtVideosReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QueryBtVideosReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBtVideosReq::IsInitialized() const {
  return true;
}

void QueryBtVideosReq::InternalSwap(QueryBtVideosReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBtVideosReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[13]);
}
// ===================================================================

class BtFileMetadata::_Internal {
 public:
  static const ::prpc::VideoMetadata& meta(const BtFileMetadata* msg);
};

const ::prpc::VideoMetadata&
BtFileMetadata::_Internal::meta(const BtFileMetadata* msg) {
  return *msg->_impl_.meta_;
}
void BtFileMetadata::clear_meta() {
  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
}
BtFileMetadata::BtFileMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.BtFileMetadata)
}
BtFileMetadata::BtFileMetadata(const BtFileMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BtFileMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.file_index_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::prpc::VideoMetadata(*from._impl_.meta_);
  }
  _this->_impl_.file_index_ = from._impl_.file_index_;
  // @@protoc_insertion_point(copy_constructor:prpc.BtFileMetadata)
}

inline void BtFileMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.file_index_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BtFileMetadata::~BtFileMetadata() {
  // @@protoc_insertion_point(destructor:prpc.BtFileMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BtFileMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void BtFileMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BtFileMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.BtFileMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  _impl_.file_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BtFileMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 file_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.file_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .prpc.VideoMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BtFileMetadata::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.BtFileMetadata)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 file_index = 1;
  if (this->_internal_file_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_file_index(), target);
  }

  // .prpc.VideoMetadata meta = 2;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.BtFileMetadata)
  return target;
}

::size_t BtFileMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.BtFileMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.VideoMetadata meta = 2;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  // int32 file_index = 1;
  if (this->_internal_file_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_file_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BtFileMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BtFileMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BtFileMetadata::GetClassData() const { return &_class_data_; }


void BtFileMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BtFileMetadata*>(&to_msg);
  auto& from = static_cast<const BtFileMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.BtFileMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::prpc::VideoMetadata::MergeFrom(
        from._internal_meta());
  }
  if (from._internal_file_index() != 0) {
    _this->_internal_set_file_index(from._internal_file_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BtFileMetadata::CopyFrom(const BtFileMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.BtFileMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BtFileMetadata::IsInitialized() const {
  return true;
}

void BtFileMetadata::InternalSwap(BtFileMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BtFileMetadata, _impl_.file_index_)
      + sizeof(BtFileMetadata::_impl_.file_index_)
      - PROTOBUF_FIELD_OFFSET(BtFileMetadata, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BtFileMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[14]);
}
// ===================================================================

class QueryBtVideosRes::_Internal {
 public:
};

QueryBtVideosRes::QueryBtVideosRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QueryBtVideosRes)
}
QueryBtVideosRes::QueryBtVideosRes(const QueryBtVideosRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBtVideosRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.QueryBtVideosRes)
}

inline void QueryBtVideosRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryBtVideosRes::~QueryBtVideosRes() {
  // @@protoc_insertion_point(destructor:prpc.QueryBtVideosRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBtVideosRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
}

void QueryBtVideosRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBtVideosRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QueryBtVideosRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBtVideosRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .prpc.BtFileMetadata data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBtVideosRes::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QueryBtVideosRes)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prpc.BtFileMetadata data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QueryBtVideosRes)
  return target;
}

::size_t QueryBtVideosRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QueryBtVideosRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.BtFileMetadata data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_impl_.data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBtVideosRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBtVideosRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBtVideosRes::GetClassData() const { return &_class_data_; }


void QueryBtVideosRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBtVideosRes*>(&to_msg);
  auto& from = static_cast<const QueryBtVideosRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QueryBtVideosRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBtVideosRes::CopyFrom(const QueryBtVideosRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QueryBtVideosRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBtVideosRes::IsInitialized() const {
  return true;
}

void QueryBtVideosRes::InternalSwap(QueryBtVideosRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBtVideosRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[15]);
}
// ===================================================================

class AddBtVideosReq::_Internal {
 public:
  static const ::prpc::InfoHash& info_hash(const AddBtVideosReq* msg);
};

const ::prpc::InfoHash&
AddBtVideosReq::_Internal::info_hash(const AddBtVideosReq* msg) {
  return *msg->_impl_.info_hash_;
}
void AddBtVideosReq::clear_info_hash() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_hash_ != nullptr) {
    delete _impl_.info_hash_;
  }
  _impl_.info_hash_ = nullptr;
}
AddBtVideosReq::AddBtVideosReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.AddBtVideosReq)
}
AddBtVideosReq::AddBtVideosReq(const AddBtVideosReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddBtVideosReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_indexes_) { from._impl_.file_indexes_ }
    ,/* _impl_._file_indexes_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.info_hash_){nullptr}
    , decltype(_impl_.category_item_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_hash()) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }
  _this->_impl_.category_item_id_ = from._impl_.category_item_id_;
  // @@protoc_insertion_point(copy_constructor:prpc.AddBtVideosReq)
}

inline void AddBtVideosReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.file_indexes_) { arena }
    ,/* _impl_._file_indexes_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.info_hash_){nullptr}
    , decltype(_impl_.category_item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddBtVideosReq::~AddBtVideosReq() {
  // @@protoc_insertion_point(destructor:prpc.AddBtVideosReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddBtVideosReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_indexes_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}

void AddBtVideosReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddBtVideosReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.AddBtVideosReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_indexes_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.info_hash_ != nullptr) {
    delete _impl_.info_hash_;
  }
  _impl_.info_hash_ = nullptr;
  _impl_.category_item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddBtVideosReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .prpc.InfoHash info_hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_hash(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated int32 file_indexes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_file_indexes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 16) {
          _internal_add_file_indexes(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 category_item_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.category_item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AddBtVideosReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.AddBtVideosReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  if (this->_internal_has_info_hash()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  // repeated int32 file_indexes = 2;
  {
    int byte_size = _impl_._file_indexes_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(2, _internal_file_indexes(),
                                                 byte_size, target);
    }
  }

  // int64 category_item_id = 3;
  if (this->_internal_category_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_category_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.AddBtVideosReq)
  return target;
}

::size_t AddBtVideosReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.AddBtVideosReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 file_indexes = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(this->_impl_.file_indexes_)
    ;
    _impl_._file_indexes_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }

  // .prpc.InfoHash info_hash = 1;
  if (this->_internal_has_info_hash()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  // int64 category_item_id = 3;
  if (this->_internal_category_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_category_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddBtVideosReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddBtVideosReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddBtVideosReq::GetClassData() const { return &_class_data_; }


void AddBtVideosReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddBtVideosReq*>(&to_msg);
  auto& from = static_cast<const AddBtVideosReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.AddBtVideosReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.file_indexes_.MergeFrom(from._impl_.file_indexes_);
  if (from._internal_has_info_hash()) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  if (from._internal_category_item_id() != 0) {
    _this->_internal_set_category_item_id(from._internal_category_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddBtVideosReq::CopyFrom(const AddBtVideosReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.AddBtVideosReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBtVideosReq::IsInitialized() const {
  return true;
}

void AddBtVideosReq::InternalSwap(AddBtVideosReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.file_indexes_.InternalSwap(&other->_impl_.file_indexes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddBtVideosReq, _impl_.category_item_id_)
      + sizeof(AddBtVideosReq::_impl_.category_item_id_)
      - PROTOBUF_FIELD_OFFSET(AddBtVideosReq, _impl_.info_hash_)>(
          reinterpret_cast<char*>(&_impl_.info_hash_),
          reinterpret_cast<char*>(&other->_impl_.info_hash_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddBtVideosReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[16]);
}
// ===================================================================

class AddBtVideosRes::_Internal {
 public:
};

AddBtVideosRes::AddBtVideosRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.AddBtVideosRes)
}
AddBtVideosRes::AddBtVideosRes(const AddBtVideosRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddBtVideosRes* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.AddBtVideosRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddBtVideosRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddBtVideosRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddBtVideosRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[17]);
}
// ===================================================================

class QueryItemInfoReq::_Internal {
 public:
};

QueryItemInfoReq::QueryItemInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QueryItemInfoReq)
}
QueryItemInfoReq::QueryItemInfoReq(const QueryItemInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryItemInfoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , decltype(_impl_.item_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_share_id().empty()) {
    _this->_impl_.share_id_.Set(from._internal_share_id(), _this->GetArenaForAllocation());
  }
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:prpc.QueryItemInfoReq)
}

inline void QueryItemInfoReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryItemInfoReq::~QueryItemInfoReq() {
  // @@protoc_insertion_point(destructor:prpc.QueryItemInfoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryItemInfoReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.share_id_.Destroy();
}

void QueryItemInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryItemInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QueryItemInfoReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_.ClearToEmpty();
  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryItemInfoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string share_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_share_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.QueryItemInfoReq.share_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryItemInfoReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QueryItemInfoReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    const std::string& _s = this->_internal_share_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.QueryItemInfoReq.share_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QueryItemInfoReq)
  return target;
}

::size_t QueryItemInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QueryItemInfoReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_share_id());
  }

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryItemInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryItemInfoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryItemInfoReq::GetClassData() const { return &_class_data_; }


void QueryItemInfoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryItemInfoReq*>(&to_msg);
  auto& from = static_cast<const QueryItemInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QueryItemInfoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_share_id().empty()) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryItemInfoReq::CopyFrom(const QueryItemInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QueryItemInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryItemInfoReq::IsInitialized() const {
  return true;
}

void QueryItemInfoReq::InternalSwap(QueryItemInfoReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.share_id_, lhs_arena,
                                       &other->_impl_.share_id_, rhs_arena);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryItemInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[18]);
}
// ===================================================================

class QueryItemInfoRes::_Internal {
 public:
  static const ::prpc::CategoryItem& item_info(const QueryItemInfoRes* msg);
  static const ::prpc::Video& video_info(const QueryItemInfoRes* msg);
};

const ::prpc::CategoryItem&
QueryItemInfoRes::_Internal::item_info(const QueryItemInfoRes* msg) {
  return *msg->_impl_.item_info_;
}
const ::prpc::Video&
QueryItemInfoRes::_Internal::video_info(const QueryItemInfoRes* msg) {
  return *msg->_impl_.video_info_;
}
void QueryItemInfoRes::clear_item_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_info_ != nullptr) {
    delete _impl_.item_info_;
  }
  _impl_.item_info_ = nullptr;
}
void QueryItemInfoRes::clear_video_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.video_info_ != nullptr) {
    delete _impl_.video_info_;
  }
  _impl_.video_info_ = nullptr;
}
QueryItemInfoRes::QueryItemInfoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QueryItemInfoRes)
}
QueryItemInfoRes::QueryItemInfoRes(const QueryItemInfoRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryItemInfoRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_info_){nullptr}
    , decltype(_impl_.video_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item_info()) {
    _this->_impl_.item_info_ = new ::prpc::CategoryItem(*from._impl_.item_info_);
  }
  if (from._internal_has_video_info()) {
    _this->_impl_.video_info_ = new ::prpc::Video(*from._impl_.video_info_);
  }
  // @@protoc_insertion_point(copy_constructor:prpc.QueryItemInfoRes)
}

inline void QueryItemInfoRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.item_info_){nullptr}
    , decltype(_impl_.video_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryItemInfoRes::~QueryItemInfoRes() {
  // @@protoc_insertion_point(destructor:prpc.QueryItemInfoRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryItemInfoRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_info_;
  if (this != internal_default_instance()) delete _impl_.video_info_;
}

void QueryItemInfoRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryItemInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QueryItemInfoRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_info_ != nullptr) {
    delete _impl_.item_info_;
  }
  _impl_.item_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.video_info_ != nullptr) {
    delete _impl_.video_info_;
  }
  _impl_.video_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryItemInfoRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .prpc.CategoryItem item_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .prpc.Video video_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_video_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryItemInfoRes::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QueryItemInfoRes)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .prpc.CategoryItem item_info = 1;
  if (this->_internal_has_item_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item_info(this),
        _Internal::item_info(this).GetCachedSize(), target, stream);
  }

  // .prpc.Video video_info = 2;
  if (this->_internal_has_video_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::video_info(this),
        _Internal::video_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QueryItemInfoRes)
  return target;
}

::size_t QueryItemInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QueryItemInfoRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.CategoryItem item_info = 1;
  if (this->_internal_has_item_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_info_);
  }

  // .prpc.Video video_info = 2;
  if (this->_internal_has_video_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.video_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryItemInfoRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryItemInfoRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryItemInfoRes::GetClassData() const { return &_class_data_; }


void QueryItemInfoRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryItemInfoRes*>(&to_msg);
  auto& from = static_cast<const QueryItemInfoRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QueryItemInfoRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item_info()) {
    _this->_internal_mutable_item_info()->::prpc::CategoryItem::MergeFrom(
        from._internal_item_info());
  }
  if (from._internal_has_video_info()) {
    _this->_internal_mutable_video_info()->::prpc::Video::MergeFrom(
        from._internal_video_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryItemInfoRes::CopyFrom(const QueryItemInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QueryItemInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryItemInfoRes::IsInitialized() const {
  return true;
}

void QueryItemInfoRes::InternalSwap(QueryItemInfoRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryItemInfoRes, _impl_.video_info_)
      + sizeof(QueryItemInfoRes::_impl_.video_info_)
      - PROTOBUF_FIELD_OFFSET(QueryItemInfoRes, _impl_.item_info_)>(
          reinterpret_cast<char*>(&_impl_.item_info_),
          reinterpret_cast<char*>(&other->_impl_.item_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryItemInfoRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[19]);
}
// ===================================================================

class ShareItemReq::_Internal {
 public:
};

ShareItemReq::ShareItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.ShareItemReq)
}
ShareItemReq::ShareItemReq(const ShareItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.ShareItemReq)
}

inline void ShareItemReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShareItemReq::~ShareItemReq() {
  // @@protoc_insertion_point(destructor:prpc.ShareItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareItemReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ShareItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.ShareItemReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ShareItemReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.ShareItemReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.ShareItemReq)
  return target;
}

::size_t ShareItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.ShareItemReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareItemReq::GetClassData() const { return &_class_data_; }


void ShareItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareItemReq*>(&to_msg);
  auto& from = static_cast<const ShareItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.ShareItemReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareItemReq::CopyFrom(const ShareItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.ShareItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareItemReq::IsInitialized() const {
  return true;
}

void ShareItemReq::InternalSwap(ShareItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[20]);
}
// ===================================================================

class ShareItemRes::_Internal {
 public:
};

ShareItemRes::ShareItemRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.ShareItemRes)
}
ShareItemRes::ShareItemRes(const ShareItemRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareItemRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , decltype(_impl_.item_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_share_id().empty()) {
    _this->_impl_.share_id_.Set(from._internal_share_id(), _this->GetArenaForAllocation());
  }
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:prpc.ShareItemRes)
}

inline void ShareItemRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShareItemRes::~ShareItemRes() {
  // @@protoc_insertion_point(destructor:prpc.ShareItemRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareItemRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.share_id_.Destroy();
}

void ShareItemRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareItemRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.ShareItemRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_.ClearToEmpty();
  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareItemRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string share_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_share_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.ShareItemRes.share_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ShareItemRes::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.ShareItemRes)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    const std::string& _s = this->_internal_share_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.ShareItemRes.share_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.ShareItemRes)
  return target;
}

::size_t ShareItemRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.ShareItemRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string share_id = 2;
  if (!this->_internal_share_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_share_id());
  }

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareItemRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareItemRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareItemRes::GetClassData() const { return &_class_data_; }


void ShareItemRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareItemRes*>(&to_msg);
  auto& from = static_cast<const ShareItemRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.ShareItemRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_share_id().empty()) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareItemRes::CopyFrom(const ShareItemRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.ShareItemRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareItemRes::IsInitialized() const {
  return true;
}

void ShareItemRes::InternalSwap(ShareItemRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.share_id_, lhs_arena,
                                       &other->_impl_.share_id_, rhs_arena);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareItemRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[21]);
}
// ===================================================================

class QuerySharedItemsReq::_Internal {
 public:
};

QuerySharedItemsReq::QuerySharedItemsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QuerySharedItemsReq)
}
QuerySharedItemsReq::QuerySharedItemsReq(const QuerySharedItemsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.QuerySharedItemsReq)
}

inline void QuerySharedItemsReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuerySharedItemsReq::~QuerySharedItemsReq() {
  // @@protoc_insertion_point(destructor:prpc.QuerySharedItemsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySharedItemsReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QuerySharedItemsReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySharedItemsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QuerySharedItemsReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySharedItemsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySharedItemsReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QuerySharedItemsReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QuerySharedItemsReq)
  return target;
}

::size_t QuerySharedItemsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QuerySharedItemsReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySharedItemsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySharedItemsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySharedItemsReq::GetClassData() const { return &_class_data_; }


void QuerySharedItemsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySharedItemsReq*>(&to_msg);
  auto& from = static_cast<const QuerySharedItemsReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QuerySharedItemsReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySharedItemsReq::CopyFrom(const QuerySharedItemsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QuerySharedItemsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySharedItemsReq::IsInitialized() const {
  return true;
}

void QuerySharedItemsReq::InternalSwap(QuerySharedItemsReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySharedItemsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[22]);
}
// ===================================================================

class QuerySharedItemsRes::_Internal {
 public:
};

void QuerySharedItemsRes::clear_shared_items() {
  _impl_.shared_items_.Clear();
}
QuerySharedItemsRes::QuerySharedItemsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.QuerySharedItemsRes)
}
QuerySharedItemsRes::QuerySharedItemsRes(const QuerySharedItemsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySharedItemsRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.shared_items_){from._impl_.shared_items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.QuerySharedItemsRes)
}

inline void QuerySharedItemsRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.shared_items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuerySharedItemsRes::~QuerySharedItemsRes() {
  // @@protoc_insertion_point(destructor:prpc.QuerySharedItemsRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySharedItemsRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.shared_items_.~RepeatedPtrField();
}

void QuerySharedItemsRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySharedItemsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.QuerySharedItemsRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shared_items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySharedItemsRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .prpc.SharedItem shared_items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shared_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySharedItemsRes::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.QuerySharedItemsRes)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prpc.SharedItem shared_items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_shared_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_shared_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.QuerySharedItemsRes)
  return target;
}

::size_t QuerySharedItemsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.QuerySharedItemsRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.SharedItem shared_items = 1;
  total_size += 1UL * this->_internal_shared_items_size();
  for (const auto& msg : this->_impl_.shared_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySharedItemsRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySharedItemsRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySharedItemsRes::GetClassData() const { return &_class_data_; }


void QuerySharedItemsRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySharedItemsRes*>(&to_msg);
  auto& from = static_cast<const QuerySharedItemsRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.QuerySharedItemsRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.shared_items_.MergeFrom(from._impl_.shared_items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySharedItemsRes::CopyFrom(const QuerySharedItemsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.QuerySharedItemsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySharedItemsRes::IsInitialized() const {
  return true;
}

void QuerySharedItemsRes::InternalSwap(QuerySharedItemsRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shared_items_.InternalSwap(&other->_impl_.shared_items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySharedItemsRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[23]);
}
// ===================================================================

class DelSharedItemReq::_Internal {
 public:
};

DelSharedItemReq::DelSharedItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.DelSharedItemReq)
}
DelSharedItemReq::DelSharedItemReq(const DelSharedItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DelSharedItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_share_id().empty()) {
    _this->_impl_.share_id_.Set(from._internal_share_id(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:prpc.DelSharedItemReq)
}

inline void DelSharedItemReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.share_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.share_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DelSharedItemReq::~DelSharedItemReq() {
  // @@protoc_insertion_point(destructor:prpc.DelSharedItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DelSharedItemReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.share_id_.Destroy();
}

void DelSharedItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DelSharedItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.DelSharedItemReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelSharedItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string share_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_share_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.DelSharedItemReq.share_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DelSharedItemReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.DelSharedItemReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string share_id = 1;
  if (!this->_internal_share_id().empty()) {
    const std::string& _s = this->_internal_share_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.DelSharedItemReq.share_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.DelSharedItemReq)
  return target;
}

::size_t DelSharedItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.DelSharedItemReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string share_id = 1;
  if (!this->_internal_share_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_share_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelSharedItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DelSharedItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelSharedItemReq::GetClassData() const { return &_class_data_; }


void DelSharedItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DelSharedItemReq*>(&to_msg);
  auto& from = static_cast<const DelSharedItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.DelSharedItemReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_share_id().empty()) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelSharedItemReq::CopyFrom(const DelSharedItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.DelSharedItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelSharedItemReq::IsInitialized() const {
  return true;
}

void DelSharedItemReq::InternalSwap(DelSharedItemReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.share_id_, lhs_arena,
                                       &other->_impl_.share_id_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelSharedItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[24]);
}
// ===================================================================

class DelSharedItemRes::_Internal {
 public:
};

DelSharedItemRes::DelSharedItemRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.DelSharedItemRes)
}
DelSharedItemRes::DelSharedItemRes(const DelSharedItemRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DelSharedItemRes* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.DelSharedItemRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelSharedItemRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelSharedItemRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DelSharedItemRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[25]);
}
// ===================================================================

class RefreshSubtitleReq::_Internal {
 public:
};

RefreshSubtitleReq::RefreshSubtitleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.RefreshSubtitleReq)
}
RefreshSubtitleReq::RefreshSubtitleReq(const RefreshSubtitleReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.RefreshSubtitleReq)
}

inline void RefreshSubtitleReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshSubtitleReq::~RefreshSubtitleReq() {
  // @@protoc_insertion_point(destructor:prpc.RefreshSubtitleReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshSubtitleReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void RefreshSubtitleReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshSubtitleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.RefreshSubtitleReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshSubtitleReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* RefreshSubtitleReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.RefreshSubtitleReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.RefreshSubtitleReq)
  return target;
}

::size_t RefreshSubtitleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.RefreshSubtitleReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshSubtitleReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshSubtitleReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshSubtitleReq::GetClassData() const { return &_class_data_; }


void RefreshSubtitleReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshSubtitleReq*>(&to_msg);
  auto& from = static_cast<const RefreshSubtitleReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.RefreshSubtitleReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshSubtitleReq::CopyFrom(const RefreshSubtitleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.RefreshSubtitleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshSubtitleReq::IsInitialized() const {
  return true;
}

void RefreshSubtitleReq::InternalSwap(RefreshSubtitleReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshSubtitleReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[26]);
}
// ===================================================================

class RefreshSubtitleRes::_Internal {
 public:
};

RefreshSubtitleRes::RefreshSubtitleRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.RefreshSubtitleRes)
}
RefreshSubtitleRes::RefreshSubtitleRes(const RefreshSubtitleRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RefreshSubtitleRes* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.RefreshSubtitleRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshSubtitleRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshSubtitleRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RefreshSubtitleRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[27]);
}
// ===================================================================

class SubtitleFile::_Internal {
 public:
};

SubtitleFile::SubtitleFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.SubtitleFile)
}
SubtitleFile::SubtitleFile(const SubtitleFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubtitleFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.content_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:prpc.SubtitleFile)
}

inline void SubtitleFile::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.content_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubtitleFile::~SubtitleFile() {
  // @@protoc_insertion_point(destructor:prpc.SubtitleFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubtitleFile::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.content_.Destroy();
}

void SubtitleFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubtitleFile::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.SubtitleFile)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtitleFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.SubtitleFile.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* SubtitleFile::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.SubtitleFile)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.SubtitleFile.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.SubtitleFile)
  return target;
}

::size_t SubtitleFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.SubtitleFile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubtitleFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubtitleFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubtitleFile::GetClassData() const { return &_class_data_; }


void SubtitleFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubtitleFile*>(&to_msg);
  auto& from = static_cast<const SubtitleFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.SubtitleFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubtitleFile::CopyFrom(const SubtitleFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.SubtitleFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtitleFile::IsInitialized() const {
  return true;
}

void SubtitleFile::InternalSwap(SubtitleFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, lhs_arena,
                                       &other->_impl_.content_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtitleFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[28]);
}
// ===================================================================

class UploadSubtitleReq::_Internal {
 public:
};

UploadSubtitleReq::UploadSubtitleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.UploadSubtitleReq)
}
UploadSubtitleReq::UploadSubtitleReq(const UploadSubtitleReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadSubtitleReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subtitles_){from._impl_.subtitles_}
    , decltype(_impl_.item_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:prpc.UploadSubtitleReq)
}

inline void UploadSubtitleReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.subtitles_){arena}
    , decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UploadSubtitleReq::~UploadSubtitleReq() {
  // @@protoc_insertion_point(destructor:prpc.UploadSubtitleReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadSubtitleReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subtitles_.~RepeatedPtrField();
}

void UploadSubtitleReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadSubtitleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.UploadSubtitleReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subtitles_.Clear();
  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadSubtitleReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .prpc.SubtitleFile subtitles = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subtitles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* UploadSubtitleReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.UploadSubtitleReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  // repeated .prpc.SubtitleFile subtitles = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subtitles_size()); i < n; i++) {
    const auto& repfield = this->_internal_subtitles(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.UploadSubtitleReq)
  return target;
}

::size_t UploadSubtitleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.UploadSubtitleReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.SubtitleFile subtitles = 2;
  total_size += 1UL * this->_internal_subtitles_size();
  for (const auto& msg : this->_impl_.subtitles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadSubtitleReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadSubtitleReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadSubtitleReq::GetClassData() const { return &_class_data_; }


void UploadSubtitleReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadSubtitleReq*>(&to_msg);
  auto& from = static_cast<const UploadSubtitleReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.UploadSubtitleReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subtitles_.MergeFrom(from._impl_.subtitles_);
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadSubtitleReq::CopyFrom(const UploadSubtitleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.UploadSubtitleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadSubtitleReq::IsInitialized() const {
  return true;
}

void UploadSubtitleReq::InternalSwap(UploadSubtitleReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subtitles_.InternalSwap(&other->_impl_.subtitles_);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadSubtitleReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[29]);
}
// ===================================================================

class UploadSubtitleRes::_Internal {
 public:
};

UploadSubtitleRes::UploadSubtitleRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.UploadSubtitleRes)
}
UploadSubtitleRes::UploadSubtitleRes(const UploadSubtitleRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UploadSubtitleRes* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.UploadSubtitleRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadSubtitleRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadSubtitleRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UploadSubtitleRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[30]);
}
// ===================================================================

class JoinChatRoomReq::_Internal {
 public:
};

JoinChatRoomReq::JoinChatRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.JoinChatRoomReq)
}
JoinChatRoomReq::JoinChatRoomReq(const JoinChatRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.JoinChatRoomReq)
}

inline void JoinChatRoomReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JoinChatRoomReq::~JoinChatRoomReq() {
  // @@protoc_insertion_point(destructor:prpc.JoinChatRoomReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JoinChatRoomReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void JoinChatRoomReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JoinChatRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.JoinChatRoomReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinChatRoomReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* JoinChatRoomReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.JoinChatRoomReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.JoinChatRoomReq)
  return target;
}

::size_t JoinChatRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.JoinChatRoomReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JoinChatRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JoinChatRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JoinChatRoomReq::GetClassData() const { return &_class_data_; }


void JoinChatRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JoinChatRoomReq*>(&to_msg);
  auto& from = static_cast<const JoinChatRoomReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.JoinChatRoomReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JoinChatRoomReq::CopyFrom(const JoinChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.JoinChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinChatRoomReq::IsInitialized() const {
  return true;
}

void JoinChatRoomReq::InternalSwap(JoinChatRoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinChatRoomReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[31]);
}
// ===================================================================

class ChatMessage::_Internal {
 public:
};

ChatMessage::ChatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.ChatMessage)
}
ChatMessage::ChatMessage(const ChatMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChatMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_name_) {}

    , decltype(_impl_.msg_) {}

    , decltype(_impl_.user_id_) {}

    , decltype(_impl_.sent_time_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_name().empty()) {
    _this->_impl_.user_name_.Set(from._internal_user_name(), _this->GetArenaForAllocation());
  }
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sent_time_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.sent_time_));
  // @@protoc_insertion_point(copy_constructor:prpc.ChatMessage)
}

inline void ChatMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.user_name_) {}

    , decltype(_impl_.msg_) {}

    , decltype(_impl_.user_id_) { ::int64_t{0} }

    , decltype(_impl_.sent_time_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChatMessage::~ChatMessage() {
  // @@protoc_insertion_point(destructor:prpc.ChatMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChatMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_name_.Destroy();
  _impl_.msg_.Destroy();
}

void ChatMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.ChatMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_name_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  ::memset(&_impl_.user_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sent_time_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.sent_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChatMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string user_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.ChatMessage.user_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 sent_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.sent_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "prpc.ChatMessage.msg"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ChatMessage::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.ChatMessage)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_user_id(), target);
  }

  // string user_name = 2;
  if (!this->_internal_user_name().empty()) {
    const std::string& _s = this->_internal_user_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.ChatMessage.user_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 sent_time = 3;
  if (this->_internal_sent_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_sent_time(), target);
  }

  // string msg = 4;
  if (!this->_internal_msg().empty()) {
    const std::string& _s = this->_internal_msg();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "prpc.ChatMessage.msg");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.ChatMessage)
  return target;
}

::size_t ChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.ChatMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_name = 2;
  if (!this->_internal_user_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_user_name());
  }

  // string msg = 4;
  if (!this->_internal_msg().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_user_id());
  }

  // int64 sent_time = 3;
  if (this->_internal_sent_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sent_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChatMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChatMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChatMessage::GetClassData() const { return &_class_data_; }


void ChatMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChatMessage*>(&to_msg);
  auto& from = static_cast<const ChatMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.ChatMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_name().empty()) {
    _this->_internal_set_user_name(from._internal_user_name());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_sent_time() != 0) {
    _this->_internal_set_sent_time(from._internal_sent_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChatMessage::CopyFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessage::IsInitialized() const {
  return true;
}

void ChatMessage::InternalSwap(ChatMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_name_, lhs_arena,
                                       &other->_impl_.user_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, lhs_arena,
                                       &other->_impl_.msg_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.sent_time_)
      + sizeof(ChatMessage::_impl_.sent_time_)
      - PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChatMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[32]);
}
// ===================================================================

class JoinChatRoomRes::_Internal {
 public:
};

JoinChatRoomRes::JoinChatRoomRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.JoinChatRoomRes)
}
JoinChatRoomRes::JoinChatRoomRes(const JoinChatRoomRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JoinChatRoomRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_msgs_){from._impl_.chat_msgs_}
    , decltype(_impl_.item_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:prpc.JoinChatRoomRes)
}

inline void JoinChatRoomRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_msgs_){arena}
    , decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JoinChatRoomRes::~JoinChatRoomRes() {
  // @@protoc_insertion_point(destructor:prpc.JoinChatRoomRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JoinChatRoomRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.chat_msgs_.~RepeatedPtrField();
}

void JoinChatRoomRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JoinChatRoomRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.JoinChatRoomRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chat_msgs_.Clear();
  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinChatRoomRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .prpc.ChatMessage chat_msgs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_chat_msgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* JoinChatRoomRes::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.JoinChatRoomRes)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  // repeated .prpc.ChatMessage chat_msgs = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_chat_msgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_chat_msgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.JoinChatRoomRes)
  return target;
}

::size_t JoinChatRoomRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.JoinChatRoomRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.ChatMessage chat_msgs = 2;
  total_size += 1UL * this->_internal_chat_msgs_size();
  for (const auto& msg : this->_impl_.chat_msgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JoinChatRoomRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JoinChatRoomRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JoinChatRoomRes::GetClassData() const { return &_class_data_; }


void JoinChatRoomRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JoinChatRoomRes*>(&to_msg);
  auto& from = static_cast<const JoinChatRoomRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.JoinChatRoomRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.chat_msgs_.MergeFrom(from._impl_.chat_msgs_);
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JoinChatRoomRes::CopyFrom(const JoinChatRoomRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.JoinChatRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinChatRoomRes::IsInitialized() const {
  return true;
}

void JoinChatRoomRes::InternalSwap(JoinChatRoomRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.chat_msgs_.InternalSwap(&other->_impl_.chat_msgs_);

  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinChatRoomRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[33]);
}
// ===================================================================

class SendMsg2ChatRoomReq::_Internal {
 public:
  static const ::prpc::ChatMessage& chat_msg(const SendMsg2ChatRoomReq* msg);
};

const ::prpc::ChatMessage&
SendMsg2ChatRoomReq::_Internal::chat_msg(const SendMsg2ChatRoomReq* msg) {
  return *msg->_impl_.chat_msg_;
}
SendMsg2ChatRoomReq::SendMsg2ChatRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.SendMsg2ChatRoomReq)
}
SendMsg2ChatRoomReq::SendMsg2ChatRoomReq(const SendMsg2ChatRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMsg2ChatRoomReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_msg_){nullptr}
    , decltype(_impl_.item_id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chat_msg()) {
    _this->_impl_.chat_msg_ = new ::prpc::ChatMessage(*from._impl_.chat_msg_);
  }
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:prpc.SendMsg2ChatRoomReq)
}

inline void SendMsg2ChatRoomReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_msg_){nullptr}
    , decltype(_impl_.item_id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendMsg2ChatRoomReq::~SendMsg2ChatRoomReq() {
  // @@protoc_insertion_point(destructor:prpc.SendMsg2ChatRoomReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMsg2ChatRoomReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.chat_msg_;
}

void SendMsg2ChatRoomReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMsg2ChatRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.SendMsg2ChatRoomReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.chat_msg_ != nullptr) {
    delete _impl_.chat_msg_;
  }
  _impl_.chat_msg_ = nullptr;
  _impl_.item_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMsg2ChatRoomReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .prpc.ChatMessage chat_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chat_msg(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* SendMsg2ChatRoomReq::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.SendMsg2ChatRoomReq)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_item_id(), target);
  }

  // .prpc.ChatMessage chat_msg = 2;
  if (this->_internal_has_chat_msg()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::chat_msg(this),
        _Internal::chat_msg(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.SendMsg2ChatRoomReq)
  return target;
}

::size_t SendMsg2ChatRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.SendMsg2ChatRoomReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.ChatMessage chat_msg = 2;
  if (this->_internal_has_chat_msg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.chat_msg_);
  }

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMsg2ChatRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMsg2ChatRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMsg2ChatRoomReq::GetClassData() const { return &_class_data_; }


void SendMsg2ChatRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMsg2ChatRoomReq*>(&to_msg);
  auto& from = static_cast<const SendMsg2ChatRoomReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.SendMsg2ChatRoomReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_chat_msg()) {
    _this->_internal_mutable_chat_msg()->::prpc::ChatMessage::MergeFrom(
        from._internal_chat_msg());
  }
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMsg2ChatRoomReq::CopyFrom(const SendMsg2ChatRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.SendMsg2ChatRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMsg2ChatRoomReq::IsInitialized() const {
  return true;
}

void SendMsg2ChatRoomReq::InternalSwap(SendMsg2ChatRoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMsg2ChatRoomReq, _impl_.item_id_)
      + sizeof(SendMsg2ChatRoomReq::_impl_.item_id_)
      - PROTOBUF_FIELD_OFFSET(SendMsg2ChatRoomReq, _impl_.chat_msg_)>(
          reinterpret_cast<char*>(&_impl_.chat_msg_),
          reinterpret_cast<char*>(&other->_impl_.chat_msg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMsg2ChatRoomReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[34]);
}
// ===================================================================

class SendMsg2ChatRoomRes::_Internal {
 public:
};

SendMsg2ChatRoomRes::SendMsg2ChatRoomRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.SendMsg2ChatRoomRes)
}
SendMsg2ChatRoomRes::SendMsg2ChatRoomRes(const SendMsg2ChatRoomRes& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SendMsg2ChatRoomRes* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.SendMsg2ChatRoomRes)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMsg2ChatRoomRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMsg2ChatRoomRes::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SendMsg2ChatRoomRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_2eproto_getter, &descriptor_table_user_2eproto_once,
      file_level_metadata_user_2eproto[35]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace prpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::prpc::UserInfo*
Arena::CreateMaybeMessage< ::prpc::UserInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::UserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::RegisterInfo*
Arena::CreateMaybeMessage< ::prpc::RegisterInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::RegisterInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::RegisterRet*
Arena::CreateMaybeMessage< ::prpc::RegisterRet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::RegisterRet >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::EmailInfo*
Arena::CreateMaybeMessage< ::prpc::EmailInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::EmailInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::IsUsedEmailRet*
Arena::CreateMaybeMessage< ::prpc::IsUsedEmailRet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::IsUsedEmailRet >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::LoginInfo*
Arena::CreateMaybeMessage< ::prpc::LoginInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::LoginInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::LoginRet*
Arena::CreateMaybeMessage< ::prpc::LoginRet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::LoginRet >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::NewCategoryItemReq*
Arena::CreateMaybeMessage< ::prpc::NewCategoryItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::NewCategoryItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::NewCategoryItemRes*
Arena::CreateMaybeMessage< ::prpc::NewCategoryItemRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::NewCategoryItemRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::DelCategoryItemReq*
Arena::CreateMaybeMessage< ::prpc::DelCategoryItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::DelCategoryItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::DelCategoryItemRes*
Arena::CreateMaybeMessage< ::prpc::DelCategoryItemRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::DelCategoryItemRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QuerySubItemsReq*
Arena::CreateMaybeMessage< ::prpc::QuerySubItemsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QuerySubItemsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QuerySubItemsRes*
Arena::CreateMaybeMessage< ::prpc::QuerySubItemsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QuerySubItemsRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QueryBtVideosReq*
Arena::CreateMaybeMessage< ::prpc::QueryBtVideosReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QueryBtVideosReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::BtFileMetadata*
Arena::CreateMaybeMessage< ::prpc::BtFileMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::BtFileMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QueryBtVideosRes*
Arena::CreateMaybeMessage< ::prpc::QueryBtVideosRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QueryBtVideosRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::AddBtVideosReq*
Arena::CreateMaybeMessage< ::prpc::AddBtVideosReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::AddBtVideosReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::AddBtVideosRes*
Arena::CreateMaybeMessage< ::prpc::AddBtVideosRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::AddBtVideosRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QueryItemInfoReq*
Arena::CreateMaybeMessage< ::prpc::QueryItemInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QueryItemInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QueryItemInfoRes*
Arena::CreateMaybeMessage< ::prpc::QueryItemInfoRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QueryItemInfoRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::ShareItemReq*
Arena::CreateMaybeMessage< ::prpc::ShareItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::ShareItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::ShareItemRes*
Arena::CreateMaybeMessage< ::prpc::ShareItemRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::ShareItemRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QuerySharedItemsReq*
Arena::CreateMaybeMessage< ::prpc::QuerySharedItemsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QuerySharedItemsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::QuerySharedItemsRes*
Arena::CreateMaybeMessage< ::prpc::QuerySharedItemsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::QuerySharedItemsRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::DelSharedItemReq*
Arena::CreateMaybeMessage< ::prpc::DelSharedItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::DelSharedItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::DelSharedItemRes*
Arena::CreateMaybeMessage< ::prpc::DelSharedItemRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::DelSharedItemRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::RefreshSubtitleReq*
Arena::CreateMaybeMessage< ::prpc::RefreshSubtitleReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::RefreshSubtitleReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::RefreshSubtitleRes*
Arena::CreateMaybeMessage< ::prpc::RefreshSubtitleRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::RefreshSubtitleRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::SubtitleFile*
Arena::CreateMaybeMessage< ::prpc::SubtitleFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::SubtitleFile >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::UploadSubtitleReq*
Arena::CreateMaybeMessage< ::prpc::UploadSubtitleReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::UploadSubtitleReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::UploadSubtitleRes*
Arena::CreateMaybeMessage< ::prpc::UploadSubtitleRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::UploadSubtitleRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::JoinChatRoomReq*
Arena::CreateMaybeMessage< ::prpc::JoinChatRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::JoinChatRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::ChatMessage*
Arena::CreateMaybeMessage< ::prpc::ChatMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::ChatMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::JoinChatRoomRes*
Arena::CreateMaybeMessage< ::prpc::JoinChatRoomRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::JoinChatRoomRes >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::SendMsg2ChatRoomReq*
Arena::CreateMaybeMessage< ::prpc::SendMsg2ChatRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::SendMsg2ChatRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::prpc::SendMsg2ChatRoomRes*
Arena::CreateMaybeMessage< ::prpc::SendMsg2ChatRoomRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::prpc::SendMsg2ChatRoomRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

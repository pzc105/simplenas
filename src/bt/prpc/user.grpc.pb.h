// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: user.proto
#ifndef GRPC_user_2eproto__INCLUDED
#define GRPC_user_2eproto__INCLUDED

#include "user.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace prpc {

class UserService final {
 public:
  static constexpr char const* service_full_name() {
    return "prpc.UserService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Register(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::prpc::RegisterRet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RegisterRet>> AsyncRegister(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RegisterRet>>(AsyncRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RegisterRet>> PrepareAsyncRegister(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RegisterRet>>(PrepareAsyncRegisterRaw(context, request, cq));
    }
    virtual ::grpc::Status IsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::prpc::IsUsedEmailRet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::IsUsedEmailRet>> AsyncIsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::IsUsedEmailRet>>(AsyncIsUsedEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::IsUsedEmailRet>> PrepareAsyncIsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::IsUsedEmailRet>>(PrepareAsyncIsUsedEmailRaw(context, request, cq));
    }
    virtual ::grpc::Status Login(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::prpc::LoginRet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>> AsyncLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status FastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::prpc::LoginRet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>> AsyncFastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>>(AsyncFastLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>> PrepareAsyncFastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>>(PrepareAsyncFastLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status IsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::prpc::LoginRet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>> AsyncIsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>>(AsyncIsLoginedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>> PrepareAsyncIsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>>(PrepareAsyncIsLoginedRaw(context, request, cq));
    }
    virtual ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::prpc::ChangePasswordRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ChangePasswordRsp>> AsyncChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ChangePasswordRsp>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ChangePasswordRsp>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ChangePasswordRsp>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status Download(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::prpc::DownloadRespone* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DownloadRespone>> AsyncDownload(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DownloadRespone>>(AsyncDownloadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DownloadRespone>> PrepareAsyncDownload(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DownloadRespone>>(PrepareAsyncDownloadRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::prpc::RemoveTorrentRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RemoveTorrentRes>> AsyncRemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RemoveTorrentRes>>(AsyncRemoveTorrentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RemoveTorrentRes>> PrepareAsyncRemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RemoveTorrentRes>>(PrepareAsyncRemoveTorrentRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::prpc::GetMagnetUriRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::GetMagnetUriRsp>> AsyncGetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::GetMagnetUriRsp>>(AsyncGetMagnetUriRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::GetMagnetUriRsp>> PrepareAsyncGetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::GetMagnetUriRsp>>(PrepareAsyncGetMagnetUriRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::prpc::StatusRespone>> OnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::prpc::StatusRespone>>(OnStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::StatusRespone>> AsyncOnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::StatusRespone>>(AsyncOnStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::StatusRespone>> PrepareAsyncOnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::StatusRespone>>(PrepareAsyncOnStatusRaw(context, request, cq));
    }
    virtual ::grpc::Status QueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::prpc::QueryBtVideosRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryBtVideosRes>> AsyncQueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryBtVideosRes>>(AsyncQueryBtVideosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryBtVideosRes>> PrepareAsyncQueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryBtVideosRes>>(PrepareAsyncQueryBtVideosRaw(context, request, cq));
    }
    virtual ::grpc::Status NewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::prpc::NewCategoryItemRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::NewCategoryItemRes>> AsyncNewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::NewCategoryItemRes>>(AsyncNewCategoryItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::NewCategoryItemRes>> PrepareAsyncNewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::NewCategoryItemRes>>(PrepareAsyncNewCategoryItemRaw(context, request, cq));
    }
    virtual ::grpc::Status DelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::prpc::DelCategoryItemRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelCategoryItemRes>> AsyncDelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelCategoryItemRes>>(AsyncDelCategoryItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelCategoryItemRes>> PrepareAsyncDelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelCategoryItemRes>>(PrepareAsyncDelCategoryItemRaw(context, request, cq));
    }
    virtual ::grpc::Status AddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::prpc::AddBtVideosRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddBtVideosRes>> AsyncAddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddBtVideosRes>>(AsyncAddBtVideosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddBtVideosRes>> PrepareAsyncAddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddBtVideosRes>>(PrepareAsyncAddBtVideosRaw(context, request, cq));
    }
    virtual ::grpc::Status ShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::prpc::ShareItemRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ShareItemRes>> AsyncShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ShareItemRes>>(AsyncShareItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ShareItemRes>> PrepareAsyncShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ShareItemRes>>(PrepareAsyncShareItemRaw(context, request, cq));
    }
    virtual ::grpc::Status QuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::prpc::QuerySharedItemsRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySharedItemsRes>> AsyncQuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySharedItemsRes>>(AsyncQuerySharedItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySharedItemsRes>> PrepareAsyncQuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySharedItemsRes>>(PrepareAsyncQuerySharedItemsRaw(context, request, cq));
    }
    virtual ::grpc::Status DelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::prpc::DelSharedItemRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelSharedItemRes>> AsyncDelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelSharedItemRes>>(AsyncDelSharedItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelSharedItemRes>> PrepareAsyncDelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelSharedItemRes>>(PrepareAsyncDelSharedItemRaw(context, request, cq));
    }
    virtual ::grpc::Status QuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::prpc::QuerySubItemsRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySubItemsRes>> AsyncQuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySubItemsRes>>(AsyncQuerySubItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySubItemsRes>> PrepareAsyncQuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySubItemsRes>>(PrepareAsyncQuerySubItemsRaw(context, request, cq));
    }
    virtual ::grpc::Status QueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::prpc::QueryItemInfoRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryItemInfoRes>> AsyncQueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryItemInfoRes>>(AsyncQueryItemInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryItemInfoRes>> PrepareAsyncQueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryItemInfoRes>>(PrepareAsyncQueryItemInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status UploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::prpc::UploadSubtitleRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::UploadSubtitleRes>> AsyncUploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::UploadSubtitleRes>>(AsyncUploadSubtitleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::UploadSubtitleRes>> PrepareAsyncUploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::UploadSubtitleRes>>(PrepareAsyncUploadSubtitleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::prpc::JoinChatRoomRes>> JoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::prpc::JoinChatRoomRes>>(JoinChatRoomRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::JoinChatRoomRes>> AsyncJoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::JoinChatRoomRes>>(AsyncJoinChatRoomRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::JoinChatRoomRes>> PrepareAsyncJoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::prpc::JoinChatRoomRes>>(PrepareAsyncJoinChatRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status SendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::prpc::SendMsg2ChatRoomRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::SendMsg2ChatRoomRes>> AsyncSendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::SendMsg2ChatRoomRes>>(AsyncSendMsg2ChatRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::SendMsg2ChatRoomRes>> PrepareAsyncSendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::SendMsg2ChatRoomRes>>(PrepareAsyncSendMsg2ChatRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status AddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::prpc::AddMagnetCategoryRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetCategoryRsp>> AsyncAddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetCategoryRsp>>(AsyncAddMagnetCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetCategoryRsp>> PrepareAsyncAddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetCategoryRsp>>(PrepareAsyncAddMagnetCategoryRaw(context, request, cq));
    }
    virtual ::grpc::Status AddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::prpc::AddMagnetUriRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetUriRsp>> AsyncAddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetUriRsp>>(AsyncAddMagnetUriRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetUriRsp>> PrepareAsyncAddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetUriRsp>>(PrepareAsyncAddMagnetUriRaw(context, request, cq));
    }
    virtual ::grpc::Status QueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::prpc::QueryMagnetRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryMagnetRsp>> AsyncQueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryMagnetRsp>>(AsyncQueryMagnetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryMagnetRsp>> PrepareAsyncQueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryMagnetRsp>>(PrepareAsyncQueryMagnetRaw(context, request, cq));
    }
    virtual ::grpc::Status DelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::prpc::DelMagnetCategoryRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelMagnetCategoryRsp>> AsyncDelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelMagnetCategoryRsp>>(AsyncDelMagnetCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelMagnetCategoryRsp>> PrepareAsyncDelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelMagnetCategoryRsp>>(PrepareAsyncDelMagnetCategoryRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Register(::grpc::ClientContext* context, const ::prpc::RegisterInfo* request, ::prpc::RegisterRet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Register(::grpc::ClientContext* context, const ::prpc::RegisterInfo* request, ::prpc::RegisterRet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo* request, ::prpc::IsUsedEmailRet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo* request, ::prpc::IsUsedEmailRet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq* request, ::prpc::ChangePasswordRsp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq* request, ::prpc::ChangePasswordRsp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Download(::grpc::ClientContext* context, const ::prpc::DownloadRequest* request, ::prpc::DownloadRespone* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Download(::grpc::ClientContext* context, const ::prpc::DownloadRequest* request, ::prpc::DownloadRespone* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq* request, ::prpc::RemoveTorrentRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq* request, ::prpc::RemoveTorrentRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq* request, ::prpc::GetMagnetUriRsp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq* request, ::prpc::GetMagnetUriRsp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void OnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest* request, ::grpc::ClientReadReactor< ::prpc::StatusRespone>* reactor) = 0;
      virtual void QueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq* request, ::prpc::QueryBtVideosRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq* request, ::prpc::QueryBtVideosRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void NewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq* request, ::prpc::NewCategoryItemRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void NewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq* request, ::prpc::NewCategoryItemRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq* request, ::prpc::DelCategoryItemRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq* request, ::prpc::DelCategoryItemRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq* request, ::prpc::AddBtVideosRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq* request, ::prpc::AddBtVideosRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq* request, ::prpc::ShareItemRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq* request, ::prpc::ShareItemRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void QuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq* request, ::prpc::QuerySharedItemsRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq* request, ::prpc::QuerySharedItemsRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq* request, ::prpc::DelSharedItemRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq* request, ::prpc::DelSharedItemRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void QuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq* request, ::prpc::QuerySubItemsRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq* request, ::prpc::QuerySubItemsRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void QueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq* request, ::prpc::QueryItemInfoRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq* request, ::prpc::QueryItemInfoRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq* request, ::prpc::UploadSubtitleRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq* request, ::prpc::UploadSubtitleRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void JoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq* request, ::grpc::ClientReadReactor< ::prpc::JoinChatRoomRes>* reactor) = 0;
      virtual void SendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq* request, ::prpc::SendMsg2ChatRoomRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq* request, ::prpc::SendMsg2ChatRoomRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq* request, ::prpc::AddMagnetCategoryRsp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq* request, ::prpc::AddMagnetCategoryRsp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq* request, ::prpc::AddMagnetUriRsp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq* request, ::prpc::AddMagnetUriRsp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void QueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq* request, ::prpc::QueryMagnetRsp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq* request, ::prpc::QueryMagnetRsp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq* request, ::prpc::DelMagnetCategoryRsp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq* request, ::prpc::DelMagnetCategoryRsp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RegisterRet>* AsyncRegisterRaw(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RegisterRet>* PrepareAsyncRegisterRaw(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::IsUsedEmailRet>* AsyncIsUsedEmailRaw(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::IsUsedEmailRet>* PrepareAsyncIsUsedEmailRaw(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>* AsyncLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>* AsyncFastLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>* PrepareAsyncFastLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>* AsyncIsLoginedRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LoginRet>* PrepareAsyncIsLoginedRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ChangePasswordRsp>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ChangePasswordRsp>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DownloadRespone>* AsyncDownloadRaw(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DownloadRespone>* PrepareAsyncDownloadRaw(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RemoveTorrentRes>* AsyncRemoveTorrentRaw(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::RemoveTorrentRes>* PrepareAsyncRemoveTorrentRaw(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::GetMagnetUriRsp>* AsyncGetMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::GetMagnetUriRsp>* PrepareAsyncGetMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::prpc::StatusRespone>* OnStatusRaw(::grpc::ClientContext* context, const ::prpc::StatusRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::prpc::StatusRespone>* AsyncOnStatusRaw(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::prpc::StatusRespone>* PrepareAsyncOnStatusRaw(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryBtVideosRes>* AsyncQueryBtVideosRaw(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryBtVideosRes>* PrepareAsyncQueryBtVideosRaw(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::NewCategoryItemRes>* AsyncNewCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::NewCategoryItemRes>* PrepareAsyncNewCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelCategoryItemRes>* AsyncDelCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelCategoryItemRes>* PrepareAsyncDelCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddBtVideosRes>* AsyncAddBtVideosRaw(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddBtVideosRes>* PrepareAsyncAddBtVideosRaw(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ShareItemRes>* AsyncShareItemRaw(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::ShareItemRes>* PrepareAsyncShareItemRaw(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySharedItemsRes>* AsyncQuerySharedItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySharedItemsRes>* PrepareAsyncQuerySharedItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelSharedItemRes>* AsyncDelSharedItemRaw(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelSharedItemRes>* PrepareAsyncDelSharedItemRaw(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySubItemsRes>* AsyncQuerySubItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QuerySubItemsRes>* PrepareAsyncQuerySubItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryItemInfoRes>* AsyncQueryItemInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryItemInfoRes>* PrepareAsyncQueryItemInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::UploadSubtitleRes>* AsyncUploadSubtitleRaw(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::UploadSubtitleRes>* PrepareAsyncUploadSubtitleRaw(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::prpc::JoinChatRoomRes>* JoinChatRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::prpc::JoinChatRoomRes>* AsyncJoinChatRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::prpc::JoinChatRoomRes>* PrepareAsyncJoinChatRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::SendMsg2ChatRoomRes>* AsyncSendMsg2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::SendMsg2ChatRoomRes>* PrepareAsyncSendMsg2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetCategoryRsp>* AsyncAddMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetCategoryRsp>* PrepareAsyncAddMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetUriRsp>* AsyncAddMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::AddMagnetUriRsp>* PrepareAsyncAddMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryMagnetRsp>* AsyncQueryMagnetRaw(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryMagnetRsp>* PrepareAsyncQueryMagnetRaw(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelMagnetCategoryRsp>* AsyncDelMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::DelMagnetCategoryRsp>* PrepareAsyncDelMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Register(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::prpc::RegisterRet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RegisterRet>> AsyncRegister(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RegisterRet>>(AsyncRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RegisterRet>> PrepareAsyncRegister(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RegisterRet>>(PrepareAsyncRegisterRaw(context, request, cq));
    }
    ::grpc::Status IsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::prpc::IsUsedEmailRet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::IsUsedEmailRet>> AsyncIsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::IsUsedEmailRet>>(AsyncIsUsedEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::IsUsedEmailRet>> PrepareAsyncIsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::IsUsedEmailRet>>(PrepareAsyncIsUsedEmailRaw(context, request, cq));
    }
    ::grpc::Status Login(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::prpc::LoginRet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>> AsyncLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    ::grpc::Status FastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::prpc::LoginRet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>> AsyncFastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>>(AsyncFastLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>> PrepareAsyncFastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>>(PrepareAsyncFastLoginRaw(context, request, cq));
    }
    ::grpc::Status IsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::prpc::LoginRet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>> AsyncIsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>>(AsyncIsLoginedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>> PrepareAsyncIsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>>(PrepareAsyncIsLoginedRaw(context, request, cq));
    }
    ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::prpc::ChangePasswordRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ChangePasswordRsp>> AsyncChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ChangePasswordRsp>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ChangePasswordRsp>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ChangePasswordRsp>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    ::grpc::Status Download(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::prpc::DownloadRespone* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DownloadRespone>> AsyncDownload(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DownloadRespone>>(AsyncDownloadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DownloadRespone>> PrepareAsyncDownload(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DownloadRespone>>(PrepareAsyncDownloadRaw(context, request, cq));
    }
    ::grpc::Status RemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::prpc::RemoveTorrentRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RemoveTorrentRes>> AsyncRemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RemoveTorrentRes>>(AsyncRemoveTorrentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RemoveTorrentRes>> PrepareAsyncRemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::RemoveTorrentRes>>(PrepareAsyncRemoveTorrentRaw(context, request, cq));
    }
    ::grpc::Status GetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::prpc::GetMagnetUriRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::GetMagnetUriRsp>> AsyncGetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::GetMagnetUriRsp>>(AsyncGetMagnetUriRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::GetMagnetUriRsp>> PrepareAsyncGetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::GetMagnetUriRsp>>(PrepareAsyncGetMagnetUriRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::prpc::StatusRespone>> OnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::prpc::StatusRespone>>(OnStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::StatusRespone>> AsyncOnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::StatusRespone>>(AsyncOnStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::StatusRespone>> PrepareAsyncOnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::StatusRespone>>(PrepareAsyncOnStatusRaw(context, request, cq));
    }
    ::grpc::Status QueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::prpc::QueryBtVideosRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryBtVideosRes>> AsyncQueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryBtVideosRes>>(AsyncQueryBtVideosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryBtVideosRes>> PrepareAsyncQueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryBtVideosRes>>(PrepareAsyncQueryBtVideosRaw(context, request, cq));
    }
    ::grpc::Status NewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::prpc::NewCategoryItemRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::NewCategoryItemRes>> AsyncNewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::NewCategoryItemRes>>(AsyncNewCategoryItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::NewCategoryItemRes>> PrepareAsyncNewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::NewCategoryItemRes>>(PrepareAsyncNewCategoryItemRaw(context, request, cq));
    }
    ::grpc::Status DelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::prpc::DelCategoryItemRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelCategoryItemRes>> AsyncDelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelCategoryItemRes>>(AsyncDelCategoryItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelCategoryItemRes>> PrepareAsyncDelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelCategoryItemRes>>(PrepareAsyncDelCategoryItemRaw(context, request, cq));
    }
    ::grpc::Status AddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::prpc::AddBtVideosRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddBtVideosRes>> AsyncAddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddBtVideosRes>>(AsyncAddBtVideosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddBtVideosRes>> PrepareAsyncAddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddBtVideosRes>>(PrepareAsyncAddBtVideosRaw(context, request, cq));
    }
    ::grpc::Status ShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::prpc::ShareItemRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ShareItemRes>> AsyncShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ShareItemRes>>(AsyncShareItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ShareItemRes>> PrepareAsyncShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::ShareItemRes>>(PrepareAsyncShareItemRaw(context, request, cq));
    }
    ::grpc::Status QuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::prpc::QuerySharedItemsRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySharedItemsRes>> AsyncQuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySharedItemsRes>>(AsyncQuerySharedItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySharedItemsRes>> PrepareAsyncQuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySharedItemsRes>>(PrepareAsyncQuerySharedItemsRaw(context, request, cq));
    }
    ::grpc::Status DelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::prpc::DelSharedItemRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelSharedItemRes>> AsyncDelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelSharedItemRes>>(AsyncDelSharedItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelSharedItemRes>> PrepareAsyncDelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelSharedItemRes>>(PrepareAsyncDelSharedItemRaw(context, request, cq));
    }
    ::grpc::Status QuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::prpc::QuerySubItemsRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySubItemsRes>> AsyncQuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySubItemsRes>>(AsyncQuerySubItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySubItemsRes>> PrepareAsyncQuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QuerySubItemsRes>>(PrepareAsyncQuerySubItemsRaw(context, request, cq));
    }
    ::grpc::Status QueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::prpc::QueryItemInfoRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryItemInfoRes>> AsyncQueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryItemInfoRes>>(AsyncQueryItemInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryItemInfoRes>> PrepareAsyncQueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryItemInfoRes>>(PrepareAsyncQueryItemInfoRaw(context, request, cq));
    }
    ::grpc::Status UploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::prpc::UploadSubtitleRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::UploadSubtitleRes>> AsyncUploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::UploadSubtitleRes>>(AsyncUploadSubtitleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::UploadSubtitleRes>> PrepareAsyncUploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::UploadSubtitleRes>>(PrepareAsyncUploadSubtitleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::prpc::JoinChatRoomRes>> JoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::prpc::JoinChatRoomRes>>(JoinChatRoomRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::JoinChatRoomRes>> AsyncJoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::JoinChatRoomRes>>(AsyncJoinChatRoomRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::JoinChatRoomRes>> PrepareAsyncJoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::prpc::JoinChatRoomRes>>(PrepareAsyncJoinChatRoomRaw(context, request, cq));
    }
    ::grpc::Status SendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::prpc::SendMsg2ChatRoomRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::SendMsg2ChatRoomRes>> AsyncSendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::SendMsg2ChatRoomRes>>(AsyncSendMsg2ChatRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::SendMsg2ChatRoomRes>> PrepareAsyncSendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::SendMsg2ChatRoomRes>>(PrepareAsyncSendMsg2ChatRoomRaw(context, request, cq));
    }
    ::grpc::Status AddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::prpc::AddMagnetCategoryRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetCategoryRsp>> AsyncAddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetCategoryRsp>>(AsyncAddMagnetCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetCategoryRsp>> PrepareAsyncAddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetCategoryRsp>>(PrepareAsyncAddMagnetCategoryRaw(context, request, cq));
    }
    ::grpc::Status AddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::prpc::AddMagnetUriRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetUriRsp>> AsyncAddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetUriRsp>>(AsyncAddMagnetUriRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetUriRsp>> PrepareAsyncAddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetUriRsp>>(PrepareAsyncAddMagnetUriRaw(context, request, cq));
    }
    ::grpc::Status QueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::prpc::QueryMagnetRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryMagnetRsp>> AsyncQueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryMagnetRsp>>(AsyncQueryMagnetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryMagnetRsp>> PrepareAsyncQueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryMagnetRsp>>(PrepareAsyncQueryMagnetRaw(context, request, cq));
    }
    ::grpc::Status DelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::prpc::DelMagnetCategoryRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelMagnetCategoryRsp>> AsyncDelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelMagnetCategoryRsp>>(AsyncDelMagnetCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelMagnetCategoryRsp>> PrepareAsyncDelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::DelMagnetCategoryRsp>>(PrepareAsyncDelMagnetCategoryRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Register(::grpc::ClientContext* context, const ::prpc::RegisterInfo* request, ::prpc::RegisterRet* response, std::function<void(::grpc::Status)>) override;
      void Register(::grpc::ClientContext* context, const ::prpc::RegisterInfo* request, ::prpc::RegisterRet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo* request, ::prpc::IsUsedEmailRet* response, std::function<void(::grpc::Status)>) override;
      void IsUsedEmail(::grpc::ClientContext* context, const ::prpc::EmailInfo* request, ::prpc::IsUsedEmailRet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Login(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, std::function<void(::grpc::Status)>) override;
      void Login(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, std::function<void(::grpc::Status)>) override;
      void FastLogin(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, std::function<void(::grpc::Status)>) override;
      void IsLogined(::grpc::ClientContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq* request, ::prpc::ChangePasswordRsp* response, std::function<void(::grpc::Status)>) override;
      void ChangePassword(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq* request, ::prpc::ChangePasswordRsp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Download(::grpc::ClientContext* context, const ::prpc::DownloadRequest* request, ::prpc::DownloadRespone* response, std::function<void(::grpc::Status)>) override;
      void Download(::grpc::ClientContext* context, const ::prpc::DownloadRequest* request, ::prpc::DownloadRespone* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq* request, ::prpc::RemoveTorrentRes* response, std::function<void(::grpc::Status)>) override;
      void RemoveTorrent(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq* request, ::prpc::RemoveTorrentRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq* request, ::prpc::GetMagnetUriRsp* response, std::function<void(::grpc::Status)>) override;
      void GetMagnetUri(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq* request, ::prpc::GetMagnetUriRsp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void OnStatus(::grpc::ClientContext* context, const ::prpc::StatusRequest* request, ::grpc::ClientReadReactor< ::prpc::StatusRespone>* reactor) override;
      void QueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq* request, ::prpc::QueryBtVideosRes* response, std::function<void(::grpc::Status)>) override;
      void QueryBtVideos(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq* request, ::prpc::QueryBtVideosRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void NewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq* request, ::prpc::NewCategoryItemRes* response, std::function<void(::grpc::Status)>) override;
      void NewCategoryItem(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq* request, ::prpc::NewCategoryItemRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq* request, ::prpc::DelCategoryItemRes* response, std::function<void(::grpc::Status)>) override;
      void DelCategoryItem(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq* request, ::prpc::DelCategoryItemRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq* request, ::prpc::AddBtVideosRes* response, std::function<void(::grpc::Status)>) override;
      void AddBtVideos(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq* request, ::prpc::AddBtVideosRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq* request, ::prpc::ShareItemRes* response, std::function<void(::grpc::Status)>) override;
      void ShareItem(::grpc::ClientContext* context, const ::prpc::ShareItemReq* request, ::prpc::ShareItemRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void QuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq* request, ::prpc::QuerySharedItemsRes* response, std::function<void(::grpc::Status)>) override;
      void QuerySharedItems(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq* request, ::prpc::QuerySharedItemsRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq* request, ::prpc::DelSharedItemRes* response, std::function<void(::grpc::Status)>) override;
      void DelSharedItem(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq* request, ::prpc::DelSharedItemRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void QuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq* request, ::prpc::QuerySubItemsRes* response, std::function<void(::grpc::Status)>) override;
      void QuerySubItems(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq* request, ::prpc::QuerySubItemsRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void QueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq* request, ::prpc::QueryItemInfoRes* response, std::function<void(::grpc::Status)>) override;
      void QueryItemInfo(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq* request, ::prpc::QueryItemInfoRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq* request, ::prpc::UploadSubtitleRes* response, std::function<void(::grpc::Status)>) override;
      void UploadSubtitle(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq* request, ::prpc::UploadSubtitleRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void JoinChatRoom(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq* request, ::grpc::ClientReadReactor< ::prpc::JoinChatRoomRes>* reactor) override;
      void SendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq* request, ::prpc::SendMsg2ChatRoomRes* response, std::function<void(::grpc::Status)>) override;
      void SendMsg2ChatRoom(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq* request, ::prpc::SendMsg2ChatRoomRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq* request, ::prpc::AddMagnetCategoryRsp* response, std::function<void(::grpc::Status)>) override;
      void AddMagnetCategory(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq* request, ::prpc::AddMagnetCategoryRsp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq* request, ::prpc::AddMagnetUriRsp* response, std::function<void(::grpc::Status)>) override;
      void AddMagnetUri(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq* request, ::prpc::AddMagnetUriRsp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void QueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq* request, ::prpc::QueryMagnetRsp* response, std::function<void(::grpc::Status)>) override;
      void QueryMagnet(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq* request, ::prpc::QueryMagnetRsp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq* request, ::prpc::DelMagnetCategoryRsp* response, std::function<void(::grpc::Status)>) override;
      void DelMagnetCategory(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq* request, ::prpc::DelMagnetCategoryRsp* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::prpc::RegisterRet>* AsyncRegisterRaw(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::RegisterRet>* PrepareAsyncRegisterRaw(::grpc::ClientContext* context, const ::prpc::RegisterInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::IsUsedEmailRet>* AsyncIsUsedEmailRaw(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::IsUsedEmailRet>* PrepareAsyncIsUsedEmailRaw(::grpc::ClientContext* context, const ::prpc::EmailInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>* AsyncLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>* AsyncFastLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>* PrepareAsyncFastLoginRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>* AsyncIsLoginedRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LoginRet>* PrepareAsyncIsLoginedRaw(::grpc::ClientContext* context, const ::prpc::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::ChangePasswordRsp>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::ChangePasswordRsp>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::prpc::ChangePasswordReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DownloadRespone>* AsyncDownloadRaw(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DownloadRespone>* PrepareAsyncDownloadRaw(::grpc::ClientContext* context, const ::prpc::DownloadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::RemoveTorrentRes>* AsyncRemoveTorrentRaw(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::RemoveTorrentRes>* PrepareAsyncRemoveTorrentRaw(::grpc::ClientContext* context, const ::prpc::RemoveTorrentReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::GetMagnetUriRsp>* AsyncGetMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::GetMagnetUriRsp>* PrepareAsyncGetMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::GetMagnetUriReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::prpc::StatusRespone>* OnStatusRaw(::grpc::ClientContext* context, const ::prpc::StatusRequest& request) override;
    ::grpc::ClientAsyncReader< ::prpc::StatusRespone>* AsyncOnStatusRaw(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::prpc::StatusRespone>* PrepareAsyncOnStatusRaw(::grpc::ClientContext* context, const ::prpc::StatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryBtVideosRes>* AsyncQueryBtVideosRaw(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryBtVideosRes>* PrepareAsyncQueryBtVideosRaw(::grpc::ClientContext* context, const ::prpc::QueryBtVideosReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::NewCategoryItemRes>* AsyncNewCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::NewCategoryItemRes>* PrepareAsyncNewCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::NewCategoryItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DelCategoryItemRes>* AsyncDelCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DelCategoryItemRes>* PrepareAsyncDelCategoryItemRaw(::grpc::ClientContext* context, const ::prpc::DelCategoryItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::AddBtVideosRes>* AsyncAddBtVideosRaw(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::AddBtVideosRes>* PrepareAsyncAddBtVideosRaw(::grpc::ClientContext* context, const ::prpc::AddBtVideosReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::ShareItemRes>* AsyncShareItemRaw(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::ShareItemRes>* PrepareAsyncShareItemRaw(::grpc::ClientContext* context, const ::prpc::ShareItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QuerySharedItemsRes>* AsyncQuerySharedItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QuerySharedItemsRes>* PrepareAsyncQuerySharedItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySharedItemsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DelSharedItemRes>* AsyncDelSharedItemRaw(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DelSharedItemRes>* PrepareAsyncDelSharedItemRaw(::grpc::ClientContext* context, const ::prpc::DelSharedItemReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QuerySubItemsRes>* AsyncQuerySubItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QuerySubItemsRes>* PrepareAsyncQuerySubItemsRaw(::grpc::ClientContext* context, const ::prpc::QuerySubItemsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryItemInfoRes>* AsyncQueryItemInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryItemInfoRes>* PrepareAsyncQueryItemInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryItemInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::UploadSubtitleRes>* AsyncUploadSubtitleRaw(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::UploadSubtitleRes>* PrepareAsyncUploadSubtitleRaw(::grpc::ClientContext* context, const ::prpc::UploadSubtitleReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::prpc::JoinChatRoomRes>* JoinChatRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request) override;
    ::grpc::ClientAsyncReader< ::prpc::JoinChatRoomRes>* AsyncJoinChatRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::prpc::JoinChatRoomRes>* PrepareAsyncJoinChatRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinChatRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::SendMsg2ChatRoomRes>* AsyncSendMsg2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::SendMsg2ChatRoomRes>* PrepareAsyncSendMsg2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::SendMsg2ChatRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetCategoryRsp>* AsyncAddMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetCategoryRsp>* PrepareAsyncAddMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetUriRsp>* AsyncAddMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::AddMagnetUriRsp>* PrepareAsyncAddMagnetUriRaw(::grpc::ClientContext* context, const ::prpc::AddMagnetUriReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryMagnetRsp>* AsyncQueryMagnetRaw(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryMagnetRsp>* PrepareAsyncQueryMagnetRaw(::grpc::ClientContext* context, const ::prpc::QueryMagnetReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DelMagnetCategoryRsp>* AsyncDelMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::DelMagnetCategoryRsp>* PrepareAsyncDelMagnetCategoryRaw(::grpc::ClientContext* context, const ::prpc::DelMagnetCategoryReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Register_;
    const ::grpc::internal::RpcMethod rpcmethod_IsUsedEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_Login_;
    const ::grpc::internal::RpcMethod rpcmethod_FastLogin_;
    const ::grpc::internal::RpcMethod rpcmethod_IsLogined_;
    const ::grpc::internal::RpcMethod rpcmethod_ChangePassword_;
    const ::grpc::internal::RpcMethod rpcmethod_Download_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveTorrent_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMagnetUri_;
    const ::grpc::internal::RpcMethod rpcmethod_OnStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryBtVideos_;
    const ::grpc::internal::RpcMethod rpcmethod_NewCategoryItem_;
    const ::grpc::internal::RpcMethod rpcmethod_DelCategoryItem_;
    const ::grpc::internal::RpcMethod rpcmethod_AddBtVideos_;
    const ::grpc::internal::RpcMethod rpcmethod_ShareItem_;
    const ::grpc::internal::RpcMethod rpcmethod_QuerySharedItems_;
    const ::grpc::internal::RpcMethod rpcmethod_DelSharedItem_;
    const ::grpc::internal::RpcMethod rpcmethod_QuerySubItems_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryItemInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_UploadSubtitle_;
    const ::grpc::internal::RpcMethod rpcmethod_JoinChatRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_SendMsg2ChatRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_AddMagnetCategory_;
    const ::grpc::internal::RpcMethod rpcmethod_AddMagnetUri_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryMagnet_;
    const ::grpc::internal::RpcMethod rpcmethod_DelMagnetCategory_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Register(::grpc::ServerContext* context, const ::prpc::RegisterInfo* request, ::prpc::RegisterRet* response);
    virtual ::grpc::Status IsUsedEmail(::grpc::ServerContext* context, const ::prpc::EmailInfo* request, ::prpc::IsUsedEmailRet* response);
    virtual ::grpc::Status Login(::grpc::ServerContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response);
    virtual ::grpc::Status FastLogin(::grpc::ServerContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response);
    virtual ::grpc::Status IsLogined(::grpc::ServerContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response);
    virtual ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::prpc::ChangePasswordReq* request, ::prpc::ChangePasswordRsp* response);
    virtual ::grpc::Status Download(::grpc::ServerContext* context, const ::prpc::DownloadRequest* request, ::prpc::DownloadRespone* response);
    virtual ::grpc::Status RemoveTorrent(::grpc::ServerContext* context, const ::prpc::RemoveTorrentReq* request, ::prpc::RemoveTorrentRes* response);
    virtual ::grpc::Status GetMagnetUri(::grpc::ServerContext* context, const ::prpc::GetMagnetUriReq* request, ::prpc::GetMagnetUriRsp* response);
    virtual ::grpc::Status OnStatus(::grpc::ServerContext* context, const ::prpc::StatusRequest* request, ::grpc::ServerWriter< ::prpc::StatusRespone>* writer);
    virtual ::grpc::Status QueryBtVideos(::grpc::ServerContext* context, const ::prpc::QueryBtVideosReq* request, ::prpc::QueryBtVideosRes* response);
    virtual ::grpc::Status NewCategoryItem(::grpc::ServerContext* context, const ::prpc::NewCategoryItemReq* request, ::prpc::NewCategoryItemRes* response);
    virtual ::grpc::Status DelCategoryItem(::grpc::ServerContext* context, const ::prpc::DelCategoryItemReq* request, ::prpc::DelCategoryItemRes* response);
    virtual ::grpc::Status AddBtVideos(::grpc::ServerContext* context, const ::prpc::AddBtVideosReq* request, ::prpc::AddBtVideosRes* response);
    virtual ::grpc::Status ShareItem(::grpc::ServerContext* context, const ::prpc::ShareItemReq* request, ::prpc::ShareItemRes* response);
    virtual ::grpc::Status QuerySharedItems(::grpc::ServerContext* context, const ::prpc::QuerySharedItemsReq* request, ::prpc::QuerySharedItemsRes* response);
    virtual ::grpc::Status DelSharedItem(::grpc::ServerContext* context, const ::prpc::DelSharedItemReq* request, ::prpc::DelSharedItemRes* response);
    virtual ::grpc::Status QuerySubItems(::grpc::ServerContext* context, const ::prpc::QuerySubItemsReq* request, ::prpc::QuerySubItemsRes* response);
    virtual ::grpc::Status QueryItemInfo(::grpc::ServerContext* context, const ::prpc::QueryItemInfoReq* request, ::prpc::QueryItemInfoRes* response);
    virtual ::grpc::Status UploadSubtitle(::grpc::ServerContext* context, const ::prpc::UploadSubtitleReq* request, ::prpc::UploadSubtitleRes* response);
    virtual ::grpc::Status JoinChatRoom(::grpc::ServerContext* context, const ::prpc::JoinChatRoomReq* request, ::grpc::ServerWriter< ::prpc::JoinChatRoomRes>* writer);
    virtual ::grpc::Status SendMsg2ChatRoom(::grpc::ServerContext* context, const ::prpc::SendMsg2ChatRoomReq* request, ::prpc::SendMsg2ChatRoomRes* response);
    virtual ::grpc::Status AddMagnetCategory(::grpc::ServerContext* context, const ::prpc::AddMagnetCategoryReq* request, ::prpc::AddMagnetCategoryRsp* response);
    virtual ::grpc::Status AddMagnetUri(::grpc::ServerContext* context, const ::prpc::AddMagnetUriReq* request, ::prpc::AddMagnetUriRsp* response);
    virtual ::grpc::Status QueryMagnet(::grpc::ServerContext* context, const ::prpc::QueryMagnetReq* request, ::prpc::QueryMagnetRsp* response);
    virtual ::grpc::Status DelMagnetCategory(::grpc::ServerContext* context, const ::prpc::DelMagnetCategoryReq* request, ::prpc::DelMagnetCategoryRsp* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Register() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::prpc::RegisterInfo* /*request*/, ::prpc::RegisterRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegister(::grpc::ServerContext* context, ::prpc::RegisterInfo* request, ::grpc::ServerAsyncResponseWriter< ::prpc::RegisterRet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IsUsedEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IsUsedEmail() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_IsUsedEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUsedEmail(::grpc::ServerContext* /*context*/, const ::prpc::EmailInfo* /*request*/, ::prpc::IsUsedEmailRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsUsedEmail(::grpc::ServerContext* context, ::prpc::EmailInfo* request, ::grpc::ServerAsyncResponseWriter< ::prpc::IsUsedEmailRet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Login() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::prpc::LoginInfo* request, ::grpc::ServerAsyncResponseWriter< ::prpc::LoginRet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FastLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FastLogin() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_FastLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FastLogin(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFastLogin(::grpc::ServerContext* context, ::prpc::LoginInfo* request, ::grpc::ServerAsyncResponseWriter< ::prpc::LoginRet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IsLogined : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IsLogined() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_IsLogined() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsLogined(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsLogined(::grpc::ServerContext* context, ::prpc::LoginInfo* request, ::grpc::ServerAsyncResponseWriter< ::prpc::LoginRet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ChangePassword() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::prpc::ChangePasswordReq* /*request*/, ::prpc::ChangePasswordRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::prpc::ChangePasswordReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::ChangePasswordRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Download : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Download() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_Download() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Download(::grpc::ServerContext* /*context*/, const ::prpc::DownloadRequest* /*request*/, ::prpc::DownloadRespone* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDownload(::grpc::ServerContext* context, ::prpc::DownloadRequest* request, ::grpc::ServerAsyncResponseWriter< ::prpc::DownloadRespone>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveTorrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveTorrent() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_RemoveTorrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveTorrent(::grpc::ServerContext* /*context*/, const ::prpc::RemoveTorrentReq* /*request*/, ::prpc::RemoveTorrentRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveTorrent(::grpc::ServerContext* context, ::prpc::RemoveTorrentReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::RemoveTorrentRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMagnetUri() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::GetMagnetUriReq* /*request*/, ::prpc::GetMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMagnetUri(::grpc::ServerContext* context, ::prpc::GetMagnetUriReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::GetMagnetUriRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnStatus() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_OnStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnStatus(::grpc::ServerContext* /*context*/, const ::prpc::StatusRequest* /*request*/, ::grpc::ServerWriter< ::prpc::StatusRespone>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnStatus(::grpc::ServerContext* context, ::prpc::StatusRequest* request, ::grpc::ServerAsyncWriter< ::prpc::StatusRespone>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryBtVideos() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_QueryBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::QueryBtVideosReq* /*request*/, ::prpc::QueryBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryBtVideos(::grpc::ServerContext* context, ::prpc::QueryBtVideosReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::QueryBtVideosRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_NewCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_NewCategoryItem() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_NewCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::NewCategoryItemReq* /*request*/, ::prpc::NewCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewCategoryItem(::grpc::ServerContext* context, ::prpc::NewCategoryItemReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::NewCategoryItemRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DelCategoryItem() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_DelCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::DelCategoryItemReq* /*request*/, ::prpc::DelCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelCategoryItem(::grpc::ServerContext* context, ::prpc::DelCategoryItemReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::DelCategoryItemRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddBtVideos() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_AddBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::AddBtVideosReq* /*request*/, ::prpc::AddBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBtVideos(::grpc::ServerContext* context, ::prpc::AddBtVideosReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::AddBtVideosRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShareItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ShareItem() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_ShareItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareItem(::grpc::ServerContext* /*context*/, const ::prpc::ShareItemReq* /*request*/, ::prpc::ShareItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShareItem(::grpc::ServerContext* context, ::prpc::ShareItemReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::ShareItemRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QuerySharedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QuerySharedItems() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_QuerySharedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySharedItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySharedItemsReq* /*request*/, ::prpc::QuerySharedItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQuerySharedItems(::grpc::ServerContext* context, ::prpc::QuerySharedItemsReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::QuerySharedItemsRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelSharedItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DelSharedItem() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_DelSharedItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelSharedItem(::grpc::ServerContext* /*context*/, const ::prpc::DelSharedItemReq* /*request*/, ::prpc::DelSharedItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelSharedItem(::grpc::ServerContext* context, ::prpc::DelSharedItemReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::DelSharedItemRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QuerySubItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QuerySubItems() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_QuerySubItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySubItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySubItemsReq* /*request*/, ::prpc::QuerySubItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQuerySubItems(::grpc::ServerContext* context, ::prpc::QuerySubItemsReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::QuerySubItemsRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryItemInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryItemInfo() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_QueryItemInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryItemInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryItemInfoReq* /*request*/, ::prpc::QueryItemInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryItemInfo(::grpc::ServerContext* context, ::prpc::QueryItemInfoReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::QueryItemInfoRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadSubtitle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadSubtitle() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_UploadSubtitle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadSubtitle(::grpc::ServerContext* /*context*/, const ::prpc::UploadSubtitleReq* /*request*/, ::prpc::UploadSubtitleRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadSubtitle(::grpc::ServerContext* context, ::prpc::UploadSubtitleReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::UploadSubtitleRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_JoinChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_JoinChatRoom() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_JoinChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinChatRoomReq* /*request*/, ::grpc::ServerWriter< ::prpc::JoinChatRoomRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestJoinChatRoom(::grpc::ServerContext* context, ::prpc::JoinChatRoomReq* request, ::grpc::ServerAsyncWriter< ::prpc::JoinChatRoomRes>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(20, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendMsg2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendMsg2ChatRoom() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_SendMsg2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMsg2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::SendMsg2ChatRoomReq* /*request*/, ::prpc::SendMsg2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMsg2ChatRoom(::grpc::ServerContext* context, ::prpc::SendMsg2ChatRoomReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::SendMsg2ChatRoomRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddMagnetCategory() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_AddMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetCategoryReq* /*request*/, ::prpc::AddMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddMagnetCategory(::grpc::ServerContext* context, ::prpc::AddMagnetCategoryReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::AddMagnetCategoryRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddMagnetUri() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_AddMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetUriReq* /*request*/, ::prpc::AddMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddMagnetUri(::grpc::ServerContext* context, ::prpc::AddMagnetUriReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::AddMagnetUriRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryMagnet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryMagnet() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_QueryMagnet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryMagnet(::grpc::ServerContext* /*context*/, const ::prpc::QueryMagnetReq* /*request*/, ::prpc::QueryMagnetRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryMagnet(::grpc::ServerContext* context, ::prpc::QueryMagnetReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::QueryMagnetRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DelMagnetCategory() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_DelMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::DelMagnetCategoryReq* /*request*/, ::prpc::DelMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelMagnetCategory(::grpc::ServerContext* context, ::prpc::DelMagnetCategoryReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::DelMagnetCategoryRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Register<WithAsyncMethod_IsUsedEmail<WithAsyncMethod_Login<WithAsyncMethod_FastLogin<WithAsyncMethod_IsLogined<WithAsyncMethod_ChangePassword<WithAsyncMethod_Download<WithAsyncMethod_RemoveTorrent<WithAsyncMethod_GetMagnetUri<WithAsyncMethod_OnStatus<WithAsyncMethod_QueryBtVideos<WithAsyncMethod_NewCategoryItem<WithAsyncMethod_DelCategoryItem<WithAsyncMethod_AddBtVideos<WithAsyncMethod_ShareItem<WithAsyncMethod_QuerySharedItems<WithAsyncMethod_DelSharedItem<WithAsyncMethod_QuerySubItems<WithAsyncMethod_QueryItemInfo<WithAsyncMethod_UploadSubtitle<WithAsyncMethod_JoinChatRoom<WithAsyncMethod_SendMsg2ChatRoom<WithAsyncMethod_AddMagnetCategory<WithAsyncMethod_AddMagnetUri<WithAsyncMethod_QueryMagnet<WithAsyncMethod_DelMagnetCategory<Service > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Register() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::RegisterInfo, ::prpc::RegisterRet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::RegisterInfo* request, ::prpc::RegisterRet* response) { return this->Register(context, request, response); }));}
    void SetMessageAllocatorFor_Register(
        ::grpc::MessageAllocator< ::prpc::RegisterInfo, ::prpc::RegisterRet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::RegisterInfo, ::prpc::RegisterRet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::prpc::RegisterInfo* /*request*/, ::prpc::RegisterRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Register(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::RegisterInfo* /*request*/, ::prpc::RegisterRet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IsUsedEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IsUsedEmail() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::EmailInfo, ::prpc::IsUsedEmailRet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::EmailInfo* request, ::prpc::IsUsedEmailRet* response) { return this->IsUsedEmail(context, request, response); }));}
    void SetMessageAllocatorFor_IsUsedEmail(
        ::grpc::MessageAllocator< ::prpc::EmailInfo, ::prpc::IsUsedEmailRet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::EmailInfo, ::prpc::IsUsedEmailRet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IsUsedEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUsedEmail(::grpc::ServerContext* /*context*/, const ::prpc::EmailInfo* /*request*/, ::prpc::IsUsedEmailRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsUsedEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::EmailInfo* /*request*/, ::prpc::IsUsedEmailRet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Login() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::LoginInfo, ::prpc::LoginRet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response) { return this->Login(context, request, response); }));}
    void SetMessageAllocatorFor_Login(
        ::grpc::MessageAllocator< ::prpc::LoginInfo, ::prpc::LoginRet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::LoginInfo, ::prpc::LoginRet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FastLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FastLogin() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::LoginInfo, ::prpc::LoginRet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response) { return this->FastLogin(context, request, response); }));}
    void SetMessageAllocatorFor_FastLogin(
        ::grpc::MessageAllocator< ::prpc::LoginInfo, ::prpc::LoginRet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::LoginInfo, ::prpc::LoginRet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FastLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FastLogin(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FastLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IsLogined : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IsLogined() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::LoginInfo, ::prpc::LoginRet>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::LoginInfo* request, ::prpc::LoginRet* response) { return this->IsLogined(context, request, response); }));}
    void SetMessageAllocatorFor_IsLogined(
        ::grpc::MessageAllocator< ::prpc::LoginInfo, ::prpc::LoginRet>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::LoginInfo, ::prpc::LoginRet>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IsLogined() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsLogined(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsLogined(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::ChangePasswordReq, ::prpc::ChangePasswordRsp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::ChangePasswordReq* request, ::prpc::ChangePasswordRsp* response) { return this->ChangePassword(context, request, response); }));}
    void SetMessageAllocatorFor_ChangePassword(
        ::grpc::MessageAllocator< ::prpc::ChangePasswordReq, ::prpc::ChangePasswordRsp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::ChangePasswordReq, ::prpc::ChangePasswordRsp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::prpc::ChangePasswordReq* /*request*/, ::prpc::ChangePasswordRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::ChangePasswordReq* /*request*/, ::prpc::ChangePasswordRsp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Download : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Download() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::DownloadRequest, ::prpc::DownloadRespone>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::DownloadRequest* request, ::prpc::DownloadRespone* response) { return this->Download(context, request, response); }));}
    void SetMessageAllocatorFor_Download(
        ::grpc::MessageAllocator< ::prpc::DownloadRequest, ::prpc::DownloadRespone>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::DownloadRequest, ::prpc::DownloadRespone>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Download() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Download(::grpc::ServerContext* /*context*/, const ::prpc::DownloadRequest* /*request*/, ::prpc::DownloadRespone* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Download(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::DownloadRequest* /*request*/, ::prpc::DownloadRespone* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveTorrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveTorrent() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::RemoveTorrentReq, ::prpc::RemoveTorrentRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::RemoveTorrentReq* request, ::prpc::RemoveTorrentRes* response) { return this->RemoveTorrent(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveTorrent(
        ::grpc::MessageAllocator< ::prpc::RemoveTorrentReq, ::prpc::RemoveTorrentRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::RemoveTorrentReq, ::prpc::RemoveTorrentRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveTorrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveTorrent(::grpc::ServerContext* /*context*/, const ::prpc::RemoveTorrentReq* /*request*/, ::prpc::RemoveTorrentRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveTorrent(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::RemoveTorrentReq* /*request*/, ::prpc::RemoveTorrentRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMagnetUri() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::GetMagnetUriReq, ::prpc::GetMagnetUriRsp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::GetMagnetUriReq* request, ::prpc::GetMagnetUriRsp* response) { return this->GetMagnetUri(context, request, response); }));}
    void SetMessageAllocatorFor_GetMagnetUri(
        ::grpc::MessageAllocator< ::prpc::GetMagnetUriReq, ::prpc::GetMagnetUriRsp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::GetMagnetUriReq, ::prpc::GetMagnetUriRsp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::GetMagnetUriReq* /*request*/, ::prpc::GetMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMagnetUri(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::GetMagnetUriReq* /*request*/, ::prpc::GetMagnetUriRsp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_OnStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_OnStatus() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::prpc::StatusRequest, ::prpc::StatusRespone>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::StatusRequest* request) { return this->OnStatus(context, request); }));
    }
    ~WithCallbackMethod_OnStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnStatus(::grpc::ServerContext* /*context*/, const ::prpc::StatusRequest* /*request*/, ::grpc::ServerWriter< ::prpc::StatusRespone>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::prpc::StatusRespone>* OnStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::StatusRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_QueryBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QueryBtVideos() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::QueryBtVideosReq, ::prpc::QueryBtVideosRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::QueryBtVideosReq* request, ::prpc::QueryBtVideosRes* response) { return this->QueryBtVideos(context, request, response); }));}
    void SetMessageAllocatorFor_QueryBtVideos(
        ::grpc::MessageAllocator< ::prpc::QueryBtVideosReq, ::prpc::QueryBtVideosRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::QueryBtVideosReq, ::prpc::QueryBtVideosRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QueryBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::QueryBtVideosReq* /*request*/, ::prpc::QueryBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryBtVideos(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::QueryBtVideosReq* /*request*/, ::prpc::QueryBtVideosRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_NewCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_NewCategoryItem() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::NewCategoryItemReq, ::prpc::NewCategoryItemRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::NewCategoryItemReq* request, ::prpc::NewCategoryItemRes* response) { return this->NewCategoryItem(context, request, response); }));}
    void SetMessageAllocatorFor_NewCategoryItem(
        ::grpc::MessageAllocator< ::prpc::NewCategoryItemReq, ::prpc::NewCategoryItemRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::NewCategoryItemReq, ::prpc::NewCategoryItemRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_NewCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::NewCategoryItemReq* /*request*/, ::prpc::NewCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewCategoryItem(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::NewCategoryItemReq* /*request*/, ::prpc::NewCategoryItemRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DelCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DelCategoryItem() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::DelCategoryItemReq, ::prpc::DelCategoryItemRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::DelCategoryItemReq* request, ::prpc::DelCategoryItemRes* response) { return this->DelCategoryItem(context, request, response); }));}
    void SetMessageAllocatorFor_DelCategoryItem(
        ::grpc::MessageAllocator< ::prpc::DelCategoryItemReq, ::prpc::DelCategoryItemRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::DelCategoryItemReq, ::prpc::DelCategoryItemRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DelCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::DelCategoryItemReq* /*request*/, ::prpc::DelCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelCategoryItem(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::DelCategoryItemReq* /*request*/, ::prpc::DelCategoryItemRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddBtVideos() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::AddBtVideosReq, ::prpc::AddBtVideosRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::AddBtVideosReq* request, ::prpc::AddBtVideosRes* response) { return this->AddBtVideos(context, request, response); }));}
    void SetMessageAllocatorFor_AddBtVideos(
        ::grpc::MessageAllocator< ::prpc::AddBtVideosReq, ::prpc::AddBtVideosRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::AddBtVideosReq, ::prpc::AddBtVideosRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::AddBtVideosReq* /*request*/, ::prpc::AddBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBtVideos(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::AddBtVideosReq* /*request*/, ::prpc::AddBtVideosRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ShareItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ShareItem() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::ShareItemReq, ::prpc::ShareItemRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::ShareItemReq* request, ::prpc::ShareItemRes* response) { return this->ShareItem(context, request, response); }));}
    void SetMessageAllocatorFor_ShareItem(
        ::grpc::MessageAllocator< ::prpc::ShareItemReq, ::prpc::ShareItemRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::ShareItemReq, ::prpc::ShareItemRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ShareItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareItem(::grpc::ServerContext* /*context*/, const ::prpc::ShareItemReq* /*request*/, ::prpc::ShareItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShareItem(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::ShareItemReq* /*request*/, ::prpc::ShareItemRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_QuerySharedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QuerySharedItems() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::QuerySharedItemsReq, ::prpc::QuerySharedItemsRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::QuerySharedItemsReq* request, ::prpc::QuerySharedItemsRes* response) { return this->QuerySharedItems(context, request, response); }));}
    void SetMessageAllocatorFor_QuerySharedItems(
        ::grpc::MessageAllocator< ::prpc::QuerySharedItemsReq, ::prpc::QuerySharedItemsRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::QuerySharedItemsReq, ::prpc::QuerySharedItemsRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QuerySharedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySharedItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySharedItemsReq* /*request*/, ::prpc::QuerySharedItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QuerySharedItems(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::QuerySharedItemsReq* /*request*/, ::prpc::QuerySharedItemsRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DelSharedItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DelSharedItem() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::DelSharedItemReq, ::prpc::DelSharedItemRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::DelSharedItemReq* request, ::prpc::DelSharedItemRes* response) { return this->DelSharedItem(context, request, response); }));}
    void SetMessageAllocatorFor_DelSharedItem(
        ::grpc::MessageAllocator< ::prpc::DelSharedItemReq, ::prpc::DelSharedItemRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::DelSharedItemReq, ::prpc::DelSharedItemRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DelSharedItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelSharedItem(::grpc::ServerContext* /*context*/, const ::prpc::DelSharedItemReq* /*request*/, ::prpc::DelSharedItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelSharedItem(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::DelSharedItemReq* /*request*/, ::prpc::DelSharedItemRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_QuerySubItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QuerySubItems() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::QuerySubItemsReq, ::prpc::QuerySubItemsRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::QuerySubItemsReq* request, ::prpc::QuerySubItemsRes* response) { return this->QuerySubItems(context, request, response); }));}
    void SetMessageAllocatorFor_QuerySubItems(
        ::grpc::MessageAllocator< ::prpc::QuerySubItemsReq, ::prpc::QuerySubItemsRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::QuerySubItemsReq, ::prpc::QuerySubItemsRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QuerySubItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySubItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySubItemsReq* /*request*/, ::prpc::QuerySubItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QuerySubItems(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::QuerySubItemsReq* /*request*/, ::prpc::QuerySubItemsRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_QueryItemInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QueryItemInfo() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::QueryItemInfoReq, ::prpc::QueryItemInfoRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::QueryItemInfoReq* request, ::prpc::QueryItemInfoRes* response) { return this->QueryItemInfo(context, request, response); }));}
    void SetMessageAllocatorFor_QueryItemInfo(
        ::grpc::MessageAllocator< ::prpc::QueryItemInfoReq, ::prpc::QueryItemInfoRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::QueryItemInfoReq, ::prpc::QueryItemInfoRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QueryItemInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryItemInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryItemInfoReq* /*request*/, ::prpc::QueryItemInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryItemInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::QueryItemInfoReq* /*request*/, ::prpc::QueryItemInfoRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UploadSubtitle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UploadSubtitle() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::UploadSubtitleReq, ::prpc::UploadSubtitleRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::UploadSubtitleReq* request, ::prpc::UploadSubtitleRes* response) { return this->UploadSubtitle(context, request, response); }));}
    void SetMessageAllocatorFor_UploadSubtitle(
        ::grpc::MessageAllocator< ::prpc::UploadSubtitleReq, ::prpc::UploadSubtitleRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::UploadSubtitleReq, ::prpc::UploadSubtitleRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UploadSubtitle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadSubtitle(::grpc::ServerContext* /*context*/, const ::prpc::UploadSubtitleReq* /*request*/, ::prpc::UploadSubtitleRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadSubtitle(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::UploadSubtitleReq* /*request*/, ::prpc::UploadSubtitleRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_JoinChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_JoinChatRoom() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackServerStreamingHandler< ::prpc::JoinChatRoomReq, ::prpc::JoinChatRoomRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::JoinChatRoomReq* request) { return this->JoinChatRoom(context, request); }));
    }
    ~WithCallbackMethod_JoinChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinChatRoomReq* /*request*/, ::grpc::ServerWriter< ::prpc::JoinChatRoomRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::prpc::JoinChatRoomRes>* JoinChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::JoinChatRoomReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendMsg2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendMsg2ChatRoom() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::SendMsg2ChatRoomReq, ::prpc::SendMsg2ChatRoomRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::SendMsg2ChatRoomReq* request, ::prpc::SendMsg2ChatRoomRes* response) { return this->SendMsg2ChatRoom(context, request, response); }));}
    void SetMessageAllocatorFor_SendMsg2ChatRoom(
        ::grpc::MessageAllocator< ::prpc::SendMsg2ChatRoomReq, ::prpc::SendMsg2ChatRoomRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::SendMsg2ChatRoomReq, ::prpc::SendMsg2ChatRoomRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendMsg2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMsg2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::SendMsg2ChatRoomReq* /*request*/, ::prpc::SendMsg2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMsg2ChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::SendMsg2ChatRoomReq* /*request*/, ::prpc::SendMsg2ChatRoomRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddMagnetCategory() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::AddMagnetCategoryReq, ::prpc::AddMagnetCategoryRsp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::AddMagnetCategoryReq* request, ::prpc::AddMagnetCategoryRsp* response) { return this->AddMagnetCategory(context, request, response); }));}
    void SetMessageAllocatorFor_AddMagnetCategory(
        ::grpc::MessageAllocator< ::prpc::AddMagnetCategoryReq, ::prpc::AddMagnetCategoryRsp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::AddMagnetCategoryReq, ::prpc::AddMagnetCategoryRsp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetCategoryReq* /*request*/, ::prpc::AddMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddMagnetCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::AddMagnetCategoryReq* /*request*/, ::prpc::AddMagnetCategoryRsp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddMagnetUri() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::AddMagnetUriReq, ::prpc::AddMagnetUriRsp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::AddMagnetUriReq* request, ::prpc::AddMagnetUriRsp* response) { return this->AddMagnetUri(context, request, response); }));}
    void SetMessageAllocatorFor_AddMagnetUri(
        ::grpc::MessageAllocator< ::prpc::AddMagnetUriReq, ::prpc::AddMagnetUriRsp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::AddMagnetUriReq, ::prpc::AddMagnetUriRsp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetUriReq* /*request*/, ::prpc::AddMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddMagnetUri(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::AddMagnetUriReq* /*request*/, ::prpc::AddMagnetUriRsp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_QueryMagnet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QueryMagnet() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::QueryMagnetReq, ::prpc::QueryMagnetRsp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::QueryMagnetReq* request, ::prpc::QueryMagnetRsp* response) { return this->QueryMagnet(context, request, response); }));}
    void SetMessageAllocatorFor_QueryMagnet(
        ::grpc::MessageAllocator< ::prpc::QueryMagnetReq, ::prpc::QueryMagnetRsp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::QueryMagnetReq, ::prpc::QueryMagnetRsp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QueryMagnet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryMagnet(::grpc::ServerContext* /*context*/, const ::prpc::QueryMagnetReq* /*request*/, ::prpc::QueryMagnetRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryMagnet(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::QueryMagnetReq* /*request*/, ::prpc::QueryMagnetRsp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DelMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DelMagnetCategory() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::DelMagnetCategoryReq, ::prpc::DelMagnetCategoryRsp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::DelMagnetCategoryReq* request, ::prpc::DelMagnetCategoryRsp* response) { return this->DelMagnetCategory(context, request, response); }));}
    void SetMessageAllocatorFor_DelMagnetCategory(
        ::grpc::MessageAllocator< ::prpc::DelMagnetCategoryReq, ::prpc::DelMagnetCategoryRsp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::DelMagnetCategoryReq, ::prpc::DelMagnetCategoryRsp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DelMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::DelMagnetCategoryReq* /*request*/, ::prpc::DelMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelMagnetCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::DelMagnetCategoryReq* /*request*/, ::prpc::DelMagnetCategoryRsp* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Register<WithCallbackMethod_IsUsedEmail<WithCallbackMethod_Login<WithCallbackMethod_FastLogin<WithCallbackMethod_IsLogined<WithCallbackMethod_ChangePassword<WithCallbackMethod_Download<WithCallbackMethod_RemoveTorrent<WithCallbackMethod_GetMagnetUri<WithCallbackMethod_OnStatus<WithCallbackMethod_QueryBtVideos<WithCallbackMethod_NewCategoryItem<WithCallbackMethod_DelCategoryItem<WithCallbackMethod_AddBtVideos<WithCallbackMethod_ShareItem<WithCallbackMethod_QuerySharedItems<WithCallbackMethod_DelSharedItem<WithCallbackMethod_QuerySubItems<WithCallbackMethod_QueryItemInfo<WithCallbackMethod_UploadSubtitle<WithCallbackMethod_JoinChatRoom<WithCallbackMethod_SendMsg2ChatRoom<WithCallbackMethod_AddMagnetCategory<WithCallbackMethod_AddMagnetUri<WithCallbackMethod_QueryMagnet<WithCallbackMethod_DelMagnetCategory<Service > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Register() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::prpc::RegisterInfo* /*request*/, ::prpc::RegisterRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IsUsedEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IsUsedEmail() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_IsUsedEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUsedEmail(::grpc::ServerContext* /*context*/, const ::prpc::EmailInfo* /*request*/, ::prpc::IsUsedEmailRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Login() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FastLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FastLogin() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_FastLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FastLogin(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IsLogined : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IsLogined() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_IsLogined() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsLogined(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ChangePassword() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::prpc::ChangePasswordReq* /*request*/, ::prpc::ChangePasswordRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Download : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Download() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_Download() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Download(::grpc::ServerContext* /*context*/, const ::prpc::DownloadRequest* /*request*/, ::prpc::DownloadRespone* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveTorrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveTorrent() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_RemoveTorrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveTorrent(::grpc::ServerContext* /*context*/, const ::prpc::RemoveTorrentReq* /*request*/, ::prpc::RemoveTorrentRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMagnetUri() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::GetMagnetUriReq* /*request*/, ::prpc::GetMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnStatus() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_OnStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnStatus(::grpc::ServerContext* /*context*/, const ::prpc::StatusRequest* /*request*/, ::grpc::ServerWriter< ::prpc::StatusRespone>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryBtVideos() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_QueryBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::QueryBtVideosReq* /*request*/, ::prpc::QueryBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_NewCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_NewCategoryItem() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_NewCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::NewCategoryItemReq* /*request*/, ::prpc::NewCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DelCategoryItem() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_DelCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::DelCategoryItemReq* /*request*/, ::prpc::DelCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddBtVideos() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_AddBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::AddBtVideosReq* /*request*/, ::prpc::AddBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShareItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ShareItem() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_ShareItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareItem(::grpc::ServerContext* /*context*/, const ::prpc::ShareItemReq* /*request*/, ::prpc::ShareItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QuerySharedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QuerySharedItems() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_QuerySharedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySharedItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySharedItemsReq* /*request*/, ::prpc::QuerySharedItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelSharedItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DelSharedItem() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_DelSharedItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelSharedItem(::grpc::ServerContext* /*context*/, const ::prpc::DelSharedItemReq* /*request*/, ::prpc::DelSharedItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QuerySubItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QuerySubItems() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_QuerySubItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySubItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySubItemsReq* /*request*/, ::prpc::QuerySubItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryItemInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryItemInfo() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_QueryItemInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryItemInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryItemInfoReq* /*request*/, ::prpc::QueryItemInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UploadSubtitle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadSubtitle() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_UploadSubtitle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadSubtitle(::grpc::ServerContext* /*context*/, const ::prpc::UploadSubtitleReq* /*request*/, ::prpc::UploadSubtitleRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_JoinChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_JoinChatRoom() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_JoinChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinChatRoomReq* /*request*/, ::grpc::ServerWriter< ::prpc::JoinChatRoomRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendMsg2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendMsg2ChatRoom() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_SendMsg2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMsg2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::SendMsg2ChatRoomReq* /*request*/, ::prpc::SendMsg2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddMagnetCategory() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_AddMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetCategoryReq* /*request*/, ::prpc::AddMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddMagnetUri() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_AddMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetUriReq* /*request*/, ::prpc::AddMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryMagnet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryMagnet() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_QueryMagnet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryMagnet(::grpc::ServerContext* /*context*/, const ::prpc::QueryMagnetReq* /*request*/, ::prpc::QueryMagnetRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DelMagnetCategory() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_DelMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::DelMagnetCategoryReq* /*request*/, ::prpc::DelMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Register() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::prpc::RegisterInfo* /*request*/, ::prpc::RegisterRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegister(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IsUsedEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IsUsedEmail() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_IsUsedEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUsedEmail(::grpc::ServerContext* /*context*/, const ::prpc::EmailInfo* /*request*/, ::prpc::IsUsedEmailRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsUsedEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Login() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FastLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FastLogin() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_FastLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FastLogin(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFastLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IsLogined : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IsLogined() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_IsLogined() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsLogined(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsLogined(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::prpc::ChangePasswordReq* /*request*/, ::prpc::ChangePasswordRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Download : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Download() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_Download() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Download(::grpc::ServerContext* /*context*/, const ::prpc::DownloadRequest* /*request*/, ::prpc::DownloadRespone* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDownload(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveTorrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveTorrent() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_RemoveTorrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveTorrent(::grpc::ServerContext* /*context*/, const ::prpc::RemoveTorrentReq* /*request*/, ::prpc::RemoveTorrentRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveTorrent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMagnetUri() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::GetMagnetUriReq* /*request*/, ::prpc::GetMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMagnetUri(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnStatus() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_OnStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnStatus(::grpc::ServerContext* /*context*/, const ::prpc::StatusRequest* /*request*/, ::grpc::ServerWriter< ::prpc::StatusRespone>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryBtVideos() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_QueryBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::QueryBtVideosReq* /*request*/, ::prpc::QueryBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryBtVideos(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_NewCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_NewCategoryItem() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_NewCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::NewCategoryItemReq* /*request*/, ::prpc::NewCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewCategoryItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DelCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DelCategoryItem() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_DelCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::DelCategoryItemReq* /*request*/, ::prpc::DelCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelCategoryItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddBtVideos() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_AddBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::AddBtVideosReq* /*request*/, ::prpc::AddBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBtVideos(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShareItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ShareItem() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_ShareItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareItem(::grpc::ServerContext* /*context*/, const ::prpc::ShareItemReq* /*request*/, ::prpc::ShareItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShareItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QuerySharedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QuerySharedItems() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_QuerySharedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySharedItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySharedItemsReq* /*request*/, ::prpc::QuerySharedItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQuerySharedItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DelSharedItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DelSharedItem() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_DelSharedItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelSharedItem(::grpc::ServerContext* /*context*/, const ::prpc::DelSharedItemReq* /*request*/, ::prpc::DelSharedItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelSharedItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QuerySubItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QuerySubItems() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_QuerySubItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySubItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySubItemsReq* /*request*/, ::prpc::QuerySubItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQuerySubItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryItemInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryItemInfo() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_QueryItemInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryItemInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryItemInfoReq* /*request*/, ::prpc::QueryItemInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryItemInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadSubtitle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadSubtitle() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_UploadSubtitle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadSubtitle(::grpc::ServerContext* /*context*/, const ::prpc::UploadSubtitleReq* /*request*/, ::prpc::UploadSubtitleRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadSubtitle(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_JoinChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_JoinChatRoom() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_JoinChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinChatRoomReq* /*request*/, ::grpc::ServerWriter< ::prpc::JoinChatRoomRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestJoinChatRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(20, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendMsg2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendMsg2ChatRoom() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_SendMsg2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMsg2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::SendMsg2ChatRoomReq* /*request*/, ::prpc::SendMsg2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMsg2ChatRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddMagnetCategory() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_AddMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetCategoryReq* /*request*/, ::prpc::AddMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddMagnetCategory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddMagnetUri() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_AddMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetUriReq* /*request*/, ::prpc::AddMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddMagnetUri(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryMagnet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryMagnet() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_QueryMagnet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryMagnet(::grpc::ServerContext* /*context*/, const ::prpc::QueryMagnetReq* /*request*/, ::prpc::QueryMagnetRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryMagnet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DelMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DelMagnetCategory() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_DelMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::DelMagnetCategoryReq* /*request*/, ::prpc::DelMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelMagnetCategory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Register() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Register(context, request, response); }));
    }
    ~WithRawCallbackMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::prpc::RegisterInfo* /*request*/, ::prpc::RegisterRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Register(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IsUsedEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IsUsedEmail() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IsUsedEmail(context, request, response); }));
    }
    ~WithRawCallbackMethod_IsUsedEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUsedEmail(::grpc::ServerContext* /*context*/, const ::prpc::EmailInfo* /*request*/, ::prpc::IsUsedEmailRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsUsedEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Login() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Login(context, request, response); }));
    }
    ~WithRawCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FastLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FastLogin() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FastLogin(context, request, response); }));
    }
    ~WithRawCallbackMethod_FastLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FastLogin(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FastLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IsLogined : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IsLogined() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IsLogined(context, request, response); }));
    }
    ~WithRawCallbackMethod_IsLogined() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsLogined(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsLogined(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ChangePassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::prpc::ChangePasswordReq* /*request*/, ::prpc::ChangePasswordRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Download : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Download() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Download(context, request, response); }));
    }
    ~WithRawCallbackMethod_Download() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Download(::grpc::ServerContext* /*context*/, const ::prpc::DownloadRequest* /*request*/, ::prpc::DownloadRespone* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Download(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveTorrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveTorrent() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveTorrent(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveTorrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveTorrent(::grpc::ServerContext* /*context*/, const ::prpc::RemoveTorrentReq* /*request*/, ::prpc::RemoveTorrentRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveTorrent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMagnetUri() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMagnetUri(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::GetMagnetUriReq* /*request*/, ::prpc::GetMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMagnetUri(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_OnStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_OnStatus() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->OnStatus(context, request); }));
    }
    ~WithRawCallbackMethod_OnStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnStatus(::grpc::ServerContext* /*context*/, const ::prpc::StatusRequest* /*request*/, ::grpc::ServerWriter< ::prpc::StatusRespone>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* OnStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QueryBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QueryBtVideos() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryBtVideos(context, request, response); }));
    }
    ~WithRawCallbackMethod_QueryBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::QueryBtVideosReq* /*request*/, ::prpc::QueryBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryBtVideos(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_NewCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_NewCategoryItem() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->NewCategoryItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_NewCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::NewCategoryItemReq* /*request*/, ::prpc::NewCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewCategoryItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DelCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DelCategoryItem() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DelCategoryItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_DelCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::DelCategoryItemReq* /*request*/, ::prpc::DelCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelCategoryItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddBtVideos() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddBtVideos(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::AddBtVideosReq* /*request*/, ::prpc::AddBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBtVideos(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ShareItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ShareItem() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ShareItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_ShareItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareItem(::grpc::ServerContext* /*context*/, const ::prpc::ShareItemReq* /*request*/, ::prpc::ShareItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShareItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QuerySharedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QuerySharedItems() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QuerySharedItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_QuerySharedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySharedItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySharedItemsReq* /*request*/, ::prpc::QuerySharedItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QuerySharedItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DelSharedItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DelSharedItem() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DelSharedItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_DelSharedItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelSharedItem(::grpc::ServerContext* /*context*/, const ::prpc::DelSharedItemReq* /*request*/, ::prpc::DelSharedItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelSharedItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QuerySubItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QuerySubItems() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QuerySubItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_QuerySubItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QuerySubItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySubItemsReq* /*request*/, ::prpc::QuerySubItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QuerySubItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QueryItemInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QueryItemInfo() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryItemInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_QueryItemInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryItemInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryItemInfoReq* /*request*/, ::prpc::QueryItemInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryItemInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UploadSubtitle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UploadSubtitle() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UploadSubtitle(context, request, response); }));
    }
    ~WithRawCallbackMethod_UploadSubtitle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadSubtitle(::grpc::ServerContext* /*context*/, const ::prpc::UploadSubtitleReq* /*request*/, ::prpc::UploadSubtitleRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadSubtitle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_JoinChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_JoinChatRoom() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->JoinChatRoom(context, request); }));
    }
    ~WithRawCallbackMethod_JoinChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinChatRoomReq* /*request*/, ::grpc::ServerWriter< ::prpc::JoinChatRoomRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* JoinChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendMsg2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendMsg2ChatRoom() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendMsg2ChatRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendMsg2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMsg2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::SendMsg2ChatRoomReq* /*request*/, ::prpc::SendMsg2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMsg2ChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddMagnetCategory() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddMagnetCategory(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetCategoryReq* /*request*/, ::prpc::AddMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddMagnetCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddMagnetUri() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddMagnetUri(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetUriReq* /*request*/, ::prpc::AddMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddMagnetUri(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QueryMagnet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QueryMagnet() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryMagnet(context, request, response); }));
    }
    ~WithRawCallbackMethod_QueryMagnet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryMagnet(::grpc::ServerContext* /*context*/, const ::prpc::QueryMagnetReq* /*request*/, ::prpc::QueryMagnetRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryMagnet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DelMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DelMagnetCategory() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DelMagnetCategory(context, request, response); }));
    }
    ~WithRawCallbackMethod_DelMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::DelMagnetCategoryReq* /*request*/, ::prpc::DelMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelMagnetCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Register : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Register() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::RegisterInfo, ::prpc::RegisterRet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::RegisterInfo, ::prpc::RegisterRet>* streamer) {
                       return this->StreamedRegister(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Register() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Register(::grpc::ServerContext* /*context*/, const ::prpc::RegisterInfo* /*request*/, ::prpc::RegisterRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegister(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::RegisterInfo,::prpc::RegisterRet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IsUsedEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IsUsedEmail() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::EmailInfo, ::prpc::IsUsedEmailRet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::EmailInfo, ::prpc::IsUsedEmailRet>* streamer) {
                       return this->StreamedIsUsedEmail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IsUsedEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IsUsedEmail(::grpc::ServerContext* /*context*/, const ::prpc::EmailInfo* /*request*/, ::prpc::IsUsedEmailRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIsUsedEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::EmailInfo,::prpc::IsUsedEmailRet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Login() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::LoginInfo, ::prpc::LoginRet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::LoginInfo, ::prpc::LoginRet>* streamer) {
                       return this->StreamedLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::LoginInfo,::prpc::LoginRet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FastLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FastLogin() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::LoginInfo, ::prpc::LoginRet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::LoginInfo, ::prpc::LoginRet>* streamer) {
                       return this->StreamedFastLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FastLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FastLogin(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFastLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::LoginInfo,::prpc::LoginRet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IsLogined : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IsLogined() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::LoginInfo, ::prpc::LoginRet>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::LoginInfo, ::prpc::LoginRet>* streamer) {
                       return this->StreamedIsLogined(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IsLogined() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IsLogined(::grpc::ServerContext* /*context*/, const ::prpc::LoginInfo* /*request*/, ::prpc::LoginRet* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIsLogined(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::LoginInfo,::prpc::LoginRet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ChangePassword() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::ChangePasswordReq, ::prpc::ChangePasswordRsp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::ChangePasswordReq, ::prpc::ChangePasswordRsp>* streamer) {
                       return this->StreamedChangePassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::prpc::ChangePasswordReq* /*request*/, ::prpc::ChangePasswordRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangePassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::ChangePasswordReq,::prpc::ChangePasswordRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Download : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Download() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::DownloadRequest, ::prpc::DownloadRespone>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::DownloadRequest, ::prpc::DownloadRespone>* streamer) {
                       return this->StreamedDownload(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Download() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Download(::grpc::ServerContext* /*context*/, const ::prpc::DownloadRequest* /*request*/, ::prpc::DownloadRespone* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDownload(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::DownloadRequest,::prpc::DownloadRespone>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveTorrent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveTorrent() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::RemoveTorrentReq, ::prpc::RemoveTorrentRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::RemoveTorrentReq, ::prpc::RemoveTorrentRes>* streamer) {
                       return this->StreamedRemoveTorrent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveTorrent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveTorrent(::grpc::ServerContext* /*context*/, const ::prpc::RemoveTorrentReq* /*request*/, ::prpc::RemoveTorrentRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveTorrent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::RemoveTorrentReq,::prpc::RemoveTorrentRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMagnetUri() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::GetMagnetUriReq, ::prpc::GetMagnetUriRsp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::GetMagnetUriReq, ::prpc::GetMagnetUriRsp>* streamer) {
                       return this->StreamedGetMagnetUri(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::GetMagnetUriReq* /*request*/, ::prpc::GetMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMagnetUri(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::GetMagnetUriReq,::prpc::GetMagnetUriRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryBtVideos() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::QueryBtVideosReq, ::prpc::QueryBtVideosRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::QueryBtVideosReq, ::prpc::QueryBtVideosRes>* streamer) {
                       return this->StreamedQueryBtVideos(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::QueryBtVideosReq* /*request*/, ::prpc::QueryBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryBtVideos(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::QueryBtVideosReq,::prpc::QueryBtVideosRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_NewCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_NewCategoryItem() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::NewCategoryItemReq, ::prpc::NewCategoryItemRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::NewCategoryItemReq, ::prpc::NewCategoryItemRes>* streamer) {
                       return this->StreamedNewCategoryItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_NewCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status NewCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::NewCategoryItemReq* /*request*/, ::prpc::NewCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedNewCategoryItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::NewCategoryItemReq,::prpc::NewCategoryItemRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelCategoryItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DelCategoryItem() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::DelCategoryItemReq, ::prpc::DelCategoryItemRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::DelCategoryItemReq, ::prpc::DelCategoryItemRes>* streamer) {
                       return this->StreamedDelCategoryItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DelCategoryItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelCategoryItem(::grpc::ServerContext* /*context*/, const ::prpc::DelCategoryItemReq* /*request*/, ::prpc::DelCategoryItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelCategoryItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::DelCategoryItemReq,::prpc::DelCategoryItemRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddBtVideos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddBtVideos() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::AddBtVideosReq, ::prpc::AddBtVideosRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::AddBtVideosReq, ::prpc::AddBtVideosRes>* streamer) {
                       return this->StreamedAddBtVideos(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddBtVideos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddBtVideos(::grpc::ServerContext* /*context*/, const ::prpc::AddBtVideosReq* /*request*/, ::prpc::AddBtVideosRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddBtVideos(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::AddBtVideosReq,::prpc::AddBtVideosRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShareItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ShareItem() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::ShareItemReq, ::prpc::ShareItemRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::ShareItemReq, ::prpc::ShareItemRes>* streamer) {
                       return this->StreamedShareItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ShareItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShareItem(::grpc::ServerContext* /*context*/, const ::prpc::ShareItemReq* /*request*/, ::prpc::ShareItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShareItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::ShareItemReq,::prpc::ShareItemRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QuerySharedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QuerySharedItems() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::QuerySharedItemsReq, ::prpc::QuerySharedItemsRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::QuerySharedItemsReq, ::prpc::QuerySharedItemsRes>* streamer) {
                       return this->StreamedQuerySharedItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QuerySharedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QuerySharedItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySharedItemsReq* /*request*/, ::prpc::QuerySharedItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQuerySharedItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::QuerySharedItemsReq,::prpc::QuerySharedItemsRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelSharedItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DelSharedItem() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::DelSharedItemReq, ::prpc::DelSharedItemRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::DelSharedItemReq, ::prpc::DelSharedItemRes>* streamer) {
                       return this->StreamedDelSharedItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DelSharedItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelSharedItem(::grpc::ServerContext* /*context*/, const ::prpc::DelSharedItemReq* /*request*/, ::prpc::DelSharedItemRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelSharedItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::DelSharedItemReq,::prpc::DelSharedItemRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QuerySubItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QuerySubItems() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::QuerySubItemsReq, ::prpc::QuerySubItemsRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::QuerySubItemsReq, ::prpc::QuerySubItemsRes>* streamer) {
                       return this->StreamedQuerySubItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QuerySubItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QuerySubItems(::grpc::ServerContext* /*context*/, const ::prpc::QuerySubItemsReq* /*request*/, ::prpc::QuerySubItemsRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQuerySubItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::QuerySubItemsReq,::prpc::QuerySubItemsRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryItemInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryItemInfo() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::QueryItemInfoReq, ::prpc::QueryItemInfoRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::QueryItemInfoReq, ::prpc::QueryItemInfoRes>* streamer) {
                       return this->StreamedQueryItemInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryItemInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryItemInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryItemInfoReq* /*request*/, ::prpc::QueryItemInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryItemInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::QueryItemInfoReq,::prpc::QueryItemInfoRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UploadSubtitle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UploadSubtitle() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::UploadSubtitleReq, ::prpc::UploadSubtitleRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::UploadSubtitleReq, ::prpc::UploadSubtitleRes>* streamer) {
                       return this->StreamedUploadSubtitle(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UploadSubtitle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UploadSubtitle(::grpc::ServerContext* /*context*/, const ::prpc::UploadSubtitleReq* /*request*/, ::prpc::UploadSubtitleRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUploadSubtitle(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::UploadSubtitleReq,::prpc::UploadSubtitleRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendMsg2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendMsg2ChatRoom() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::SendMsg2ChatRoomReq, ::prpc::SendMsg2ChatRoomRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::SendMsg2ChatRoomReq, ::prpc::SendMsg2ChatRoomRes>* streamer) {
                       return this->StreamedSendMsg2ChatRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendMsg2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendMsg2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::SendMsg2ChatRoomReq* /*request*/, ::prpc::SendMsg2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendMsg2ChatRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::SendMsg2ChatRoomReq,::prpc::SendMsg2ChatRoomRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddMagnetCategory() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::AddMagnetCategoryReq, ::prpc::AddMagnetCategoryRsp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::AddMagnetCategoryReq, ::prpc::AddMagnetCategoryRsp>* streamer) {
                       return this->StreamedAddMagnetCategory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetCategoryReq* /*request*/, ::prpc::AddMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddMagnetCategory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::AddMagnetCategoryReq,::prpc::AddMagnetCategoryRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddMagnetUri : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddMagnetUri() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::AddMagnetUriReq, ::prpc::AddMagnetUriRsp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::AddMagnetUriReq, ::prpc::AddMagnetUriRsp>* streamer) {
                       return this->StreamedAddMagnetUri(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddMagnetUri() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddMagnetUri(::grpc::ServerContext* /*context*/, const ::prpc::AddMagnetUriReq* /*request*/, ::prpc::AddMagnetUriRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddMagnetUri(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::AddMagnetUriReq,::prpc::AddMagnetUriRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryMagnet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryMagnet() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::QueryMagnetReq, ::prpc::QueryMagnetRsp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::QueryMagnetReq, ::prpc::QueryMagnetRsp>* streamer) {
                       return this->StreamedQueryMagnet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryMagnet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryMagnet(::grpc::ServerContext* /*context*/, const ::prpc::QueryMagnetReq* /*request*/, ::prpc::QueryMagnetRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryMagnet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::QueryMagnetReq,::prpc::QueryMagnetRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelMagnetCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DelMagnetCategory() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::DelMagnetCategoryReq, ::prpc::DelMagnetCategoryRsp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::DelMagnetCategoryReq, ::prpc::DelMagnetCategoryRsp>* streamer) {
                       return this->StreamedDelMagnetCategory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DelMagnetCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelMagnetCategory(::grpc::ServerContext* /*context*/, const ::prpc::DelMagnetCategoryReq* /*request*/, ::prpc::DelMagnetCategoryRsp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelMagnetCategory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::DelMagnetCategoryReq,::prpc::DelMagnetCategoryRsp>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Register<WithStreamedUnaryMethod_IsUsedEmail<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_FastLogin<WithStreamedUnaryMethod_IsLogined<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_Download<WithStreamedUnaryMethod_RemoveTorrent<WithStreamedUnaryMethod_GetMagnetUri<WithStreamedUnaryMethod_QueryBtVideos<WithStreamedUnaryMethod_NewCategoryItem<WithStreamedUnaryMethod_DelCategoryItem<WithStreamedUnaryMethod_AddBtVideos<WithStreamedUnaryMethod_ShareItem<WithStreamedUnaryMethod_QuerySharedItems<WithStreamedUnaryMethod_DelSharedItem<WithStreamedUnaryMethod_QuerySubItems<WithStreamedUnaryMethod_QueryItemInfo<WithStreamedUnaryMethod_UploadSubtitle<WithStreamedUnaryMethod_SendMsg2ChatRoom<WithStreamedUnaryMethod_AddMagnetCategory<WithStreamedUnaryMethod_AddMagnetUri<WithStreamedUnaryMethod_QueryMagnet<WithStreamedUnaryMethod_DelMagnetCategory<Service > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_OnStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_OnStatus() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::prpc::StatusRequest, ::prpc::StatusRespone>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::prpc::StatusRequest, ::prpc::StatusRespone>* streamer) {
                       return this->StreamedOnStatus(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_OnStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnStatus(::grpc::ServerContext* /*context*/, const ::prpc::StatusRequest* /*request*/, ::grpc::ServerWriter< ::prpc::StatusRespone>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedOnStatus(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::prpc::StatusRequest,::prpc::StatusRespone>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_JoinChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_JoinChatRoom() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::prpc::JoinChatRoomReq, ::prpc::JoinChatRoomRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::prpc::JoinChatRoomReq, ::prpc::JoinChatRoomRes>* streamer) {
                       return this->StreamedJoinChatRoom(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_JoinChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status JoinChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinChatRoomReq* /*request*/, ::grpc::ServerWriter< ::prpc::JoinChatRoomRes>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedJoinChatRoom(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::prpc::JoinChatRoomReq,::prpc::JoinChatRoomRes>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_OnStatus<WithSplitStreamingMethod_JoinChatRoom<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_Register<WithStreamedUnaryMethod_IsUsedEmail<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_FastLogin<WithStreamedUnaryMethod_IsLogined<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_Download<WithStreamedUnaryMethod_RemoveTorrent<WithStreamedUnaryMethod_GetMagnetUri<WithSplitStreamingMethod_OnStatus<WithStreamedUnaryMethod_QueryBtVideos<WithStreamedUnaryMethod_NewCategoryItem<WithStreamedUnaryMethod_DelCategoryItem<WithStreamedUnaryMethod_AddBtVideos<WithStreamedUnaryMethod_ShareItem<WithStreamedUnaryMethod_QuerySharedItems<WithStreamedUnaryMethod_DelSharedItem<WithStreamedUnaryMethod_QuerySubItems<WithStreamedUnaryMethod_QueryItemInfo<WithStreamedUnaryMethod_UploadSubtitle<WithSplitStreamingMethod_JoinChatRoom<WithStreamedUnaryMethod_SendMsg2ChatRoom<WithStreamedUnaryMethod_AddMagnetCategory<WithStreamedUnaryMethod_AddMagnetUri<WithStreamedUnaryMethod_QueryMagnet<WithStreamedUnaryMethod_DelMagnetCategory<Service > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace prpc


#endif  // GRPC_user_2eproto__INCLUDED

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: chat.proto
#ifndef GRPC_chat_2eproto__INCLUDED
#define GRPC_chat_2eproto__INCLUDED

#include "chat.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace prpc {

class ChatService final {
 public:
  static constexpr char const* service_full_name() {
    return "prpc.ChatService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status QueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::prpc::QueryChatRoomServerRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomServerRes>> AsyncQueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomServerRes>>(AsyncQueryChatRoomServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomServerRes>> PrepareAsyncQueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomServerRes>>(PrepareAsyncQueryChatRoomServerRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::prpc::CreateChatRoomRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::CreateChatRoomRes>> AsyncCreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::CreateChatRoomRes>>(AsyncCreateChatRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::CreateChatRoomRes>> PrepareAsyncCreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::CreateChatRoomRes>>(PrepareAsyncCreateChatRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status QueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::prpc::QueryChatRoomInfoRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomInfoRes>> AsyncQueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomInfoRes>>(AsyncQueryChatRoomInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomInfoRes>> PrepareAsyncQueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomInfoRes>>(PrepareAsyncQueryChatRoomInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status JoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::prpc::JoinRoomRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::JoinRoomRes>> AsyncJoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::JoinRoomRes>>(AsyncJoinRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::JoinRoomRes>> PrepareAsyncJoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::JoinRoomRes>>(PrepareAsyncJoinRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status LeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::prpc::LeaveRoomRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LeaveRoomRes>> AsyncLeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LeaveRoomRes>>(AsyncLeaveRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LeaveRoomRes>> PrepareAsyncLeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LeaveRoomRes>>(PrepareAsyncLeaveRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status Send2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::prpc::Send2ChatRoomRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::Send2ChatRoomRes>> AsyncSend2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::Send2ChatRoomRes>>(AsyncSend2ChatRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::Send2ChatRoomRes>> PrepareAsyncSend2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::prpc::Send2ChatRoomRes>>(PrepareAsyncSend2ChatRoomRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void QueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq* request, ::prpc::QueryChatRoomServerRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq* request, ::prpc::QueryChatRoomServerRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq* request, ::prpc::CreateChatRoomRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq* request, ::prpc::CreateChatRoomRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void QueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq* request, ::prpc::QueryChatRoomInfoRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq* request, ::prpc::QueryChatRoomInfoRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void JoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq* request, ::prpc::JoinRoomRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void JoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq* request, ::prpc::JoinRoomRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void LeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq* request, ::prpc::LeaveRoomRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq* request, ::prpc::LeaveRoomRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Send2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq* request, ::prpc::Send2ChatRoomRes* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Send2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq* request, ::prpc::Send2ChatRoomRes* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomServerRes>* AsyncQueryChatRoomServerRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomServerRes>* PrepareAsyncQueryChatRoomServerRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::CreateChatRoomRes>* AsyncCreateChatRoomRaw(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::CreateChatRoomRes>* PrepareAsyncCreateChatRoomRaw(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomInfoRes>* AsyncQueryChatRoomInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::QueryChatRoomInfoRes>* PrepareAsyncQueryChatRoomInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::JoinRoomRes>* AsyncJoinRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::JoinRoomRes>* PrepareAsyncJoinRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LeaveRoomRes>* AsyncLeaveRoomRaw(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::LeaveRoomRes>* PrepareAsyncLeaveRoomRaw(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::Send2ChatRoomRes>* AsyncSend2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::prpc::Send2ChatRoomRes>* PrepareAsyncSend2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status QueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::prpc::QueryChatRoomServerRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomServerRes>> AsyncQueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomServerRes>>(AsyncQueryChatRoomServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomServerRes>> PrepareAsyncQueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomServerRes>>(PrepareAsyncQueryChatRoomServerRaw(context, request, cq));
    }
    ::grpc::Status CreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::prpc::CreateChatRoomRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::CreateChatRoomRes>> AsyncCreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::CreateChatRoomRes>>(AsyncCreateChatRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::CreateChatRoomRes>> PrepareAsyncCreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::CreateChatRoomRes>>(PrepareAsyncCreateChatRoomRaw(context, request, cq));
    }
    ::grpc::Status QueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::prpc::QueryChatRoomInfoRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomInfoRes>> AsyncQueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomInfoRes>>(AsyncQueryChatRoomInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomInfoRes>> PrepareAsyncQueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomInfoRes>>(PrepareAsyncQueryChatRoomInfoRaw(context, request, cq));
    }
    ::grpc::Status JoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::prpc::JoinRoomRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::JoinRoomRes>> AsyncJoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::JoinRoomRes>>(AsyncJoinRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::JoinRoomRes>> PrepareAsyncJoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::JoinRoomRes>>(PrepareAsyncJoinRoomRaw(context, request, cq));
    }
    ::grpc::Status LeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::prpc::LeaveRoomRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LeaveRoomRes>> AsyncLeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LeaveRoomRes>>(AsyncLeaveRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LeaveRoomRes>> PrepareAsyncLeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::LeaveRoomRes>>(PrepareAsyncLeaveRoomRaw(context, request, cq));
    }
    ::grpc::Status Send2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::prpc::Send2ChatRoomRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::Send2ChatRoomRes>> AsyncSend2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::Send2ChatRoomRes>>(AsyncSend2ChatRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::Send2ChatRoomRes>> PrepareAsyncSend2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::prpc::Send2ChatRoomRes>>(PrepareAsyncSend2ChatRoomRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void QueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq* request, ::prpc::QueryChatRoomServerRes* response, std::function<void(::grpc::Status)>) override;
      void QueryChatRoomServer(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq* request, ::prpc::QueryChatRoomServerRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq* request, ::prpc::CreateChatRoomRes* response, std::function<void(::grpc::Status)>) override;
      void CreateChatRoom(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq* request, ::prpc::CreateChatRoomRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void QueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq* request, ::prpc::QueryChatRoomInfoRes* response, std::function<void(::grpc::Status)>) override;
      void QueryChatRoomInfo(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq* request, ::prpc::QueryChatRoomInfoRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void JoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq* request, ::prpc::JoinRoomRes* response, std::function<void(::grpc::Status)>) override;
      void JoinRoom(::grpc::ClientContext* context, const ::prpc::JoinRoomReq* request, ::prpc::JoinRoomRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void LeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq* request, ::prpc::LeaveRoomRes* response, std::function<void(::grpc::Status)>) override;
      void LeaveRoom(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq* request, ::prpc::LeaveRoomRes* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Send2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq* request, ::prpc::Send2ChatRoomRes* response, std::function<void(::grpc::Status)>) override;
      void Send2ChatRoom(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq* request, ::prpc::Send2ChatRoomRes* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomServerRes>* AsyncQueryChatRoomServerRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomServerRes>* PrepareAsyncQueryChatRoomServerRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomServerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::CreateChatRoomRes>* AsyncCreateChatRoomRaw(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::CreateChatRoomRes>* PrepareAsyncCreateChatRoomRaw(::grpc::ClientContext* context, const ::prpc::CreateChatRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomInfoRes>* AsyncQueryChatRoomInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::QueryChatRoomInfoRes>* PrepareAsyncQueryChatRoomInfoRaw(::grpc::ClientContext* context, const ::prpc::QueryChatRoomInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::JoinRoomRes>* AsyncJoinRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::JoinRoomRes>* PrepareAsyncJoinRoomRaw(::grpc::ClientContext* context, const ::prpc::JoinRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LeaveRoomRes>* AsyncLeaveRoomRaw(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::LeaveRoomRes>* PrepareAsyncLeaveRoomRaw(::grpc::ClientContext* context, const ::prpc::LeaveRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::Send2ChatRoomRes>* AsyncSend2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::prpc::Send2ChatRoomRes>* PrepareAsyncSend2ChatRoomRaw(::grpc::ClientContext* context, const ::prpc::Send2ChatRoomReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_QueryChatRoomServer_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateChatRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryChatRoomInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_JoinRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_LeaveRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_Send2ChatRoom_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status QueryChatRoomServer(::grpc::ServerContext* context, const ::prpc::QueryChatRoomServerReq* request, ::prpc::QueryChatRoomServerRes* response);
    virtual ::grpc::Status CreateChatRoom(::grpc::ServerContext* context, const ::prpc::CreateChatRoomReq* request, ::prpc::CreateChatRoomRes* response);
    virtual ::grpc::Status QueryChatRoomInfo(::grpc::ServerContext* context, const ::prpc::QueryChatRoomInfoReq* request, ::prpc::QueryChatRoomInfoRes* response);
    virtual ::grpc::Status JoinRoom(::grpc::ServerContext* context, const ::prpc::JoinRoomReq* request, ::prpc::JoinRoomRes* response);
    virtual ::grpc::Status LeaveRoom(::grpc::ServerContext* context, const ::prpc::LeaveRoomReq* request, ::prpc::LeaveRoomRes* response);
    virtual ::grpc::Status Send2ChatRoom(::grpc::ServerContext* context, const ::prpc::Send2ChatRoomReq* request, ::prpc::Send2ChatRoomRes* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryChatRoomServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryChatRoomServer() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_QueryChatRoomServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomServer(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomServerReq* /*request*/, ::prpc::QueryChatRoomServerRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryChatRoomServer(::grpc::ServerContext* context, ::prpc::QueryChatRoomServerReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::QueryChatRoomServerRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateChatRoom() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::CreateChatRoomReq* /*request*/, ::prpc::CreateChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateChatRoom(::grpc::ServerContext* context, ::prpc::CreateChatRoomReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::CreateChatRoomRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryChatRoomInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryChatRoomInfo() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_QueryChatRoomInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomInfoReq* /*request*/, ::prpc::QueryChatRoomInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryChatRoomInfo(::grpc::ServerContext* context, ::prpc::QueryChatRoomInfoReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::QueryChatRoomInfoRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_JoinRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_JoinRoom() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_JoinRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinRoomReq* /*request*/, ::prpc::JoinRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestJoinRoom(::grpc::ServerContext* context, ::prpc::JoinRoomReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::JoinRoomRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LeaveRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LeaveRoom() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_LeaveRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LeaveRoom(::grpc::ServerContext* /*context*/, const ::prpc::LeaveRoomReq* /*request*/, ::prpc::LeaveRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLeaveRoom(::grpc::ServerContext* context, ::prpc::LeaveRoomReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::LeaveRoomRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Send2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Send2ChatRoom() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_Send2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Send2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::Send2ChatRoomReq* /*request*/, ::prpc::Send2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSend2ChatRoom(::grpc::ServerContext* context, ::prpc::Send2ChatRoomReq* request, ::grpc::ServerAsyncResponseWriter< ::prpc::Send2ChatRoomRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_QueryChatRoomServer<WithAsyncMethod_CreateChatRoom<WithAsyncMethod_QueryChatRoomInfo<WithAsyncMethod_JoinRoom<WithAsyncMethod_LeaveRoom<WithAsyncMethod_Send2ChatRoom<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_QueryChatRoomServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QueryChatRoomServer() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::QueryChatRoomServerReq, ::prpc::QueryChatRoomServerRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::QueryChatRoomServerReq* request, ::prpc::QueryChatRoomServerRes* response) { return this->QueryChatRoomServer(context, request, response); }));}
    void SetMessageAllocatorFor_QueryChatRoomServer(
        ::grpc::MessageAllocator< ::prpc::QueryChatRoomServerReq, ::prpc::QueryChatRoomServerRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::QueryChatRoomServerReq, ::prpc::QueryChatRoomServerRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QueryChatRoomServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomServer(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomServerReq* /*request*/, ::prpc::QueryChatRoomServerRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryChatRoomServer(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::QueryChatRoomServerReq* /*request*/, ::prpc::QueryChatRoomServerRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateChatRoom() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::CreateChatRoomReq, ::prpc::CreateChatRoomRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::CreateChatRoomReq* request, ::prpc::CreateChatRoomRes* response) { return this->CreateChatRoom(context, request, response); }));}
    void SetMessageAllocatorFor_CreateChatRoom(
        ::grpc::MessageAllocator< ::prpc::CreateChatRoomReq, ::prpc::CreateChatRoomRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::CreateChatRoomReq, ::prpc::CreateChatRoomRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::CreateChatRoomReq* /*request*/, ::prpc::CreateChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::CreateChatRoomReq* /*request*/, ::prpc::CreateChatRoomRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_QueryChatRoomInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QueryChatRoomInfo() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::QueryChatRoomInfoReq, ::prpc::QueryChatRoomInfoRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::QueryChatRoomInfoReq* request, ::prpc::QueryChatRoomInfoRes* response) { return this->QueryChatRoomInfo(context, request, response); }));}
    void SetMessageAllocatorFor_QueryChatRoomInfo(
        ::grpc::MessageAllocator< ::prpc::QueryChatRoomInfoReq, ::prpc::QueryChatRoomInfoRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::QueryChatRoomInfoReq, ::prpc::QueryChatRoomInfoRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QueryChatRoomInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomInfoReq* /*request*/, ::prpc::QueryChatRoomInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryChatRoomInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::QueryChatRoomInfoReq* /*request*/, ::prpc::QueryChatRoomInfoRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_JoinRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_JoinRoom() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::JoinRoomReq, ::prpc::JoinRoomRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::JoinRoomReq* request, ::prpc::JoinRoomRes* response) { return this->JoinRoom(context, request, response); }));}
    void SetMessageAllocatorFor_JoinRoom(
        ::grpc::MessageAllocator< ::prpc::JoinRoomReq, ::prpc::JoinRoomRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::JoinRoomReq, ::prpc::JoinRoomRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_JoinRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinRoomReq* /*request*/, ::prpc::JoinRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* JoinRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::JoinRoomReq* /*request*/, ::prpc::JoinRoomRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_LeaveRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LeaveRoom() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::LeaveRoomReq, ::prpc::LeaveRoomRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::LeaveRoomReq* request, ::prpc::LeaveRoomRes* response) { return this->LeaveRoom(context, request, response); }));}
    void SetMessageAllocatorFor_LeaveRoom(
        ::grpc::MessageAllocator< ::prpc::LeaveRoomReq, ::prpc::LeaveRoomRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::LeaveRoomReq, ::prpc::LeaveRoomRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LeaveRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LeaveRoom(::grpc::ServerContext* /*context*/, const ::prpc::LeaveRoomReq* /*request*/, ::prpc::LeaveRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LeaveRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::LeaveRoomReq* /*request*/, ::prpc::LeaveRoomRes* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Send2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Send2ChatRoom() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::prpc::Send2ChatRoomReq, ::prpc::Send2ChatRoomRes>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::prpc::Send2ChatRoomReq* request, ::prpc::Send2ChatRoomRes* response) { return this->Send2ChatRoom(context, request, response); }));}
    void SetMessageAllocatorFor_Send2ChatRoom(
        ::grpc::MessageAllocator< ::prpc::Send2ChatRoomReq, ::prpc::Send2ChatRoomRes>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::prpc::Send2ChatRoomReq, ::prpc::Send2ChatRoomRes>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Send2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Send2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::Send2ChatRoomReq* /*request*/, ::prpc::Send2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Send2ChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::prpc::Send2ChatRoomReq* /*request*/, ::prpc::Send2ChatRoomRes* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_QueryChatRoomServer<WithCallbackMethod_CreateChatRoom<WithCallbackMethod_QueryChatRoomInfo<WithCallbackMethod_JoinRoom<WithCallbackMethod_LeaveRoom<WithCallbackMethod_Send2ChatRoom<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_QueryChatRoomServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryChatRoomServer() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_QueryChatRoomServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomServer(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomServerReq* /*request*/, ::prpc::QueryChatRoomServerRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateChatRoom() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::CreateChatRoomReq* /*request*/, ::prpc::CreateChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryChatRoomInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryChatRoomInfo() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_QueryChatRoomInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomInfoReq* /*request*/, ::prpc::QueryChatRoomInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_JoinRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_JoinRoom() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_JoinRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinRoomReq* /*request*/, ::prpc::JoinRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LeaveRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LeaveRoom() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_LeaveRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LeaveRoom(::grpc::ServerContext* /*context*/, const ::prpc::LeaveRoomReq* /*request*/, ::prpc::LeaveRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Send2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Send2ChatRoom() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_Send2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Send2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::Send2ChatRoomReq* /*request*/, ::prpc::Send2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryChatRoomServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryChatRoomServer() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_QueryChatRoomServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomServer(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomServerReq* /*request*/, ::prpc::QueryChatRoomServerRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryChatRoomServer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateChatRoom() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::CreateChatRoomReq* /*request*/, ::prpc::CreateChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateChatRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryChatRoomInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryChatRoomInfo() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_QueryChatRoomInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomInfoReq* /*request*/, ::prpc::QueryChatRoomInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryChatRoomInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_JoinRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_JoinRoom() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_JoinRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinRoomReq* /*request*/, ::prpc::JoinRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestJoinRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LeaveRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LeaveRoom() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_LeaveRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LeaveRoom(::grpc::ServerContext* /*context*/, const ::prpc::LeaveRoomReq* /*request*/, ::prpc::LeaveRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLeaveRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Send2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Send2ChatRoom() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_Send2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Send2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::Send2ChatRoomReq* /*request*/, ::prpc::Send2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSend2ChatRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QueryChatRoomServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QueryChatRoomServer() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryChatRoomServer(context, request, response); }));
    }
    ~WithRawCallbackMethod_QueryChatRoomServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomServer(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomServerReq* /*request*/, ::prpc::QueryChatRoomServerRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryChatRoomServer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateChatRoom() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateChatRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::CreateChatRoomReq* /*request*/, ::prpc::CreateChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QueryChatRoomInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QueryChatRoomInfo() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryChatRoomInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_QueryChatRoomInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryChatRoomInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomInfoReq* /*request*/, ::prpc::QueryChatRoomInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryChatRoomInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_JoinRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_JoinRoom() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->JoinRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_JoinRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JoinRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinRoomReq* /*request*/, ::prpc::JoinRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* JoinRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LeaveRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LeaveRoom() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LeaveRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_LeaveRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LeaveRoom(::grpc::ServerContext* /*context*/, const ::prpc::LeaveRoomReq* /*request*/, ::prpc::LeaveRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LeaveRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Send2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Send2ChatRoom() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Send2ChatRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_Send2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Send2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::Send2ChatRoomReq* /*request*/, ::prpc::Send2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Send2ChatRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryChatRoomServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryChatRoomServer() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::QueryChatRoomServerReq, ::prpc::QueryChatRoomServerRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::QueryChatRoomServerReq, ::prpc::QueryChatRoomServerRes>* streamer) {
                       return this->StreamedQueryChatRoomServer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryChatRoomServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryChatRoomServer(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomServerReq* /*request*/, ::prpc::QueryChatRoomServerRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryChatRoomServer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::QueryChatRoomServerReq,::prpc::QueryChatRoomServerRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateChatRoom() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::CreateChatRoomReq, ::prpc::CreateChatRoomRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::CreateChatRoomReq, ::prpc::CreateChatRoomRes>* streamer) {
                       return this->StreamedCreateChatRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::CreateChatRoomReq* /*request*/, ::prpc::CreateChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateChatRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::CreateChatRoomReq,::prpc::CreateChatRoomRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryChatRoomInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryChatRoomInfo() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::QueryChatRoomInfoReq, ::prpc::QueryChatRoomInfoRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::QueryChatRoomInfoReq, ::prpc::QueryChatRoomInfoRes>* streamer) {
                       return this->StreamedQueryChatRoomInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryChatRoomInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryChatRoomInfo(::grpc::ServerContext* /*context*/, const ::prpc::QueryChatRoomInfoReq* /*request*/, ::prpc::QueryChatRoomInfoRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryChatRoomInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::QueryChatRoomInfoReq,::prpc::QueryChatRoomInfoRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_JoinRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_JoinRoom() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::JoinRoomReq, ::prpc::JoinRoomRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::JoinRoomReq, ::prpc::JoinRoomRes>* streamer) {
                       return this->StreamedJoinRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_JoinRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status JoinRoom(::grpc::ServerContext* /*context*/, const ::prpc::JoinRoomReq* /*request*/, ::prpc::JoinRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedJoinRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::JoinRoomReq,::prpc::JoinRoomRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LeaveRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LeaveRoom() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::LeaveRoomReq, ::prpc::LeaveRoomRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::LeaveRoomReq, ::prpc::LeaveRoomRes>* streamer) {
                       return this->StreamedLeaveRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LeaveRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LeaveRoom(::grpc::ServerContext* /*context*/, const ::prpc::LeaveRoomReq* /*request*/, ::prpc::LeaveRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLeaveRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::LeaveRoomReq,::prpc::LeaveRoomRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Send2ChatRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Send2ChatRoom() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::prpc::Send2ChatRoomReq, ::prpc::Send2ChatRoomRes>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::prpc::Send2ChatRoomReq, ::prpc::Send2ChatRoomRes>* streamer) {
                       return this->StreamedSend2ChatRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Send2ChatRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Send2ChatRoom(::grpc::ServerContext* /*context*/, const ::prpc::Send2ChatRoomReq* /*request*/, ::prpc::Send2ChatRoomRes* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSend2ChatRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::prpc::Send2ChatRoomReq,::prpc::Send2ChatRoomRes>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_QueryChatRoomServer<WithStreamedUnaryMethod_CreateChatRoom<WithStreamedUnaryMethod_QueryChatRoomInfo<WithStreamedUnaryMethod_JoinRoom<WithStreamedUnaryMethod_LeaveRoom<WithStreamedUnaryMethod_Send2ChatRoom<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_QueryChatRoomServer<WithStreamedUnaryMethod_CreateChatRoom<WithStreamedUnaryMethod_QueryChatRoomInfo<WithStreamedUnaryMethod_JoinRoom<WithStreamedUnaryMethod_LeaveRoom<WithStreamedUnaryMethod_Send2ChatRoom<Service > > > > > > StreamedService;
};

}  // namespace prpc


#endif  // GRPC_chat_2eproto__INCLUDED

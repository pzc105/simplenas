// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_user_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_user_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "category.pb.h"
#include "video.pb.h"
#include "bt.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_user_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_user_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_user_2eproto;
namespace prpc {
class AddBtVideosReq;
struct AddBtVideosReqDefaultTypeInternal;
extern AddBtVideosReqDefaultTypeInternal _AddBtVideosReq_default_instance_;
class AddBtVideosRes;
struct AddBtVideosResDefaultTypeInternal;
extern AddBtVideosResDefaultTypeInternal _AddBtVideosRes_default_instance_;
class AddMagnetCategoryReq;
struct AddMagnetCategoryReqDefaultTypeInternal;
extern AddMagnetCategoryReqDefaultTypeInternal _AddMagnetCategoryReq_default_instance_;
class AddMagnetCategoryRsp;
struct AddMagnetCategoryRspDefaultTypeInternal;
extern AddMagnetCategoryRspDefaultTypeInternal _AddMagnetCategoryRsp_default_instance_;
class AddMagnetUriReq;
struct AddMagnetUriReqDefaultTypeInternal;
extern AddMagnetUriReqDefaultTypeInternal _AddMagnetUriReq_default_instance_;
class AddMagnetUriRsp;
struct AddMagnetUriRspDefaultTypeInternal;
extern AddMagnetUriRspDefaultTypeInternal _AddMagnetUriRsp_default_instance_;
class BtFileMetadata;
struct BtFileMetadataDefaultTypeInternal;
extern BtFileMetadataDefaultTypeInternal _BtFileMetadata_default_instance_;
class ChangePasswordReq;
struct ChangePasswordReqDefaultTypeInternal;
extern ChangePasswordReqDefaultTypeInternal _ChangePasswordReq_default_instance_;
class ChangePasswordRsp;
struct ChangePasswordRspDefaultTypeInternal;
extern ChangePasswordRspDefaultTypeInternal _ChangePasswordRsp_default_instance_;
class ChatMessage;
struct ChatMessageDefaultTypeInternal;
extern ChatMessageDefaultTypeInternal _ChatMessage_default_instance_;
class DelCategoryItemReq;
struct DelCategoryItemReqDefaultTypeInternal;
extern DelCategoryItemReqDefaultTypeInternal _DelCategoryItemReq_default_instance_;
class DelCategoryItemRes;
struct DelCategoryItemResDefaultTypeInternal;
extern DelCategoryItemResDefaultTypeInternal _DelCategoryItemRes_default_instance_;
class DelMagnetCategoryReq;
struct DelMagnetCategoryReqDefaultTypeInternal;
extern DelMagnetCategoryReqDefaultTypeInternal _DelMagnetCategoryReq_default_instance_;
class DelMagnetCategoryRsp;
struct DelMagnetCategoryRspDefaultTypeInternal;
extern DelMagnetCategoryRspDefaultTypeInternal _DelMagnetCategoryRsp_default_instance_;
class DelSharedItemReq;
struct DelSharedItemReqDefaultTypeInternal;
extern DelSharedItemReqDefaultTypeInternal _DelSharedItemReq_default_instance_;
class DelSharedItemRes;
struct DelSharedItemResDefaultTypeInternal;
extern DelSharedItemResDefaultTypeInternal _DelSharedItemRes_default_instance_;
class EmailInfo;
struct EmailInfoDefaultTypeInternal;
extern EmailInfoDefaultTypeInternal _EmailInfo_default_instance_;
class GetBtMetaReq;
struct GetBtMetaReqDefaultTypeInternal;
extern GetBtMetaReqDefaultTypeInternal _GetBtMetaReq_default_instance_;
class GetBtMetaRsp;
struct GetBtMetaRspDefaultTypeInternal;
extern GetBtMetaRspDefaultTypeInternal _GetBtMetaRsp_default_instance_;
class GetTorrentsReq;
struct GetTorrentsReqDefaultTypeInternal;
extern GetTorrentsReqDefaultTypeInternal _GetTorrentsReq_default_instance_;
class GetTorrentsRsp;
struct GetTorrentsRspDefaultTypeInternal;
extern GetTorrentsRspDefaultTypeInternal _GetTorrentsRsp_default_instance_;
class IsUsedEmailRet;
struct IsUsedEmailRetDefaultTypeInternal;
extern IsUsedEmailRetDefaultTypeInternal _IsUsedEmailRet_default_instance_;
class JoinChatRoomReq;
struct JoinChatRoomReqDefaultTypeInternal;
extern JoinChatRoomReqDefaultTypeInternal _JoinChatRoomReq_default_instance_;
class JoinChatRoomRes;
struct JoinChatRoomResDefaultTypeInternal;
extern JoinChatRoomResDefaultTypeInternal _JoinChatRoomRes_default_instance_;
class LoginInfo;
struct LoginInfoDefaultTypeInternal;
extern LoginInfoDefaultTypeInternal _LoginInfo_default_instance_;
class LoginRet;
struct LoginRetDefaultTypeInternal;
extern LoginRetDefaultTypeInternal _LoginRet_default_instance_;
class NewBtHlsTaskReq;
struct NewBtHlsTaskReqDefaultTypeInternal;
extern NewBtHlsTaskReqDefaultTypeInternal _NewBtHlsTaskReq_default_instance_;
class NewBtHlsTaskRsp;
struct NewBtHlsTaskRspDefaultTypeInternal;
extern NewBtHlsTaskRspDefaultTypeInternal _NewBtHlsTaskRsp_default_instance_;
class NewCategoryItemReq;
struct NewCategoryItemReqDefaultTypeInternal;
extern NewCategoryItemReqDefaultTypeInternal _NewCategoryItemReq_default_instance_;
class NewCategoryItemRes;
struct NewCategoryItemResDefaultTypeInternal;
extern NewCategoryItemResDefaultTypeInternal _NewCategoryItemRes_default_instance_;
class QueryBtVideosReq;
struct QueryBtVideosReqDefaultTypeInternal;
extern QueryBtVideosReqDefaultTypeInternal _QueryBtVideosReq_default_instance_;
class QueryBtVideosRes;
struct QueryBtVideosResDefaultTypeInternal;
extern QueryBtVideosResDefaultTypeInternal _QueryBtVideosRes_default_instance_;
class QueryItemInfoReq;
struct QueryItemInfoReqDefaultTypeInternal;
extern QueryItemInfoReqDefaultTypeInternal _QueryItemInfoReq_default_instance_;
class QueryItemInfoRes;
struct QueryItemInfoResDefaultTypeInternal;
extern QueryItemInfoResDefaultTypeInternal _QueryItemInfoRes_default_instance_;
class QueryMagnetReq;
struct QueryMagnetReqDefaultTypeInternal;
extern QueryMagnetReqDefaultTypeInternal _QueryMagnetReq_default_instance_;
class QueryMagnetRsp;
struct QueryMagnetRspDefaultTypeInternal;
extern QueryMagnetRspDefaultTypeInternal _QueryMagnetRsp_default_instance_;
class QuerySharedItemsReq;
struct QuerySharedItemsReqDefaultTypeInternal;
extern QuerySharedItemsReqDefaultTypeInternal _QuerySharedItemsReq_default_instance_;
class QuerySharedItemsRes;
struct QuerySharedItemsResDefaultTypeInternal;
extern QuerySharedItemsResDefaultTypeInternal _QuerySharedItemsRes_default_instance_;
class QuerySubItemsReq;
struct QuerySubItemsReqDefaultTypeInternal;
extern QuerySubItemsReqDefaultTypeInternal _QuerySubItemsReq_default_instance_;
class QuerySubItemsRes;
struct QuerySubItemsResDefaultTypeInternal;
extern QuerySubItemsResDefaultTypeInternal _QuerySubItemsRes_default_instance_;
class RegisterInfo;
struct RegisterInfoDefaultTypeInternal;
extern RegisterInfoDefaultTypeInternal _RegisterInfo_default_instance_;
class RegisterRet;
struct RegisterRetDefaultTypeInternal;
extern RegisterRetDefaultTypeInternal _RegisterRet_default_instance_;
class RenameItemsReq;
struct RenameItemsReqDefaultTypeInternal;
extern RenameItemsReqDefaultTypeInternal _RenameItemsReq_default_instance_;
class RenameItemsRsp;
struct RenameItemsRspDefaultTypeInternal;
extern RenameItemsRspDefaultTypeInternal _RenameItemsRsp_default_instance_;
class Room;
struct RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
class SendMsg2ChatRoomReq;
struct SendMsg2ChatRoomReqDefaultTypeInternal;
extern SendMsg2ChatRoomReqDefaultTypeInternal _SendMsg2ChatRoomReq_default_instance_;
class SendMsg2ChatRoomRes;
struct SendMsg2ChatRoomResDefaultTypeInternal;
extern SendMsg2ChatRoomResDefaultTypeInternal _SendMsg2ChatRoomRes_default_instance_;
class ShareItemReq;
struct ShareItemReqDefaultTypeInternal;
extern ShareItemReqDefaultTypeInternal _ShareItemReq_default_instance_;
class ShareItemRes;
struct ShareItemResDefaultTypeInternal;
extern ShareItemResDefaultTypeInternal _ShareItemRes_default_instance_;
class SubtitleFile;
struct SubtitleFileDefaultTypeInternal;
extern SubtitleFileDefaultTypeInternal _SubtitleFile_default_instance_;
class UploadSubtitleReq;
struct UploadSubtitleReqDefaultTypeInternal;
extern UploadSubtitleReqDefaultTypeInternal _UploadSubtitleReq_default_instance_;
class UploadSubtitleRes;
struct UploadSubtitleResDefaultTypeInternal;
extern UploadSubtitleResDefaultTypeInternal _UploadSubtitleRes_default_instance_;
class UserInfo;
struct UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
}  // namespace prpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace prpc {
enum Room_Type : int {
  Room_Type_Unknown = 0,
  Room_Type_Category = 1,
  Room_Type_Danmaku = 2,
  Room_Type_Room_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Room_Type_Room_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Room_Type_IsValid(int value);
constexpr Room_Type Room_Type_Type_MIN = static_cast<Room_Type>(0);
constexpr Room_Type Room_Type_Type_MAX = static_cast<Room_Type>(2);
constexpr int Room_Type_Type_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Room_Type_descriptor();
template <typename T>
const std::string& Room_Type_Name(T value) {
  static_assert(std::is_same<T, Room_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return Room_Type_Name(static_cast<Room_Type>(value));
}
template <>
inline const std::string& Room_Type_Name(Room_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Room_Type_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Room_Type_Parse(absl::string_view name, Room_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Room_Type>(
      Room_Type_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UserInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.UserInfo) */ {
 public:
  inline UserInfo() : UserInfo(nullptr) {}
  ~UserInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserInfo(::google::protobuf::internal::ConstantInitialized);

  UserInfo(const UserInfo& from);
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(UserInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserInfo& from) {
    UserInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.UserInfo";
  }
  protected:
  explicit UserInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kEmailFieldNumber = 3,
    kPasswdFieldNumber = 4,
    kIdFieldNumber = 1,
    kHomeDirectoryIdFieldNumber = 5,
    kMagnetRootIdFieldNumber = 6,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string email = 3;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* ptr);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string passwd = 4;
  void clear_passwd() ;
  const std::string& passwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_passwd(Arg_&& arg, Args_... args);
  std::string* mutable_passwd();
  PROTOBUF_NODISCARD std::string* release_passwd();
  void set_allocated_passwd(std::string* ptr);

  private:
  const std::string& _internal_passwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_passwd(
      const std::string& value);
  std::string* _internal_mutable_passwd();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 home_directory_id = 5;
  void clear_home_directory_id() ;
  ::int64_t home_directory_id() const;
  void set_home_directory_id(::int64_t value);

  private:
  ::int64_t _internal_home_directory_id() const;
  void _internal_set_home_directory_id(::int64_t value);

  public:
  // int64 magnet_root_id = 6;
  void clear_magnet_root_id() ;
  ::int64_t magnet_root_id() const;
  void set_magnet_root_id(::int64_t value);

  private:
  ::int64_t _internal_magnet_root_id() const;
  void _internal_set_magnet_root_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.UserInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 37, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr passwd_;
    ::int64_t id_;
    ::int64_t home_directory_id_;
    ::int64_t magnet_root_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class RegisterInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.RegisterInfo) */ {
 public:
  inline RegisterInfo() : RegisterInfo(nullptr) {}
  ~RegisterInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterInfo(::google::protobuf::internal::ConstantInitialized);

  RegisterInfo(const RegisterInfo& from);
  RegisterInfo(RegisterInfo&& from) noexcept
    : RegisterInfo() {
    *this = ::std::move(from);
  }

  inline RegisterInfo& operator=(const RegisterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterInfo& operator=(RegisterInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterInfo* internal_default_instance() {
    return reinterpret_cast<const RegisterInfo*>(
               &_RegisterInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RegisterInfo& a, RegisterInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterInfo& from) {
    RegisterInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.RegisterInfo";
  }
  protected:
  explicit RegisterInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserInfoFieldNumber = 1,
  };
  // .prpc.UserInfo user_info = 1;
  bool has_user_info() const;
  void clear_user_info() ;
  const ::prpc::UserInfo& user_info() const;
  PROTOBUF_NODISCARD ::prpc::UserInfo* release_user_info();
  ::prpc::UserInfo* mutable_user_info();
  void set_allocated_user_info(::prpc::UserInfo* value);
  void unsafe_arena_set_allocated_user_info(::prpc::UserInfo* value);
  ::prpc::UserInfo* unsafe_arena_release_user_info();

  private:
  const ::prpc::UserInfo& _internal_user_info() const;
  ::prpc::UserInfo* _internal_mutable_user_info();

  public:
  // @@protoc_insertion_point(class_scope:prpc.RegisterInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::UserInfo* user_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class RegisterRet final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.RegisterRet) */ {
 public:
  inline RegisterRet() : RegisterRet(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterRet(::google::protobuf::internal::ConstantInitialized);

  RegisterRet(const RegisterRet& from);
  RegisterRet(RegisterRet&& from) noexcept
    : RegisterRet() {
    *this = ::std::move(from);
  }

  inline RegisterRet& operator=(const RegisterRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterRet& operator=(RegisterRet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterRet& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterRet* internal_default_instance() {
    return reinterpret_cast<const RegisterRet*>(
               &_RegisterRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RegisterRet& a, RegisterRet& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterRet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterRet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterRet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterRet>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RegisterRet& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RegisterRet& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.RegisterRet";
  }
  protected:
  explicit RegisterRet(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.RegisterRet)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class EmailInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.EmailInfo) */ {
 public:
  inline EmailInfo() : EmailInfo(nullptr) {}
  ~EmailInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailInfo(::google::protobuf::internal::ConstantInitialized);

  EmailInfo(const EmailInfo& from);
  EmailInfo(EmailInfo&& from) noexcept
    : EmailInfo() {
    *this = ::std::move(from);
  }

  inline EmailInfo& operator=(const EmailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailInfo& operator=(EmailInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailInfo* internal_default_instance() {
    return reinterpret_cast<const EmailInfo*>(
               &_EmailInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EmailInfo& a, EmailInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailInfo& from) {
    EmailInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmailInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.EmailInfo";
  }
  protected:
  explicit EmailInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
  };
  // string email = 1;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* ptr);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // @@protoc_insertion_point(class_scope:prpc.EmailInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 28, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr email_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class IsUsedEmailRet final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.IsUsedEmailRet) */ {
 public:
  inline IsUsedEmailRet() : IsUsedEmailRet(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IsUsedEmailRet(::google::protobuf::internal::ConstantInitialized);

  IsUsedEmailRet(const IsUsedEmailRet& from);
  IsUsedEmailRet(IsUsedEmailRet&& from) noexcept
    : IsUsedEmailRet() {
    *this = ::std::move(from);
  }

  inline IsUsedEmailRet& operator=(const IsUsedEmailRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline IsUsedEmailRet& operator=(IsUsedEmailRet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IsUsedEmailRet& default_instance() {
    return *internal_default_instance();
  }
  static inline const IsUsedEmailRet* internal_default_instance() {
    return reinterpret_cast<const IsUsedEmailRet*>(
               &_IsUsedEmailRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(IsUsedEmailRet& a, IsUsedEmailRet& b) {
    a.Swap(&b);
  }
  inline void Swap(IsUsedEmailRet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IsUsedEmailRet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IsUsedEmailRet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IsUsedEmailRet>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const IsUsedEmailRet& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const IsUsedEmailRet& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.IsUsedEmailRet";
  }
  protected:
  explicit IsUsedEmailRet(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.IsUsedEmailRet)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class LoginInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.LoginInfo) */ {
 public:
  inline LoginInfo() : LoginInfo(nullptr) {}
  ~LoginInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoginInfo(::google::protobuf::internal::ConstantInitialized);

  LoginInfo(const LoginInfo& from);
  LoginInfo(LoginInfo&& from) noexcept
    : LoginInfo() {
    *this = ::std::move(from);
  }

  inline LoginInfo& operator=(const LoginInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginInfo& operator=(LoginInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginInfo* internal_default_instance() {
    return reinterpret_cast<const LoginInfo*>(
               &_LoginInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(LoginInfo& a, LoginInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoginInfo& from) {
    LoginInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.LoginInfo";
  }
  protected:
  explicit LoginInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
    kPasswdFieldNumber = 2,
    kRememberMeFieldNumber = 3,
  };
  // string email = 1;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* ptr);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string passwd = 2;
  void clear_passwd() ;
  const std::string& passwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_passwd(Arg_&& arg, Args_... args);
  std::string* mutable_passwd();
  PROTOBUF_NODISCARD std::string* release_passwd();
  void set_allocated_passwd(std::string* ptr);

  private:
  const std::string& _internal_passwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_passwd(
      const std::string& value);
  std::string* _internal_mutable_passwd();

  public:
  // bool remember_me = 3;
  void clear_remember_me() ;
  bool remember_me() const;
  void set_remember_me(bool value);

  private:
  bool _internal_remember_me() const;
  void _internal_set_remember_me(bool value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.LoginInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 34, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr passwd_;
    bool remember_me_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class LoginRet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.LoginRet) */ {
 public:
  inline LoginRet() : LoginRet(nullptr) {}
  ~LoginRet() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRet(::google::protobuf::internal::ConstantInitialized);

  LoginRet(const LoginRet& from);
  LoginRet(LoginRet&& from) noexcept
    : LoginRet() {
    *this = ::std::move(from);
  }

  inline LoginRet& operator=(const LoginRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRet& operator=(LoginRet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRet& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginRet* internal_default_instance() {
    return reinterpret_cast<const LoginRet*>(
               &_LoginRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(LoginRet& a, LoginRet& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginRet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginRet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoginRet& from) {
    LoginRet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRet* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.LoginRet";
  }
  protected:
  explicit LoginRet(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
    kUserInfoFieldNumber = 2,
    kRememberMeFieldNumber = 3,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* ptr);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // .prpc.UserInfo user_info = 2;
  bool has_user_info() const;
  void clear_user_info() ;
  const ::prpc::UserInfo& user_info() const;
  PROTOBUF_NODISCARD ::prpc::UserInfo* release_user_info();
  ::prpc::UserInfo* mutable_user_info();
  void set_allocated_user_info(::prpc::UserInfo* value);
  void unsafe_arena_set_allocated_user_info(::prpc::UserInfo* value);
  ::prpc::UserInfo* unsafe_arena_release_user_info();

  private:
  const ::prpc::UserInfo& _internal_user_info() const;
  ::prpc::UserInfo* _internal_mutable_user_info();

  public:
  // bool remember_me = 3;
  void clear_remember_me() ;
  bool remember_me() const;
  void set_remember_me(bool value);

  private:
  bool _internal_remember_me() const;
  void _internal_set_remember_me(bool value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.LoginRet)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 27, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::prpc::UserInfo* user_info_;
    bool remember_me_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class ChangePasswordReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.ChangePasswordReq) */ {
 public:
  inline ChangePasswordReq() : ChangePasswordReq(nullptr) {}
  ~ChangePasswordReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChangePasswordReq(::google::protobuf::internal::ConstantInitialized);

  ChangePasswordReq(const ChangePasswordReq& from);
  ChangePasswordReq(ChangePasswordReq&& from) noexcept
    : ChangePasswordReq() {
    *this = ::std::move(from);
  }

  inline ChangePasswordReq& operator=(const ChangePasswordReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangePasswordReq& operator=(ChangePasswordReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangePasswordReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChangePasswordReq* internal_default_instance() {
    return reinterpret_cast<const ChangePasswordReq*>(
               &_ChangePasswordReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ChangePasswordReq& a, ChangePasswordReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ChangePasswordReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangePasswordReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangePasswordReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChangePasswordReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChangePasswordReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChangePasswordReq& from) {
    ChangePasswordReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangePasswordReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.ChangePasswordReq";
  }
  protected:
  explicit ChangePasswordReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
    kOldPasswdFieldNumber = 2,
    kNewPasswdFieldNumber = 3,
  };
  // string email = 1;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* ptr);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string old_passwd = 2;
  void clear_old_passwd() ;
  const std::string& old_passwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_old_passwd(Arg_&& arg, Args_... args);
  std::string* mutable_old_passwd();
  PROTOBUF_NODISCARD std::string* release_old_passwd();
  void set_allocated_old_passwd(std::string* ptr);

  private:
  const std::string& _internal_old_passwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_old_passwd(
      const std::string& value);
  std::string* _internal_mutable_old_passwd();

  public:
  // string new_passwd = 3;
  void clear_new_passwd() ;
  const std::string& new_passwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_passwd(Arg_&& arg, Args_... args);
  std::string* mutable_new_passwd();
  PROTOBUF_NODISCARD std::string* release_new_passwd();
  void set_allocated_new_passwd(std::string* ptr);

  private:
  const std::string& _internal_new_passwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_passwd(
      const std::string& value);
  std::string* _internal_mutable_new_passwd();

  public:
  // @@protoc_insertion_point(class_scope:prpc.ChangePasswordReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr old_passwd_;
    ::google::protobuf::internal::ArenaStringPtr new_passwd_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class ChangePasswordRsp final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.ChangePasswordRsp) */ {
 public:
  inline ChangePasswordRsp() : ChangePasswordRsp(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChangePasswordRsp(::google::protobuf::internal::ConstantInitialized);

  ChangePasswordRsp(const ChangePasswordRsp& from);
  ChangePasswordRsp(ChangePasswordRsp&& from) noexcept
    : ChangePasswordRsp() {
    *this = ::std::move(from);
  }

  inline ChangePasswordRsp& operator=(const ChangePasswordRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangePasswordRsp& operator=(ChangePasswordRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangePasswordRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChangePasswordRsp* internal_default_instance() {
    return reinterpret_cast<const ChangePasswordRsp*>(
               &_ChangePasswordRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ChangePasswordRsp& a, ChangePasswordRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(ChangePasswordRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangePasswordRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangePasswordRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChangePasswordRsp>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ChangePasswordRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ChangePasswordRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.ChangePasswordRsp";
  }
  protected:
  explicit ChangePasswordRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.ChangePasswordRsp)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class NewCategoryItemReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.NewCategoryItemReq) */ {
 public:
  inline NewCategoryItemReq() : NewCategoryItemReq(nullptr) {}
  ~NewCategoryItemReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NewCategoryItemReq(::google::protobuf::internal::ConstantInitialized);

  NewCategoryItemReq(const NewCategoryItemReq& from);
  NewCategoryItemReq(NewCategoryItemReq&& from) noexcept
    : NewCategoryItemReq() {
    *this = ::std::move(from);
  }

  inline NewCategoryItemReq& operator=(const NewCategoryItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewCategoryItemReq& operator=(NewCategoryItemReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewCategoryItemReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewCategoryItemReq* internal_default_instance() {
    return reinterpret_cast<const NewCategoryItemReq*>(
               &_NewCategoryItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(NewCategoryItemReq& a, NewCategoryItemReq& b) {
    a.Swap(&b);
  }
  inline void Swap(NewCategoryItemReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewCategoryItemReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewCategoryItemReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NewCategoryItemReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewCategoryItemReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NewCategoryItemReq& from) {
    NewCategoryItemReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewCategoryItemReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.NewCategoryItemReq";
  }
  protected:
  explicit NewCategoryItemReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kResourcePathFieldNumber = 3,
    kIntroduceFieldNumber = 4,
    kParentIdFieldNumber = 5,
    kTypeIdFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string resource_path = 3;
  void clear_resource_path() ;
  const std::string& resource_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_path(Arg_&& arg, Args_... args);
  std::string* mutable_resource_path();
  PROTOBUF_NODISCARD std::string* release_resource_path();
  void set_allocated_resource_path(std::string* ptr);

  private:
  const std::string& _internal_resource_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_path(
      const std::string& value);
  std::string* _internal_mutable_resource_path();

  public:
  // string introduce = 4;
  void clear_introduce() ;
  const std::string& introduce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_introduce(Arg_&& arg, Args_... args);
  std::string* mutable_introduce();
  PROTOBUF_NODISCARD std::string* release_introduce();
  void set_allocated_introduce(std::string* ptr);

  private:
  const std::string& _internal_introduce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_introduce(
      const std::string& value);
  std::string* _internal_mutable_introduce();

  public:
  // int64 parent_id = 5;
  void clear_parent_id() ;
  ::int64_t parent_id() const;
  void set_parent_id(::int64_t value);

  private:
  ::int64_t _internal_parent_id() const;
  void _internal_set_parent_id(::int64_t value);

  public:
  // .prpc.CategoryItem.Type type_id = 2;
  void clear_type_id() ;
  ::prpc::CategoryItem_Type type_id() const;
  void set_type_id(::prpc::CategoryItem_Type value);

  private:
  ::prpc::CategoryItem_Type _internal_type_id() const;
  void _internal_set_type_id(::prpc::CategoryItem_Type value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.NewCategoryItemReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 58, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr resource_path_;
    ::google::protobuf::internal::ArenaStringPtr introduce_;
    ::int64_t parent_id_;
    int type_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class NewCategoryItemRes final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.NewCategoryItemRes) */ {
 public:
  inline NewCategoryItemRes() : NewCategoryItemRes(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NewCategoryItemRes(::google::protobuf::internal::ConstantInitialized);

  NewCategoryItemRes(const NewCategoryItemRes& from);
  NewCategoryItemRes(NewCategoryItemRes&& from) noexcept
    : NewCategoryItemRes() {
    *this = ::std::move(from);
  }

  inline NewCategoryItemRes& operator=(const NewCategoryItemRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewCategoryItemRes& operator=(NewCategoryItemRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewCategoryItemRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewCategoryItemRes* internal_default_instance() {
    return reinterpret_cast<const NewCategoryItemRes*>(
               &_NewCategoryItemRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(NewCategoryItemRes& a, NewCategoryItemRes& b) {
    a.Swap(&b);
  }
  inline void Swap(NewCategoryItemRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewCategoryItemRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewCategoryItemRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NewCategoryItemRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NewCategoryItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NewCategoryItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.NewCategoryItemRes";
  }
  protected:
  explicit NewCategoryItemRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.NewCategoryItemRes)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class DelCategoryItemReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.DelCategoryItemReq) */ {
 public:
  inline DelCategoryItemReq() : DelCategoryItemReq(nullptr) {}
  ~DelCategoryItemReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DelCategoryItemReq(::google::protobuf::internal::ConstantInitialized);

  DelCategoryItemReq(const DelCategoryItemReq& from);
  DelCategoryItemReq(DelCategoryItemReq&& from) noexcept
    : DelCategoryItemReq() {
    *this = ::std::move(from);
  }

  inline DelCategoryItemReq& operator=(const DelCategoryItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelCategoryItemReq& operator=(DelCategoryItemReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelCategoryItemReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelCategoryItemReq* internal_default_instance() {
    return reinterpret_cast<const DelCategoryItemReq*>(
               &_DelCategoryItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DelCategoryItemReq& a, DelCategoryItemReq& b) {
    a.Swap(&b);
  }
  inline void Swap(DelCategoryItemReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelCategoryItemReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelCategoryItemReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelCategoryItemReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DelCategoryItemReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DelCategoryItemReq& from) {
    DelCategoryItemReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelCategoryItemReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.DelCategoryItemReq";
  }
  protected:
  explicit DelCategoryItemReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // int64 item_id = 1;
  void clear_item_id() ;
  ::int64_t item_id() const;
  void set_item_id(::int64_t value);

  private:
  ::int64_t _internal_item_id() const;
  void _internal_set_item_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.DelCategoryItemReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t item_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class DelCategoryItemRes final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.DelCategoryItemRes) */ {
 public:
  inline DelCategoryItemRes() : DelCategoryItemRes(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DelCategoryItemRes(::google::protobuf::internal::ConstantInitialized);

  DelCategoryItemRes(const DelCategoryItemRes& from);
  DelCategoryItemRes(DelCategoryItemRes&& from) noexcept
    : DelCategoryItemRes() {
    *this = ::std::move(from);
  }

  inline DelCategoryItemRes& operator=(const DelCategoryItemRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelCategoryItemRes& operator=(DelCategoryItemRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelCategoryItemRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelCategoryItemRes* internal_default_instance() {
    return reinterpret_cast<const DelCategoryItemRes*>(
               &_DelCategoryItemRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DelCategoryItemRes& a, DelCategoryItemRes& b) {
    a.Swap(&b);
  }
  inline void Swap(DelCategoryItemRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelCategoryItemRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelCategoryItemRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelCategoryItemRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DelCategoryItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DelCategoryItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.DelCategoryItemRes";
  }
  protected:
  explicit DelCategoryItemRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.DelCategoryItemRes)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QuerySubItemsReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QuerySubItemsReq) */ {
 public:
  inline QuerySubItemsReq() : QuerySubItemsReq(nullptr) {}
  ~QuerySubItemsReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySubItemsReq(::google::protobuf::internal::ConstantInitialized);

  QuerySubItemsReq(const QuerySubItemsReq& from);
  QuerySubItemsReq(QuerySubItemsReq&& from) noexcept
    : QuerySubItemsReq() {
    *this = ::std::move(from);
  }

  inline QuerySubItemsReq& operator=(const QuerySubItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySubItemsReq& operator=(QuerySubItemsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySubItemsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySubItemsReq* internal_default_instance() {
    return reinterpret_cast<const QuerySubItemsReq*>(
               &_QuerySubItemsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(QuerySubItemsReq& a, QuerySubItemsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(QuerySubItemsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySubItemsReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySubItemsReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuerySubItemsReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuerySubItemsReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QuerySubItemsReq& from) {
    QuerySubItemsReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuerySubItemsReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QuerySubItemsReq";
  }
  protected:
  explicit QuerySubItemsReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShareIdFieldNumber = 2,
    kParentIdFieldNumber = 1,
    kPageNumFieldNumber = 3,
    kRowsFieldNumber = 4,
  };
  // string share_id = 2;
  void clear_share_id() ;
  const std::string& share_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_share_id(Arg_&& arg, Args_... args);
  std::string* mutable_share_id();
  PROTOBUF_NODISCARD std::string* release_share_id();
  void set_allocated_share_id(std::string* ptr);

  private:
  const std::string& _internal_share_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_share_id(
      const std::string& value);
  std::string* _internal_mutable_share_id();

  public:
  // int64 parent_id = 1;
  void clear_parent_id() ;
  ::int64_t parent_id() const;
  void set_parent_id(::int64_t value);

  private:
  ::int64_t _internal_parent_id() const;
  void _internal_set_parent_id(::int64_t value);

  public:
  // int32 page_num = 3;
  void clear_page_num() ;
  ::int32_t page_num() const;
  void set_page_num(::int32_t value);

  private:
  ::int32_t _internal_page_num() const;
  void _internal_set_page_num(::int32_t value);

  public:
  // int32 rows = 4;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.QuerySubItemsReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 38, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr share_id_;
    ::int64_t parent_id_;
    ::int32_t page_num_;
    ::int32_t rows_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QuerySubItemsRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QuerySubItemsRes) */ {
 public:
  inline QuerySubItemsRes() : QuerySubItemsRes(nullptr) {}
  ~QuerySubItemsRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySubItemsRes(::google::protobuf::internal::ConstantInitialized);

  QuerySubItemsRes(const QuerySubItemsRes& from);
  QuerySubItemsRes(QuerySubItemsRes&& from) noexcept
    : QuerySubItemsRes() {
    *this = ::std::move(from);
  }

  inline QuerySubItemsRes& operator=(const QuerySubItemsRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySubItemsRes& operator=(QuerySubItemsRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySubItemsRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySubItemsRes* internal_default_instance() {
    return reinterpret_cast<const QuerySubItemsRes*>(
               &_QuerySubItemsRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(QuerySubItemsRes& a, QuerySubItemsRes& b) {
    a.Swap(&b);
  }
  inline void Swap(QuerySubItemsRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySubItemsRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySubItemsRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuerySubItemsRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuerySubItemsRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QuerySubItemsRes& from) {
    QuerySubItemsRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuerySubItemsRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QuerySubItemsRes";
  }
  protected:
  explicit QuerySubItemsRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 2,
    kParentItemFieldNumber = 1,
    kTotalRowCountFieldNumber = 3,
  };
  // repeated .prpc.CategoryItem items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::prpc::CategoryItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>* _internal_mutable_items();
  public:
  const ::prpc::CategoryItem& items(int index) const;
  ::prpc::CategoryItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >&
      items() const;
  // .prpc.CategoryItem parent_item = 1;
  bool has_parent_item() const;
  void clear_parent_item() ;
  const ::prpc::CategoryItem& parent_item() const;
  PROTOBUF_NODISCARD ::prpc::CategoryItem* release_parent_item();
  ::prpc::CategoryItem* mutable_parent_item();
  void set_allocated_parent_item(::prpc::CategoryItem* value);
  void unsafe_arena_set_allocated_parent_item(::prpc::CategoryItem* value);
  ::prpc::CategoryItem* unsafe_arena_release_parent_item();

  private:
  const ::prpc::CategoryItem& _internal_parent_item() const;
  ::prpc::CategoryItem* _internal_mutable_parent_item();

  public:
  // int32 total_row_count = 3;
  void clear_total_row_count() ;
  ::int32_t total_row_count() const;
  void set_total_row_count(::int32_t value);

  private:
  ::int32_t _internal_total_row_count() const;
  void _internal_set_total_row_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.QuerySubItemsRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem > items_;
    ::prpc::CategoryItem* parent_item_;
    ::int32_t total_row_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QueryBtVideosReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QueryBtVideosReq) */ {
 public:
  inline QueryBtVideosReq() : QueryBtVideosReq(nullptr) {}
  ~QueryBtVideosReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryBtVideosReq(::google::protobuf::internal::ConstantInitialized);

  QueryBtVideosReq(const QueryBtVideosReq& from);
  QueryBtVideosReq(QueryBtVideosReq&& from) noexcept
    : QueryBtVideosReq() {
    *this = ::std::move(from);
  }

  inline QueryBtVideosReq& operator=(const QueryBtVideosReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryBtVideosReq& operator=(QueryBtVideosReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryBtVideosReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryBtVideosReq* internal_default_instance() {
    return reinterpret_cast<const QueryBtVideosReq*>(
               &_QueryBtVideosReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(QueryBtVideosReq& a, QueryBtVideosReq& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryBtVideosReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryBtVideosReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryBtVideosReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryBtVideosReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryBtVideosReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryBtVideosReq& from) {
    QueryBtVideosReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryBtVideosReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QueryBtVideosReq";
  }
  protected:
  explicit QueryBtVideosReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoHashFieldNumber = 1,
  };
  // .prpc.InfoHash info_hash = 1;
  bool has_info_hash() const;
  void clear_info_hash() ;
  const ::prpc::InfoHash& info_hash() const;
  PROTOBUF_NODISCARD ::prpc::InfoHash* release_info_hash();
  ::prpc::InfoHash* mutable_info_hash();
  void set_allocated_info_hash(::prpc::InfoHash* value);
  void unsafe_arena_set_allocated_info_hash(::prpc::InfoHash* value);
  ::prpc::InfoHash* unsafe_arena_release_info_hash();

  private:
  const ::prpc::InfoHash& _internal_info_hash() const;
  ::prpc::InfoHash* _internal_mutable_info_hash();

  public:
  // @@protoc_insertion_point(class_scope:prpc.QueryBtVideosReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::InfoHash* info_hash_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class BtFileMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.BtFileMetadata) */ {
 public:
  inline BtFileMetadata() : BtFileMetadata(nullptr) {}
  ~BtFileMetadata() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BtFileMetadata(::google::protobuf::internal::ConstantInitialized);

  BtFileMetadata(const BtFileMetadata& from);
  BtFileMetadata(BtFileMetadata&& from) noexcept
    : BtFileMetadata() {
    *this = ::std::move(from);
  }

  inline BtFileMetadata& operator=(const BtFileMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline BtFileMetadata& operator=(BtFileMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BtFileMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const BtFileMetadata* internal_default_instance() {
    return reinterpret_cast<const BtFileMetadata*>(
               &_BtFileMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(BtFileMetadata& a, BtFileMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(BtFileMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BtFileMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BtFileMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BtFileMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BtFileMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BtFileMetadata& from) {
    BtFileMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BtFileMetadata* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.BtFileMetadata";
  }
  protected:
  explicit BtFileMetadata(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetaFieldNumber = 2,
    kFileIndexFieldNumber = 1,
  };
  // .prpc.VideoMetadata meta = 2;
  bool has_meta() const;
  void clear_meta() ;
  const ::prpc::VideoMetadata& meta() const;
  PROTOBUF_NODISCARD ::prpc::VideoMetadata* release_meta();
  ::prpc::VideoMetadata* mutable_meta();
  void set_allocated_meta(::prpc::VideoMetadata* value);
  void unsafe_arena_set_allocated_meta(::prpc::VideoMetadata* value);
  ::prpc::VideoMetadata* unsafe_arena_release_meta();

  private:
  const ::prpc::VideoMetadata& _internal_meta() const;
  ::prpc::VideoMetadata* _internal_mutable_meta();

  public:
  // int32 file_index = 1;
  void clear_file_index() ;
  ::int32_t file_index() const;
  void set_file_index(::int32_t value);

  private:
  ::int32_t _internal_file_index() const;
  void _internal_set_file_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.BtFileMetadata)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::VideoMetadata* meta_;
    ::int32_t file_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QueryBtVideosRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QueryBtVideosRes) */ {
 public:
  inline QueryBtVideosRes() : QueryBtVideosRes(nullptr) {}
  ~QueryBtVideosRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryBtVideosRes(::google::protobuf::internal::ConstantInitialized);

  QueryBtVideosRes(const QueryBtVideosRes& from);
  QueryBtVideosRes(QueryBtVideosRes&& from) noexcept
    : QueryBtVideosRes() {
    *this = ::std::move(from);
  }

  inline QueryBtVideosRes& operator=(const QueryBtVideosRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryBtVideosRes& operator=(QueryBtVideosRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryBtVideosRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryBtVideosRes* internal_default_instance() {
    return reinterpret_cast<const QueryBtVideosRes*>(
               &_QueryBtVideosRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(QueryBtVideosRes& a, QueryBtVideosRes& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryBtVideosRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryBtVideosRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryBtVideosRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryBtVideosRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryBtVideosRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryBtVideosRes& from) {
    QueryBtVideosRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryBtVideosRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QueryBtVideosRes";
  }
  protected:
  explicit QueryBtVideosRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .prpc.BtFileMetadata data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::prpc::BtFileMetadata* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::prpc::BtFileMetadata >*
      mutable_data();
  private:
  const ::google::protobuf::RepeatedPtrField<::prpc::BtFileMetadata>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::prpc::BtFileMetadata>* _internal_mutable_data();
  public:
  const ::prpc::BtFileMetadata& data(int index) const;
  ::prpc::BtFileMetadata* add_data();
  const ::google::protobuf::RepeatedPtrField< ::prpc::BtFileMetadata >&
      data() const;
  // @@protoc_insertion_point(class_scope:prpc.QueryBtVideosRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::prpc::BtFileMetadata > data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class AddBtVideosReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.AddBtVideosReq) */ {
 public:
  inline AddBtVideosReq() : AddBtVideosReq(nullptr) {}
  ~AddBtVideosReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddBtVideosReq(::google::protobuf::internal::ConstantInitialized);

  AddBtVideosReq(const AddBtVideosReq& from);
  AddBtVideosReq(AddBtVideosReq&& from) noexcept
    : AddBtVideosReq() {
    *this = ::std::move(from);
  }

  inline AddBtVideosReq& operator=(const AddBtVideosReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddBtVideosReq& operator=(AddBtVideosReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddBtVideosReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddBtVideosReq* internal_default_instance() {
    return reinterpret_cast<const AddBtVideosReq*>(
               &_AddBtVideosReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(AddBtVideosReq& a, AddBtVideosReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddBtVideosReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddBtVideosReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddBtVideosReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddBtVideosReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddBtVideosReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddBtVideosReq& from) {
    AddBtVideosReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddBtVideosReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.AddBtVideosReq";
  }
  protected:
  explicit AddBtVideosReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileIndexesFieldNumber = 2,
    kInfoHashFieldNumber = 1,
    kCategoryItemIdFieldNumber = 3,
  };
  // repeated int32 file_indexes = 2;
  int file_indexes_size() const;
  private:
  int _internal_file_indexes_size() const;

  public:
  void clear_file_indexes() ;
  ::int32_t file_indexes(int index) const;
  void set_file_indexes(int index, ::int32_t value);
  void add_file_indexes(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& file_indexes() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_file_indexes();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_file_indexes() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_file_indexes();

  public:
  // .prpc.InfoHash info_hash = 1;
  bool has_info_hash() const;
  void clear_info_hash() ;
  const ::prpc::InfoHash& info_hash() const;
  PROTOBUF_NODISCARD ::prpc::InfoHash* release_info_hash();
  ::prpc::InfoHash* mutable_info_hash();
  void set_allocated_info_hash(::prpc::InfoHash* value);
  void unsafe_arena_set_allocated_info_hash(::prpc::InfoHash* value);
  ::prpc::InfoHash* unsafe_arena_release_info_hash();

  private:
  const ::prpc::InfoHash& _internal_info_hash() const;
  ::prpc::InfoHash* _internal_mutable_info_hash();

  public:
  // int64 category_item_id = 3;
  void clear_category_item_id() ;
  ::int64_t category_item_id() const;
  void set_category_item_id(::int64_t value);

  private:
  ::int64_t _internal_category_item_id() const;
  void _internal_set_category_item_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.AddBtVideosReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> file_indexes_;
    mutable ::google::protobuf::internal::CachedSize _file_indexes_cached_byte_size_;
    ::prpc::InfoHash* info_hash_;
    ::int64_t category_item_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class AddBtVideosRes final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.AddBtVideosRes) */ {
 public:
  inline AddBtVideosRes() : AddBtVideosRes(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddBtVideosRes(::google::protobuf::internal::ConstantInitialized);

  AddBtVideosRes(const AddBtVideosRes& from);
  AddBtVideosRes(AddBtVideosRes&& from) noexcept
    : AddBtVideosRes() {
    *this = ::std::move(from);
  }

  inline AddBtVideosRes& operator=(const AddBtVideosRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddBtVideosRes& operator=(AddBtVideosRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddBtVideosRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddBtVideosRes* internal_default_instance() {
    return reinterpret_cast<const AddBtVideosRes*>(
               &_AddBtVideosRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(AddBtVideosRes& a, AddBtVideosRes& b) {
    a.Swap(&b);
  }
  inline void Swap(AddBtVideosRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddBtVideosRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddBtVideosRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddBtVideosRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddBtVideosRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddBtVideosRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.AddBtVideosRes";
  }
  protected:
  explicit AddBtVideosRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.AddBtVideosRes)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QueryItemInfoReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QueryItemInfoReq) */ {
 public:
  inline QueryItemInfoReq() : QueryItemInfoReq(nullptr) {}
  ~QueryItemInfoReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryItemInfoReq(::google::protobuf::internal::ConstantInitialized);

  QueryItemInfoReq(const QueryItemInfoReq& from);
  QueryItemInfoReq(QueryItemInfoReq&& from) noexcept
    : QueryItemInfoReq() {
    *this = ::std::move(from);
  }

  inline QueryItemInfoReq& operator=(const QueryItemInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryItemInfoReq& operator=(QueryItemInfoReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryItemInfoReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryItemInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryItemInfoReq*>(
               &_QueryItemInfoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(QueryItemInfoReq& a, QueryItemInfoReq& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryItemInfoReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryItemInfoReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryItemInfoReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryItemInfoReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryItemInfoReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryItemInfoReq& from) {
    QueryItemInfoReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryItemInfoReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QueryItemInfoReq";
  }
  protected:
  explicit QueryItemInfoReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShareIdFieldNumber = 2,
    kItemIdFieldNumber = 1,
  };
  // string share_id = 2;
  void clear_share_id() ;
  const std::string& share_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_share_id(Arg_&& arg, Args_... args);
  std::string* mutable_share_id();
  PROTOBUF_NODISCARD std::string* release_share_id();
  void set_allocated_share_id(std::string* ptr);

  private:
  const std::string& _internal_share_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_share_id(
      const std::string& value);
  std::string* _internal_mutable_share_id();

  public:
  // int64 item_id = 1;
  void clear_item_id() ;
  ::int64_t item_id() const;
  void set_item_id(::int64_t value);

  private:
  ::int64_t _internal_item_id() const;
  void _internal_set_item_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.QueryItemInfoReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 38, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr share_id_;
    ::int64_t item_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QueryItemInfoRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QueryItemInfoRes) */ {
 public:
  inline QueryItemInfoRes() : QueryItemInfoRes(nullptr) {}
  ~QueryItemInfoRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryItemInfoRes(::google::protobuf::internal::ConstantInitialized);

  QueryItemInfoRes(const QueryItemInfoRes& from);
  QueryItemInfoRes(QueryItemInfoRes&& from) noexcept
    : QueryItemInfoRes() {
    *this = ::std::move(from);
  }

  inline QueryItemInfoRes& operator=(const QueryItemInfoRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryItemInfoRes& operator=(QueryItemInfoRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryItemInfoRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryItemInfoRes* internal_default_instance() {
    return reinterpret_cast<const QueryItemInfoRes*>(
               &_QueryItemInfoRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(QueryItemInfoRes& a, QueryItemInfoRes& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryItemInfoRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryItemInfoRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryItemInfoRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryItemInfoRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryItemInfoRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryItemInfoRes& from) {
    QueryItemInfoRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryItemInfoRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QueryItemInfoRes";
  }
  protected:
  explicit QueryItemInfoRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemInfoFieldNumber = 1,
    kVideoInfoFieldNumber = 2,
  };
  // .prpc.CategoryItem item_info = 1;
  bool has_item_info() const;
  void clear_item_info() ;
  const ::prpc::CategoryItem& item_info() const;
  PROTOBUF_NODISCARD ::prpc::CategoryItem* release_item_info();
  ::prpc::CategoryItem* mutable_item_info();
  void set_allocated_item_info(::prpc::CategoryItem* value);
  void unsafe_arena_set_allocated_item_info(::prpc::CategoryItem* value);
  ::prpc::CategoryItem* unsafe_arena_release_item_info();

  private:
  const ::prpc::CategoryItem& _internal_item_info() const;
  ::prpc::CategoryItem* _internal_mutable_item_info();

  public:
  // .prpc.Video video_info = 2;
  bool has_video_info() const;
  void clear_video_info() ;
  const ::prpc::Video& video_info() const;
  PROTOBUF_NODISCARD ::prpc::Video* release_video_info();
  ::prpc::Video* mutable_video_info();
  void set_allocated_video_info(::prpc::Video* value);
  void unsafe_arena_set_allocated_video_info(::prpc::Video* value);
  ::prpc::Video* unsafe_arena_release_video_info();

  private:
  const ::prpc::Video& _internal_video_info() const;
  ::prpc::Video* _internal_mutable_video_info();

  public:
  // @@protoc_insertion_point(class_scope:prpc.QueryItemInfoRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::CategoryItem* item_info_;
    ::prpc::Video* video_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class ShareItemReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.ShareItemReq) */ {
 public:
  inline ShareItemReq() : ShareItemReq(nullptr) {}
  ~ShareItemReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShareItemReq(::google::protobuf::internal::ConstantInitialized);

  ShareItemReq(const ShareItemReq& from);
  ShareItemReq(ShareItemReq&& from) noexcept
    : ShareItemReq() {
    *this = ::std::move(from);
  }

  inline ShareItemReq& operator=(const ShareItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShareItemReq& operator=(ShareItemReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShareItemReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShareItemReq* internal_default_instance() {
    return reinterpret_cast<const ShareItemReq*>(
               &_ShareItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ShareItemReq& a, ShareItemReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ShareItemReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShareItemReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShareItemReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShareItemReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShareItemReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ShareItemReq& from) {
    ShareItemReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShareItemReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.ShareItemReq";
  }
  protected:
  explicit ShareItemReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
  };
  // int64 item_id = 1;
  void clear_item_id() ;
  ::int64_t item_id() const;
  void set_item_id(::int64_t value);

  private:
  ::int64_t _internal_item_id() const;
  void _internal_set_item_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.ShareItemReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t item_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class ShareItemRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.ShareItemRes) */ {
 public:
  inline ShareItemRes() : ShareItemRes(nullptr) {}
  ~ShareItemRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShareItemRes(::google::protobuf::internal::ConstantInitialized);

  ShareItemRes(const ShareItemRes& from);
  ShareItemRes(ShareItemRes&& from) noexcept
    : ShareItemRes() {
    *this = ::std::move(from);
  }

  inline ShareItemRes& operator=(const ShareItemRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShareItemRes& operator=(ShareItemRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShareItemRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShareItemRes* internal_default_instance() {
    return reinterpret_cast<const ShareItemRes*>(
               &_ShareItemRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ShareItemRes& a, ShareItemRes& b) {
    a.Swap(&b);
  }
  inline void Swap(ShareItemRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShareItemRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShareItemRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShareItemRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShareItemRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ShareItemRes& from) {
    ShareItemRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShareItemRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.ShareItemRes";
  }
  protected:
  explicit ShareItemRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShareIdFieldNumber = 2,
    kItemIdFieldNumber = 1,
  };
  // string share_id = 2;
  void clear_share_id() ;
  const std::string& share_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_share_id(Arg_&& arg, Args_... args);
  std::string* mutable_share_id();
  PROTOBUF_NODISCARD std::string* release_share_id();
  void set_allocated_share_id(std::string* ptr);

  private:
  const std::string& _internal_share_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_share_id(
      const std::string& value);
  std::string* _internal_mutable_share_id();

  public:
  // int64 item_id = 1;
  void clear_item_id() ;
  ::int64_t item_id() const;
  void set_item_id(::int64_t value);

  private:
  ::int64_t _internal_item_id() const;
  void _internal_set_item_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.ShareItemRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 34, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr share_id_;
    ::int64_t item_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QuerySharedItemsReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QuerySharedItemsReq) */ {
 public:
  inline QuerySharedItemsReq() : QuerySharedItemsReq(nullptr) {}
  ~QuerySharedItemsReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySharedItemsReq(::google::protobuf::internal::ConstantInitialized);

  QuerySharedItemsReq(const QuerySharedItemsReq& from);
  QuerySharedItemsReq(QuerySharedItemsReq&& from) noexcept
    : QuerySharedItemsReq() {
    *this = ::std::move(from);
  }

  inline QuerySharedItemsReq& operator=(const QuerySharedItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySharedItemsReq& operator=(QuerySharedItemsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySharedItemsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySharedItemsReq* internal_default_instance() {
    return reinterpret_cast<const QuerySharedItemsReq*>(
               &_QuerySharedItemsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(QuerySharedItemsReq& a, QuerySharedItemsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(QuerySharedItemsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySharedItemsReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySharedItemsReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuerySharedItemsReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuerySharedItemsReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QuerySharedItemsReq& from) {
    QuerySharedItemsReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuerySharedItemsReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QuerySharedItemsReq";
  }
  protected:
  explicit QuerySharedItemsReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
  };
  // int64 user_id = 1;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.QuerySharedItemsReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t user_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QuerySharedItemsRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QuerySharedItemsRes) */ {
 public:
  inline QuerySharedItemsRes() : QuerySharedItemsRes(nullptr) {}
  ~QuerySharedItemsRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySharedItemsRes(::google::protobuf::internal::ConstantInitialized);

  QuerySharedItemsRes(const QuerySharedItemsRes& from);
  QuerySharedItemsRes(QuerySharedItemsRes&& from) noexcept
    : QuerySharedItemsRes() {
    *this = ::std::move(from);
  }

  inline QuerySharedItemsRes& operator=(const QuerySharedItemsRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySharedItemsRes& operator=(QuerySharedItemsRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySharedItemsRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySharedItemsRes* internal_default_instance() {
    return reinterpret_cast<const QuerySharedItemsRes*>(
               &_QuerySharedItemsRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(QuerySharedItemsRes& a, QuerySharedItemsRes& b) {
    a.Swap(&b);
  }
  inline void Swap(QuerySharedItemsRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySharedItemsRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySharedItemsRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuerySharedItemsRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuerySharedItemsRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QuerySharedItemsRes& from) {
    QuerySharedItemsRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuerySharedItemsRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QuerySharedItemsRes";
  }
  protected:
  explicit QuerySharedItemsRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSharedItemsFieldNumber = 1,
  };
  // repeated .prpc.SharedItem shared_items = 1;
  int shared_items_size() const;
  private:
  int _internal_shared_items_size() const;

  public:
  void clear_shared_items() ;
  ::prpc::SharedItem* mutable_shared_items(int index);
  ::google::protobuf::RepeatedPtrField< ::prpc::SharedItem >*
      mutable_shared_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::prpc::SharedItem>& _internal_shared_items() const;
  ::google::protobuf::RepeatedPtrField<::prpc::SharedItem>* _internal_mutable_shared_items();
  public:
  const ::prpc::SharedItem& shared_items(int index) const;
  ::prpc::SharedItem* add_shared_items();
  const ::google::protobuf::RepeatedPtrField< ::prpc::SharedItem >&
      shared_items() const;
  // @@protoc_insertion_point(class_scope:prpc.QuerySharedItemsRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::prpc::SharedItem > shared_items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class DelSharedItemReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.DelSharedItemReq) */ {
 public:
  inline DelSharedItemReq() : DelSharedItemReq(nullptr) {}
  ~DelSharedItemReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DelSharedItemReq(::google::protobuf::internal::ConstantInitialized);

  DelSharedItemReq(const DelSharedItemReq& from);
  DelSharedItemReq(DelSharedItemReq&& from) noexcept
    : DelSharedItemReq() {
    *this = ::std::move(from);
  }

  inline DelSharedItemReq& operator=(const DelSharedItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelSharedItemReq& operator=(DelSharedItemReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelSharedItemReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelSharedItemReq* internal_default_instance() {
    return reinterpret_cast<const DelSharedItemReq*>(
               &_DelSharedItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(DelSharedItemReq& a, DelSharedItemReq& b) {
    a.Swap(&b);
  }
  inline void Swap(DelSharedItemReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelSharedItemReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelSharedItemReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelSharedItemReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DelSharedItemReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DelSharedItemReq& from) {
    DelSharedItemReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelSharedItemReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.DelSharedItemReq";
  }
  protected:
  explicit DelSharedItemReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShareIdFieldNumber = 1,
  };
  // string share_id = 1;
  void clear_share_id() ;
  const std::string& share_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_share_id(Arg_&& arg, Args_... args);
  std::string* mutable_share_id();
  PROTOBUF_NODISCARD std::string* release_share_id();
  void set_allocated_share_id(std::string* ptr);

  private:
  const std::string& _internal_share_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_share_id(
      const std::string& value);
  std::string* _internal_mutable_share_id();

  public:
  // @@protoc_insertion_point(class_scope:prpc.DelSharedItemReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 38, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr share_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class DelSharedItemRes final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.DelSharedItemRes) */ {
 public:
  inline DelSharedItemRes() : DelSharedItemRes(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DelSharedItemRes(::google::protobuf::internal::ConstantInitialized);

  DelSharedItemRes(const DelSharedItemRes& from);
  DelSharedItemRes(DelSharedItemRes&& from) noexcept
    : DelSharedItemRes() {
    *this = ::std::move(from);
  }

  inline DelSharedItemRes& operator=(const DelSharedItemRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelSharedItemRes& operator=(DelSharedItemRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelSharedItemRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelSharedItemRes* internal_default_instance() {
    return reinterpret_cast<const DelSharedItemRes*>(
               &_DelSharedItemRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(DelSharedItemRes& a, DelSharedItemRes& b) {
    a.Swap(&b);
  }
  inline void Swap(DelSharedItemRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelSharedItemRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelSharedItemRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelSharedItemRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DelSharedItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DelSharedItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.DelSharedItemRes";
  }
  protected:
  explicit DelSharedItemRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.DelSharedItemRes)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class SubtitleFile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.SubtitleFile) */ {
 public:
  inline SubtitleFile() : SubtitleFile(nullptr) {}
  ~SubtitleFile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtitleFile(::google::protobuf::internal::ConstantInitialized);

  SubtitleFile(const SubtitleFile& from);
  SubtitleFile(SubtitleFile&& from) noexcept
    : SubtitleFile() {
    *this = ::std::move(from);
  }

  inline SubtitleFile& operator=(const SubtitleFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtitleFile& operator=(SubtitleFile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtitleFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtitleFile* internal_default_instance() {
    return reinterpret_cast<const SubtitleFile*>(
               &_SubtitleFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(SubtitleFile& a, SubtitleFile& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtitleFile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtitleFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtitleFile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtitleFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtitleFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtitleFile& from) {
    SubtitleFile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtitleFile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.SubtitleFile";
  }
  protected:
  explicit SubtitleFile(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kContentFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes content = 2;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* ptr);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:prpc.SubtitleFile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 30, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class UploadSubtitleReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.UploadSubtitleReq) */ {
 public:
  inline UploadSubtitleReq() : UploadSubtitleReq(nullptr) {}
  ~UploadSubtitleReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UploadSubtitleReq(::google::protobuf::internal::ConstantInitialized);

  UploadSubtitleReq(const UploadSubtitleReq& from);
  UploadSubtitleReq(UploadSubtitleReq&& from) noexcept
    : UploadSubtitleReq() {
    *this = ::std::move(from);
  }

  inline UploadSubtitleReq& operator=(const UploadSubtitleReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadSubtitleReq& operator=(UploadSubtitleReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UploadSubtitleReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadSubtitleReq* internal_default_instance() {
    return reinterpret_cast<const UploadSubtitleReq*>(
               &_UploadSubtitleReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(UploadSubtitleReq& a, UploadSubtitleReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UploadSubtitleReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadSubtitleReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UploadSubtitleReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UploadSubtitleReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UploadSubtitleReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UploadSubtitleReq& from) {
    UploadSubtitleReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadSubtitleReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.UploadSubtitleReq";
  }
  protected:
  explicit UploadSubtitleReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubtitlesFieldNumber = 2,
    kItemIdFieldNumber = 1,
  };
  // repeated .prpc.SubtitleFile subtitles = 2;
  int subtitles_size() const;
  private:
  int _internal_subtitles_size() const;

  public:
  void clear_subtitles() ;
  ::prpc::SubtitleFile* mutable_subtitles(int index);
  ::google::protobuf::RepeatedPtrField< ::prpc::SubtitleFile >*
      mutable_subtitles();
  private:
  const ::google::protobuf::RepeatedPtrField<::prpc::SubtitleFile>& _internal_subtitles() const;
  ::google::protobuf::RepeatedPtrField<::prpc::SubtitleFile>* _internal_mutable_subtitles();
  public:
  const ::prpc::SubtitleFile& subtitles(int index) const;
  ::prpc::SubtitleFile* add_subtitles();
  const ::google::protobuf::RepeatedPtrField< ::prpc::SubtitleFile >&
      subtitles() const;
  // int64 item_id = 1;
  void clear_item_id() ;
  ::int64_t item_id() const;
  void set_item_id(::int64_t value);

  private:
  ::int64_t _internal_item_id() const;
  void _internal_set_item_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.UploadSubtitleReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::prpc::SubtitleFile > subtitles_;
    ::int64_t item_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class UploadSubtitleRes final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.UploadSubtitleRes) */ {
 public:
  inline UploadSubtitleRes() : UploadSubtitleRes(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UploadSubtitleRes(::google::protobuf::internal::ConstantInitialized);

  UploadSubtitleRes(const UploadSubtitleRes& from);
  UploadSubtitleRes(UploadSubtitleRes&& from) noexcept
    : UploadSubtitleRes() {
    *this = ::std::move(from);
  }

  inline UploadSubtitleRes& operator=(const UploadSubtitleRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadSubtitleRes& operator=(UploadSubtitleRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UploadSubtitleRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadSubtitleRes* internal_default_instance() {
    return reinterpret_cast<const UploadSubtitleRes*>(
               &_UploadSubtitleRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(UploadSubtitleRes& a, UploadSubtitleRes& b) {
    a.Swap(&b);
  }
  inline void Swap(UploadSubtitleRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadSubtitleRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UploadSubtitleRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UploadSubtitleRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UploadSubtitleRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UploadSubtitleRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.UploadSubtitleRes";
  }
  protected:
  explicit UploadSubtitleRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.UploadSubtitleRes)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class GetBtMetaReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.GetBtMetaReq) */ {
 public:
  inline GetBtMetaReq() : GetBtMetaReq(nullptr) {}
  ~GetBtMetaReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetBtMetaReq(::google::protobuf::internal::ConstantInitialized);

  GetBtMetaReq(const GetBtMetaReq& from);
  GetBtMetaReq(GetBtMetaReq&& from) noexcept
    : GetBtMetaReq() {
    *this = ::std::move(from);
  }

  inline GetBtMetaReq& operator=(const GetBtMetaReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBtMetaReq& operator=(GetBtMetaReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBtMetaReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBtMetaReq* internal_default_instance() {
    return reinterpret_cast<const GetBtMetaReq*>(
               &_GetBtMetaReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(GetBtMetaReq& a, GetBtMetaReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBtMetaReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBtMetaReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBtMetaReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetBtMetaReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBtMetaReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetBtMetaReq& from) {
    GetBtMetaReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBtMetaReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.GetBtMetaReq";
  }
  protected:
  explicit GetBtMetaReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 1,
  };
  // .prpc.DownloadRequest req = 1;
  bool has_req() const;
  void clear_req() ;
  const ::prpc::DownloadRequest& req() const;
  PROTOBUF_NODISCARD ::prpc::DownloadRequest* release_req();
  ::prpc::DownloadRequest* mutable_req();
  void set_allocated_req(::prpc::DownloadRequest* value);
  void unsafe_arena_set_allocated_req(::prpc::DownloadRequest* value);
  ::prpc::DownloadRequest* unsafe_arena_release_req();

  private:
  const ::prpc::DownloadRequest& _internal_req() const;
  ::prpc::DownloadRequest* _internal_mutable_req();

  public:
  // @@protoc_insertion_point(class_scope:prpc.GetBtMetaReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::DownloadRequest* req_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class GetBtMetaRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.GetBtMetaRsp) */ {
 public:
  inline GetBtMetaRsp() : GetBtMetaRsp(nullptr) {}
  ~GetBtMetaRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetBtMetaRsp(::google::protobuf::internal::ConstantInitialized);

  GetBtMetaRsp(const GetBtMetaRsp& from);
  GetBtMetaRsp(GetBtMetaRsp&& from) noexcept
    : GetBtMetaRsp() {
    *this = ::std::move(from);
  }

  inline GetBtMetaRsp& operator=(const GetBtMetaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBtMetaRsp& operator=(GetBtMetaRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBtMetaRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBtMetaRsp* internal_default_instance() {
    return reinterpret_cast<const GetBtMetaRsp*>(
               &_GetBtMetaRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(GetBtMetaRsp& a, GetBtMetaRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBtMetaRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBtMetaRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBtMetaRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetBtMetaRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBtMetaRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetBtMetaRsp& from) {
    GetBtMetaRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBtMetaRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.GetBtMetaRsp";
  }
  protected:
  explicit GetBtMetaRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTorrentInfoFieldNumber = 1,
  };
  // .prpc.TorrentInfo torrent_info = 1;
  bool has_torrent_info() const;
  void clear_torrent_info() ;
  const ::prpc::TorrentInfo& torrent_info() const;
  PROTOBUF_NODISCARD ::prpc::TorrentInfo* release_torrent_info();
  ::prpc::TorrentInfo* mutable_torrent_info();
  void set_allocated_torrent_info(::prpc::TorrentInfo* value);
  void unsafe_arena_set_allocated_torrent_info(::prpc::TorrentInfo* value);
  ::prpc::TorrentInfo* unsafe_arena_release_torrent_info();

  private:
  const ::prpc::TorrentInfo& _internal_torrent_info() const;
  ::prpc::TorrentInfo* _internal_mutable_torrent_info();

  public:
  // @@protoc_insertion_point(class_scope:prpc.GetBtMetaRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::TorrentInfo* torrent_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class NewBtHlsTaskReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.NewBtHlsTaskReq) */ {
 public:
  inline NewBtHlsTaskReq() : NewBtHlsTaskReq(nullptr) {}
  ~NewBtHlsTaskReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NewBtHlsTaskReq(::google::protobuf::internal::ConstantInitialized);

  NewBtHlsTaskReq(const NewBtHlsTaskReq& from);
  NewBtHlsTaskReq(NewBtHlsTaskReq&& from) noexcept
    : NewBtHlsTaskReq() {
    *this = ::std::move(from);
  }

  inline NewBtHlsTaskReq& operator=(const NewBtHlsTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewBtHlsTaskReq& operator=(NewBtHlsTaskReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewBtHlsTaskReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewBtHlsTaskReq* internal_default_instance() {
    return reinterpret_cast<const NewBtHlsTaskReq*>(
               &_NewBtHlsTaskReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(NewBtHlsTaskReq& a, NewBtHlsTaskReq& b) {
    a.Swap(&b);
  }
  inline void Swap(NewBtHlsTaskReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewBtHlsTaskReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewBtHlsTaskReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NewBtHlsTaskReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewBtHlsTaskReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NewBtHlsTaskReq& from) {
    NewBtHlsTaskReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewBtHlsTaskReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.NewBtHlsTaskReq";
  }
  protected:
  explicit NewBtHlsTaskReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 1,
    kCategoryParentIdFieldNumber = 2,
    kRecursiveNewPathFieldNumber = 3,
  };
  // .prpc.DownloadRequest req = 1;
  bool has_req() const;
  void clear_req() ;
  const ::prpc::DownloadRequest& req() const;
  PROTOBUF_NODISCARD ::prpc::DownloadRequest* release_req();
  ::prpc::DownloadRequest* mutable_req();
  void set_allocated_req(::prpc::DownloadRequest* value);
  void unsafe_arena_set_allocated_req(::prpc::DownloadRequest* value);
  ::prpc::DownloadRequest* unsafe_arena_release_req();

  private:
  const ::prpc::DownloadRequest& _internal_req() const;
  ::prpc::DownloadRequest* _internal_mutable_req();

  public:
  // int64 category_parent_id = 2;
  void clear_category_parent_id() ;
  ::int64_t category_parent_id() const;
  void set_category_parent_id(::int64_t value);

  private:
  ::int64_t _internal_category_parent_id() const;
  void _internal_set_category_parent_id(::int64_t value);

  public:
  // bool recursive_new_path = 3;
  void clear_recursive_new_path() ;
  bool recursive_new_path() const;
  void set_recursive_new_path(bool value);

  private:
  bool _internal_recursive_new_path() const;
  void _internal_set_recursive_new_path(bool value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.NewBtHlsTaskReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::DownloadRequest* req_;
    ::int64_t category_parent_id_;
    bool recursive_new_path_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class NewBtHlsTaskRsp final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.NewBtHlsTaskRsp) */ {
 public:
  inline NewBtHlsTaskRsp() : NewBtHlsTaskRsp(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NewBtHlsTaskRsp(::google::protobuf::internal::ConstantInitialized);

  NewBtHlsTaskRsp(const NewBtHlsTaskRsp& from);
  NewBtHlsTaskRsp(NewBtHlsTaskRsp&& from) noexcept
    : NewBtHlsTaskRsp() {
    *this = ::std::move(from);
  }

  inline NewBtHlsTaskRsp& operator=(const NewBtHlsTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewBtHlsTaskRsp& operator=(NewBtHlsTaskRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewBtHlsTaskRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewBtHlsTaskRsp* internal_default_instance() {
    return reinterpret_cast<const NewBtHlsTaskRsp*>(
               &_NewBtHlsTaskRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(NewBtHlsTaskRsp& a, NewBtHlsTaskRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(NewBtHlsTaskRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewBtHlsTaskRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewBtHlsTaskRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NewBtHlsTaskRsp>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NewBtHlsTaskRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NewBtHlsTaskRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.NewBtHlsTaskRsp";
  }
  protected:
  explicit NewBtHlsTaskRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.NewBtHlsTaskRsp)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class Room final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.Room) */ {
 public:
  inline Room() : Room(nullptr) {}
  ~Room() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Room(::google::protobuf::internal::ConstantInitialized);

  Room(const Room& from);
  Room(Room&& from) noexcept
    : Room() {
    *this = ::std::move(from);
  }

  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline Room& operator=(Room&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Room& default_instance() {
    return *internal_default_instance();
  }
  static inline const Room* internal_default_instance() {
    return reinterpret_cast<const Room*>(
               &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(Room& a, Room& b) {
    a.Swap(&b);
  }
  inline void Swap(Room* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Room* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Room* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Room& from) {
    Room::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Room* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.Room";
  }
  protected:
  explicit Room(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Type = Room_Type;
  static constexpr Type Unknown = Room_Type_Unknown;
  static constexpr Type Category = Room_Type_Category;
  static constexpr Type Danmaku = Room_Type_Danmaku;
  static inline bool Type_IsValid(int value) {
    return Room_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = Room_Type_Type_MIN;
  static constexpr Type Type_MAX = Room_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = Room_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return Room_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return Room_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return Room_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // int64 id = 2;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // .prpc.Room.Type type = 1;
  void clear_type() ;
  ::prpc::Room_Type type() const;
  void set_type(::prpc::Room_Type value);

  private:
  ::prpc::Room_Type _internal_type() const;
  void _internal_set_type(::prpc::Room_Type value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.Room)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t id_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class JoinChatRoomReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.JoinChatRoomReq) */ {
 public:
  inline JoinChatRoomReq() : JoinChatRoomReq(nullptr) {}
  ~JoinChatRoomReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JoinChatRoomReq(::google::protobuf::internal::ConstantInitialized);

  JoinChatRoomReq(const JoinChatRoomReq& from);
  JoinChatRoomReq(JoinChatRoomReq&& from) noexcept
    : JoinChatRoomReq() {
    *this = ::std::move(from);
  }

  inline JoinChatRoomReq& operator=(const JoinChatRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinChatRoomReq& operator=(JoinChatRoomReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoinChatRoomReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinChatRoomReq* internal_default_instance() {
    return reinterpret_cast<const JoinChatRoomReq*>(
               &_JoinChatRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(JoinChatRoomReq& a, JoinChatRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(JoinChatRoomReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinChatRoomReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoinChatRoomReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JoinChatRoomReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoinChatRoomReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JoinChatRoomReq& from) {
    JoinChatRoomReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinChatRoomReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.JoinChatRoomReq";
  }
  protected:
  explicit JoinChatRoomReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomFieldNumber = 1,
  };
  // .prpc.Room room = 1;
  bool has_room() const;
  void clear_room() ;
  const ::prpc::Room& room() const;
  PROTOBUF_NODISCARD ::prpc::Room* release_room();
  ::prpc::Room* mutable_room();
  void set_allocated_room(::prpc::Room* value);
  void unsafe_arena_set_allocated_room(::prpc::Room* value);
  ::prpc::Room* unsafe_arena_release_room();

  private:
  const ::prpc::Room& _internal_room() const;
  ::prpc::Room* _internal_mutable_room();

  public:
  // @@protoc_insertion_point(class_scope:prpc.JoinChatRoomReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::Room* room_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class ChatMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.ChatMessage) */ {
 public:
  inline ChatMessage() : ChatMessage(nullptr) {}
  ~ChatMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChatMessage(::google::protobuf::internal::ConstantInitialized);

  ChatMessage(const ChatMessage& from);
  ChatMessage(ChatMessage&& from) noexcept
    : ChatMessage() {
    *this = ::std::move(from);
  }

  inline ChatMessage& operator=(const ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatMessage& operator=(ChatMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatMessage* internal_default_instance() {
    return reinterpret_cast<const ChatMessage*>(
               &_ChatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(ChatMessage& a, ChatMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ChatMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChatMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChatMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChatMessage& from) {
    ChatMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.ChatMessage";
  }
  protected:
  explicit ChatMessage(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserNameFieldNumber = 2,
    kMsgFieldNumber = 4,
    kUserIdFieldNumber = 1,
    kSentTimeFieldNumber = 3,
  };
  // string user_name = 2;
  void clear_user_name() ;
  const std::string& user_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_name(Arg_&& arg, Args_... args);
  std::string* mutable_user_name();
  PROTOBUF_NODISCARD std::string* release_user_name();
  void set_allocated_user_name(std::string* ptr);

  private:
  const std::string& _internal_user_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_name(
      const std::string& value);
  std::string* _internal_mutable_user_name();

  public:
  // string msg = 4;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* ptr);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // int64 user_id = 1;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // int64 sent_time = 3;
  void clear_sent_time() ;
  ::int64_t sent_time() const;
  void set_sent_time(::int64_t value);

  private:
  ::int64_t _internal_sent_time() const;
  void _internal_set_sent_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.ChatMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 37, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr user_name_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::int64_t user_id_;
    ::int64_t sent_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class JoinChatRoomRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.JoinChatRoomRes) */ {
 public:
  inline JoinChatRoomRes() : JoinChatRoomRes(nullptr) {}
  ~JoinChatRoomRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JoinChatRoomRes(::google::protobuf::internal::ConstantInitialized);

  JoinChatRoomRes(const JoinChatRoomRes& from);
  JoinChatRoomRes(JoinChatRoomRes&& from) noexcept
    : JoinChatRoomRes() {
    *this = ::std::move(from);
  }

  inline JoinChatRoomRes& operator=(const JoinChatRoomRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinChatRoomRes& operator=(JoinChatRoomRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JoinChatRoomRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinChatRoomRes* internal_default_instance() {
    return reinterpret_cast<const JoinChatRoomRes*>(
               &_JoinChatRoomRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(JoinChatRoomRes& a, JoinChatRoomRes& b) {
    a.Swap(&b);
  }
  inline void Swap(JoinChatRoomRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinChatRoomRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JoinChatRoomRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JoinChatRoomRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JoinChatRoomRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JoinChatRoomRes& from) {
    JoinChatRoomRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinChatRoomRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.JoinChatRoomRes";
  }
  protected:
  explicit JoinChatRoomRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatMsgsFieldNumber = 2,
    kRoomFieldNumber = 1,
  };
  // repeated .prpc.ChatMessage chat_msgs = 2;
  int chat_msgs_size() const;
  private:
  int _internal_chat_msgs_size() const;

  public:
  void clear_chat_msgs() ;
  ::prpc::ChatMessage* mutable_chat_msgs(int index);
  ::google::protobuf::RepeatedPtrField< ::prpc::ChatMessage >*
      mutable_chat_msgs();
  private:
  const ::google::protobuf::RepeatedPtrField<::prpc::ChatMessage>& _internal_chat_msgs() const;
  ::google::protobuf::RepeatedPtrField<::prpc::ChatMessage>* _internal_mutable_chat_msgs();
  public:
  const ::prpc::ChatMessage& chat_msgs(int index) const;
  ::prpc::ChatMessage* add_chat_msgs();
  const ::google::protobuf::RepeatedPtrField< ::prpc::ChatMessage >&
      chat_msgs() const;
  // .prpc.Room room = 1;
  bool has_room() const;
  void clear_room() ;
  const ::prpc::Room& room() const;
  PROTOBUF_NODISCARD ::prpc::Room* release_room();
  ::prpc::Room* mutable_room();
  void set_allocated_room(::prpc::Room* value);
  void unsafe_arena_set_allocated_room(::prpc::Room* value);
  ::prpc::Room* unsafe_arena_release_room();

  private:
  const ::prpc::Room& _internal_room() const;
  ::prpc::Room* _internal_mutable_room();

  public:
  // @@protoc_insertion_point(class_scope:prpc.JoinChatRoomRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::prpc::ChatMessage > chat_msgs_;
    ::prpc::Room* room_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class SendMsg2ChatRoomReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.SendMsg2ChatRoomReq) */ {
 public:
  inline SendMsg2ChatRoomReq() : SendMsg2ChatRoomReq(nullptr) {}
  ~SendMsg2ChatRoomReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendMsg2ChatRoomReq(::google::protobuf::internal::ConstantInitialized);

  SendMsg2ChatRoomReq(const SendMsg2ChatRoomReq& from);
  SendMsg2ChatRoomReq(SendMsg2ChatRoomReq&& from) noexcept
    : SendMsg2ChatRoomReq() {
    *this = ::std::move(from);
  }

  inline SendMsg2ChatRoomReq& operator=(const SendMsg2ChatRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMsg2ChatRoomReq& operator=(SendMsg2ChatRoomReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMsg2ChatRoomReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMsg2ChatRoomReq* internal_default_instance() {
    return reinterpret_cast<const SendMsg2ChatRoomReq*>(
               &_SendMsg2ChatRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(SendMsg2ChatRoomReq& a, SendMsg2ChatRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SendMsg2ChatRoomReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMsg2ChatRoomReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMsg2ChatRoomReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendMsg2ChatRoomReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMsg2ChatRoomReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SendMsg2ChatRoomReq& from) {
    SendMsg2ChatRoomReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMsg2ChatRoomReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.SendMsg2ChatRoomReq";
  }
  protected:
  explicit SendMsg2ChatRoomReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomFieldNumber = 1,
    kChatMsgFieldNumber = 2,
  };
  // .prpc.Room room = 1;
  bool has_room() const;
  void clear_room() ;
  const ::prpc::Room& room() const;
  PROTOBUF_NODISCARD ::prpc::Room* release_room();
  ::prpc::Room* mutable_room();
  void set_allocated_room(::prpc::Room* value);
  void unsafe_arena_set_allocated_room(::prpc::Room* value);
  ::prpc::Room* unsafe_arena_release_room();

  private:
  const ::prpc::Room& _internal_room() const;
  ::prpc::Room* _internal_mutable_room();

  public:
  // .prpc.ChatMessage chat_msg = 2;
  bool has_chat_msg() const;
  void clear_chat_msg() ;
  const ::prpc::ChatMessage& chat_msg() const;
  PROTOBUF_NODISCARD ::prpc::ChatMessage* release_chat_msg();
  ::prpc::ChatMessage* mutable_chat_msg();
  void set_allocated_chat_msg(::prpc::ChatMessage* value);
  void unsafe_arena_set_allocated_chat_msg(::prpc::ChatMessage* value);
  ::prpc::ChatMessage* unsafe_arena_release_chat_msg();

  private:
  const ::prpc::ChatMessage& _internal_chat_msg() const;
  ::prpc::ChatMessage* _internal_mutable_chat_msg();

  public:
  // @@protoc_insertion_point(class_scope:prpc.SendMsg2ChatRoomReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::prpc::Room* room_;
    ::prpc::ChatMessage* chat_msg_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class SendMsg2ChatRoomRes final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.SendMsg2ChatRoomRes) */ {
 public:
  inline SendMsg2ChatRoomRes() : SendMsg2ChatRoomRes(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendMsg2ChatRoomRes(::google::protobuf::internal::ConstantInitialized);

  SendMsg2ChatRoomRes(const SendMsg2ChatRoomRes& from);
  SendMsg2ChatRoomRes(SendMsg2ChatRoomRes&& from) noexcept
    : SendMsg2ChatRoomRes() {
    *this = ::std::move(from);
  }

  inline SendMsg2ChatRoomRes& operator=(const SendMsg2ChatRoomRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMsg2ChatRoomRes& operator=(SendMsg2ChatRoomRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMsg2ChatRoomRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMsg2ChatRoomRes* internal_default_instance() {
    return reinterpret_cast<const SendMsg2ChatRoomRes*>(
               &_SendMsg2ChatRoomRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(SendMsg2ChatRoomRes& a, SendMsg2ChatRoomRes& b) {
    a.Swap(&b);
  }
  inline void Swap(SendMsg2ChatRoomRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMsg2ChatRoomRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMsg2ChatRoomRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendMsg2ChatRoomRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendMsg2ChatRoomRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendMsg2ChatRoomRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.SendMsg2ChatRoomRes";
  }
  protected:
  explicit SendMsg2ChatRoomRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.SendMsg2ChatRoomRes)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class AddMagnetCategoryReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.AddMagnetCategoryReq) */ {
 public:
  inline AddMagnetCategoryReq() : AddMagnetCategoryReq(nullptr) {}
  ~AddMagnetCategoryReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddMagnetCategoryReq(::google::protobuf::internal::ConstantInitialized);

  AddMagnetCategoryReq(const AddMagnetCategoryReq& from);
  AddMagnetCategoryReq(AddMagnetCategoryReq&& from) noexcept
    : AddMagnetCategoryReq() {
    *this = ::std::move(from);
  }

  inline AddMagnetCategoryReq& operator=(const AddMagnetCategoryReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddMagnetCategoryReq& operator=(AddMagnetCategoryReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddMagnetCategoryReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddMagnetCategoryReq* internal_default_instance() {
    return reinterpret_cast<const AddMagnetCategoryReq*>(
               &_AddMagnetCategoryReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(AddMagnetCategoryReq& a, AddMagnetCategoryReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddMagnetCategoryReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddMagnetCategoryReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddMagnetCategoryReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddMagnetCategoryReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddMagnetCategoryReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddMagnetCategoryReq& from) {
    AddMagnetCategoryReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddMagnetCategoryReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.AddMagnetCategoryReq";
  }
  protected:
  explicit AddMagnetCategoryReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryNameFieldNumber = 2,
    kIntroduceFieldNumber = 3,
    kParentIdFieldNumber = 1,
  };
  // string category_name = 2;
  void clear_category_name() ;
  const std::string& category_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_name(Arg_&& arg, Args_... args);
  std::string* mutable_category_name();
  PROTOBUF_NODISCARD std::string* release_category_name();
  void set_allocated_category_name(std::string* ptr);

  private:
  const std::string& _internal_category_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_name(
      const std::string& value);
  std::string* _internal_mutable_category_name();

  public:
  // string introduce = 3;
  void clear_introduce() ;
  const std::string& introduce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_introduce(Arg_&& arg, Args_... args);
  std::string* mutable_introduce();
  PROTOBUF_NODISCARD std::string* release_introduce();
  void set_allocated_introduce(std::string* ptr);

  private:
  const std::string& _internal_introduce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_introduce(
      const std::string& value);
  std::string* _internal_mutable_introduce();

  public:
  // int64 parent_id = 1;
  void clear_parent_id() ;
  ::int64_t parent_id() const;
  void set_parent_id(::int64_t value);

  private:
  ::int64_t _internal_parent_id() const;
  void _internal_set_parent_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.AddMagnetCategoryReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr category_name_;
    ::google::protobuf::internal::ArenaStringPtr introduce_;
    ::int64_t parent_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class AddMagnetCategoryRsp final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.AddMagnetCategoryRsp) */ {
 public:
  inline AddMagnetCategoryRsp() : AddMagnetCategoryRsp(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddMagnetCategoryRsp(::google::protobuf::internal::ConstantInitialized);

  AddMagnetCategoryRsp(const AddMagnetCategoryRsp& from);
  AddMagnetCategoryRsp(AddMagnetCategoryRsp&& from) noexcept
    : AddMagnetCategoryRsp() {
    *this = ::std::move(from);
  }

  inline AddMagnetCategoryRsp& operator=(const AddMagnetCategoryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddMagnetCategoryRsp& operator=(AddMagnetCategoryRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddMagnetCategoryRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddMagnetCategoryRsp* internal_default_instance() {
    return reinterpret_cast<const AddMagnetCategoryRsp*>(
               &_AddMagnetCategoryRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(AddMagnetCategoryRsp& a, AddMagnetCategoryRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(AddMagnetCategoryRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddMagnetCategoryRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddMagnetCategoryRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddMagnetCategoryRsp>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddMagnetCategoryRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddMagnetCategoryRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.AddMagnetCategoryRsp";
  }
  protected:
  explicit AddMagnetCategoryRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.AddMagnetCategoryRsp)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class AddMagnetUriReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.AddMagnetUriReq) */ {
 public:
  inline AddMagnetUriReq() : AddMagnetUriReq(nullptr) {}
  ~AddMagnetUriReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddMagnetUriReq(::google::protobuf::internal::ConstantInitialized);

  AddMagnetUriReq(const AddMagnetUriReq& from);
  AddMagnetUriReq(AddMagnetUriReq&& from) noexcept
    : AddMagnetUriReq() {
    *this = ::std::move(from);
  }

  inline AddMagnetUriReq& operator=(const AddMagnetUriReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddMagnetUriReq& operator=(AddMagnetUriReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddMagnetUriReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddMagnetUriReq* internal_default_instance() {
    return reinterpret_cast<const AddMagnetUriReq*>(
               &_AddMagnetUriReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(AddMagnetUriReq& a, AddMagnetUriReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddMagnetUriReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddMagnetUriReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddMagnetUriReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddMagnetUriReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddMagnetUriReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddMagnetUriReq& from) {
    AddMagnetUriReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddMagnetUriReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.AddMagnetUriReq";
  }
  protected:
  explicit AddMagnetUriReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMagnetUriFieldNumber = 2,
    kIntroduceFieldNumber = 3,
    kCategoryIdFieldNumber = 1,
  };
  // string magnet_uri = 2;
  void clear_magnet_uri() ;
  const std::string& magnet_uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_magnet_uri(Arg_&& arg, Args_... args);
  std::string* mutable_magnet_uri();
  PROTOBUF_NODISCARD std::string* release_magnet_uri();
  void set_allocated_magnet_uri(std::string* ptr);

  private:
  const std::string& _internal_magnet_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_magnet_uri(
      const std::string& value);
  std::string* _internal_mutable_magnet_uri();

  public:
  // string introduce = 3;
  void clear_introduce() ;
  const std::string& introduce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_introduce(Arg_&& arg, Args_... args);
  std::string* mutable_introduce();
  PROTOBUF_NODISCARD std::string* release_introduce();
  void set_allocated_introduce(std::string* ptr);

  private:
  const std::string& _internal_introduce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_introduce(
      const std::string& value);
  std::string* _internal_mutable_introduce();

  public:
  // int64 category_id = 1;
  void clear_category_id() ;
  ::int64_t category_id() const;
  void set_category_id(::int64_t value);

  private:
  ::int64_t _internal_category_id() const;
  void _internal_set_category_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.AddMagnetUriReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 48, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr magnet_uri_;
    ::google::protobuf::internal::ArenaStringPtr introduce_;
    ::int64_t category_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class AddMagnetUriRsp final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.AddMagnetUriRsp) */ {
 public:
  inline AddMagnetUriRsp() : AddMagnetUriRsp(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddMagnetUriRsp(::google::protobuf::internal::ConstantInitialized);

  AddMagnetUriRsp(const AddMagnetUriRsp& from);
  AddMagnetUriRsp(AddMagnetUriRsp&& from) noexcept
    : AddMagnetUriRsp() {
    *this = ::std::move(from);
  }

  inline AddMagnetUriRsp& operator=(const AddMagnetUriRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddMagnetUriRsp& operator=(AddMagnetUriRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddMagnetUriRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddMagnetUriRsp* internal_default_instance() {
    return reinterpret_cast<const AddMagnetUriRsp*>(
               &_AddMagnetUriRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(AddMagnetUriRsp& a, AddMagnetUriRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(AddMagnetUriRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddMagnetUriRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddMagnetUriRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddMagnetUriRsp>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddMagnetUriRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddMagnetUriRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.AddMagnetUriRsp";
  }
  protected:
  explicit AddMagnetUriRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.AddMagnetUriRsp)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QueryMagnetReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QueryMagnetReq) */ {
 public:
  inline QueryMagnetReq() : QueryMagnetReq(nullptr) {}
  ~QueryMagnetReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMagnetReq(::google::protobuf::internal::ConstantInitialized);

  QueryMagnetReq(const QueryMagnetReq& from);
  QueryMagnetReq(QueryMagnetReq&& from) noexcept
    : QueryMagnetReq() {
    *this = ::std::move(from);
  }

  inline QueryMagnetReq& operator=(const QueryMagnetReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMagnetReq& operator=(QueryMagnetReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMagnetReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryMagnetReq* internal_default_instance() {
    return reinterpret_cast<const QueryMagnetReq*>(
               &_QueryMagnetReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(QueryMagnetReq& a, QueryMagnetReq& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryMagnetReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMagnetReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMagnetReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryMagnetReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryMagnetReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryMagnetReq& from) {
    QueryMagnetReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryMagnetReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QueryMagnetReq";
  }
  protected:
  explicit QueryMagnetReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSearchCondFieldNumber = 2,
    kParentIdFieldNumber = 1,
    kPageNumFieldNumber = 3,
    kRowsFieldNumber = 4,
  };
  // string search_cond = 2;
  void clear_search_cond() ;
  const std::string& search_cond() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_search_cond(Arg_&& arg, Args_... args);
  std::string* mutable_search_cond();
  PROTOBUF_NODISCARD std::string* release_search_cond();
  void set_allocated_search_cond(std::string* ptr);

  private:
  const std::string& _internal_search_cond() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_search_cond(
      const std::string& value);
  std::string* _internal_mutable_search_cond();

  public:
  // int64 parent_id = 1;
  void clear_parent_id() ;
  ::int64_t parent_id() const;
  void set_parent_id(::int64_t value);

  private:
  ::int64_t _internal_parent_id() const;
  void _internal_set_parent_id(::int64_t value);

  public:
  // int32 page_num = 3;
  void clear_page_num() ;
  ::int32_t page_num() const;
  void set_page_num(::int32_t value);

  private:
  ::int32_t _internal_page_num() const;
  void _internal_set_page_num(::int32_t value);

  public:
  // int32 rows = 4;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.QueryMagnetReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 39, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr search_cond_;
    ::int64_t parent_id_;
    ::int32_t page_num_;
    ::int32_t rows_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class QueryMagnetRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.QueryMagnetRsp) */ {
 public:
  inline QueryMagnetRsp() : QueryMagnetRsp(nullptr) {}
  ~QueryMagnetRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMagnetRsp(::google::protobuf::internal::ConstantInitialized);

  QueryMagnetRsp(const QueryMagnetRsp& from);
  QueryMagnetRsp(QueryMagnetRsp&& from) noexcept
    : QueryMagnetRsp() {
    *this = ::std::move(from);
  }

  inline QueryMagnetRsp& operator=(const QueryMagnetRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMagnetRsp& operator=(QueryMagnetRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMagnetRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryMagnetRsp* internal_default_instance() {
    return reinterpret_cast<const QueryMagnetRsp*>(
               &_QueryMagnetRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(QueryMagnetRsp& a, QueryMagnetRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryMagnetRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMagnetRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMagnetRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryMagnetRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryMagnetRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryMagnetRsp& from) {
    QueryMagnetRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryMagnetRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.QueryMagnetRsp";
  }
  protected:
  explicit QueryMagnetRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kTotalRowCountFieldNumber = 2,
  };
  // repeated .prpc.CategoryItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::prpc::CategoryItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>* _internal_mutable_items();
  public:
  const ::prpc::CategoryItem& items(int index) const;
  ::prpc::CategoryItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >&
      items() const;
  // int32 total_row_count = 2;
  void clear_total_row_count() ;
  ::int32_t total_row_count() const;
  void set_total_row_count(::int32_t value);

  private:
  ::int32_t _internal_total_row_count() const;
  void _internal_set_total_row_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.QueryMagnetRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem > items_;
    ::int32_t total_row_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class DelMagnetCategoryReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.DelMagnetCategoryReq) */ {
 public:
  inline DelMagnetCategoryReq() : DelMagnetCategoryReq(nullptr) {}
  ~DelMagnetCategoryReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DelMagnetCategoryReq(::google::protobuf::internal::ConstantInitialized);

  DelMagnetCategoryReq(const DelMagnetCategoryReq& from);
  DelMagnetCategoryReq(DelMagnetCategoryReq&& from) noexcept
    : DelMagnetCategoryReq() {
    *this = ::std::move(from);
  }

  inline DelMagnetCategoryReq& operator=(const DelMagnetCategoryReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelMagnetCategoryReq& operator=(DelMagnetCategoryReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelMagnetCategoryReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelMagnetCategoryReq* internal_default_instance() {
    return reinterpret_cast<const DelMagnetCategoryReq*>(
               &_DelMagnetCategoryReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(DelMagnetCategoryReq& a, DelMagnetCategoryReq& b) {
    a.Swap(&b);
  }
  inline void Swap(DelMagnetCategoryReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelMagnetCategoryReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelMagnetCategoryReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelMagnetCategoryReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DelMagnetCategoryReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DelMagnetCategoryReq& from) {
    DelMagnetCategoryReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelMagnetCategoryReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.DelMagnetCategoryReq";
  }
  protected:
  explicit DelMagnetCategoryReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.DelMagnetCategoryReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class DelMagnetCategoryRsp final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.DelMagnetCategoryRsp) */ {
 public:
  inline DelMagnetCategoryRsp() : DelMagnetCategoryRsp(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DelMagnetCategoryRsp(::google::protobuf::internal::ConstantInitialized);

  DelMagnetCategoryRsp(const DelMagnetCategoryRsp& from);
  DelMagnetCategoryRsp(DelMagnetCategoryRsp&& from) noexcept
    : DelMagnetCategoryRsp() {
    *this = ::std::move(from);
  }

  inline DelMagnetCategoryRsp& operator=(const DelMagnetCategoryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelMagnetCategoryRsp& operator=(DelMagnetCategoryRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelMagnetCategoryRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelMagnetCategoryRsp* internal_default_instance() {
    return reinterpret_cast<const DelMagnetCategoryRsp*>(
               &_DelMagnetCategoryRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(DelMagnetCategoryRsp& a, DelMagnetCategoryRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(DelMagnetCategoryRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelMagnetCategoryRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelMagnetCategoryRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DelMagnetCategoryRsp>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DelMagnetCategoryRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DelMagnetCategoryRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.DelMagnetCategoryRsp";
  }
  protected:
  explicit DelMagnetCategoryRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.DelMagnetCategoryRsp)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class GetTorrentsReq final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.GetTorrentsReq) */ {
 public:
  inline GetTorrentsReq() : GetTorrentsReq(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetTorrentsReq(::google::protobuf::internal::ConstantInitialized);

  GetTorrentsReq(const GetTorrentsReq& from);
  GetTorrentsReq(GetTorrentsReq&& from) noexcept
    : GetTorrentsReq() {
    *this = ::std::move(from);
  }

  inline GetTorrentsReq& operator=(const GetTorrentsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTorrentsReq& operator=(GetTorrentsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTorrentsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTorrentsReq* internal_default_instance() {
    return reinterpret_cast<const GetTorrentsReq*>(
               &_GetTorrentsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(GetTorrentsReq& a, GetTorrentsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTorrentsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTorrentsReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTorrentsReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTorrentsReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetTorrentsReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetTorrentsReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.GetTorrentsReq";
  }
  protected:
  explicit GetTorrentsReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.GetTorrentsReq)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class GetTorrentsRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.GetTorrentsRsp) */ {
 public:
  inline GetTorrentsRsp() : GetTorrentsRsp(nullptr) {}
  ~GetTorrentsRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetTorrentsRsp(::google::protobuf::internal::ConstantInitialized);

  GetTorrentsRsp(const GetTorrentsRsp& from);
  GetTorrentsRsp(GetTorrentsRsp&& from) noexcept
    : GetTorrentsRsp() {
    *this = ::std::move(from);
  }

  inline GetTorrentsRsp& operator=(const GetTorrentsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTorrentsRsp& operator=(GetTorrentsRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTorrentsRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTorrentsRsp* internal_default_instance() {
    return reinterpret_cast<const GetTorrentsRsp*>(
               &_GetTorrentsRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(GetTorrentsRsp& a, GetTorrentsRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTorrentsRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTorrentsRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTorrentsRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTorrentsRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTorrentsRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetTorrentsRsp& from) {
    GetTorrentsRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTorrentsRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.GetTorrentsRsp";
  }
  protected:
  explicit GetTorrentsRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTorrentInfoFieldNumber = 1,
  };
  // repeated .prpc.TorrentInfo torrent_info = 1;
  int torrent_info_size() const;
  private:
  int _internal_torrent_info_size() const;

  public:
  void clear_torrent_info() ;
  ::prpc::TorrentInfo* mutable_torrent_info(int index);
  ::google::protobuf::RepeatedPtrField< ::prpc::TorrentInfo >*
      mutable_torrent_info();
  private:
  const ::google::protobuf::RepeatedPtrField<::prpc::TorrentInfo>& _internal_torrent_info() const;
  ::google::protobuf::RepeatedPtrField<::prpc::TorrentInfo>* _internal_mutable_torrent_info();
  public:
  const ::prpc::TorrentInfo& torrent_info(int index) const;
  ::prpc::TorrentInfo* add_torrent_info();
  const ::google::protobuf::RepeatedPtrField< ::prpc::TorrentInfo >&
      torrent_info() const;
  // @@protoc_insertion_point(class_scope:prpc.GetTorrentsRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::prpc::TorrentInfo > torrent_info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class RenameItemsReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prpc.RenameItemsReq) */ {
 public:
  inline RenameItemsReq() : RenameItemsReq(nullptr) {}
  ~RenameItemsReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RenameItemsReq(::google::protobuf::internal::ConstantInitialized);

  RenameItemsReq(const RenameItemsReq& from);
  RenameItemsReq(RenameItemsReq&& from) noexcept
    : RenameItemsReq() {
    *this = ::std::move(from);
  }

  inline RenameItemsReq& operator=(const RenameItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RenameItemsReq& operator=(RenameItemsReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RenameItemsReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RenameItemsReq* internal_default_instance() {
    return reinterpret_cast<const RenameItemsReq*>(
               &_RenameItemsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(RenameItemsReq& a, RenameItemsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RenameItemsReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RenameItemsReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RenameItemsReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RenameItemsReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RenameItemsReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RenameItemsReq& from) {
    RenameItemsReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RenameItemsReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.RenameItemsReq";
  }
  protected:
  explicit RenameItemsReq(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRefNameFieldNumber = 3,
    kParentIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string ref_name = 3;
  void clear_ref_name() ;
  const std::string& ref_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ref_name(Arg_&& arg, Args_... args);
  std::string* mutable_ref_name();
  PROTOBUF_NODISCARD std::string* release_ref_name();
  void set_allocated_ref_name(std::string* ptr);

  private:
  const std::string& _internal_ref_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ref_name(
      const std::string& value);
  std::string* _internal_mutable_ref_name();

  public:
  // int64 parent_id = 1;
  void clear_parent_id() ;
  ::int64_t parent_id() const;
  void set_parent_id(::int64_t value);

  private:
  ::int64_t _internal_parent_id() const;
  void _internal_set_parent_id(::int64_t value);

  public:
  // .prpc.CategoryItem.Type type = 2;
  void clear_type() ;
  ::prpc::CategoryItem_Type type() const;
  void set_type(::prpc::CategoryItem_Type value);

  private:
  ::prpc::CategoryItem_Type _internal_type() const;
  void _internal_set_type(::prpc::CategoryItem_Type value);

  public:
  // @@protoc_insertion_point(class_scope:prpc.RenameItemsReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 36, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr ref_name_;
    ::int64_t parent_id_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_user_2eproto;
};// -------------------------------------------------------------------

class RenameItemsRsp final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:prpc.RenameItemsRsp) */ {
 public:
  inline RenameItemsRsp() : RenameItemsRsp(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RenameItemsRsp(::google::protobuf::internal::ConstantInitialized);

  RenameItemsRsp(const RenameItemsRsp& from);
  RenameItemsRsp(RenameItemsRsp&& from) noexcept
    : RenameItemsRsp() {
    *this = ::std::move(from);
  }

  inline RenameItemsRsp& operator=(const RenameItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RenameItemsRsp& operator=(RenameItemsRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RenameItemsRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const RenameItemsRsp* internal_default_instance() {
    return reinterpret_cast<const RenameItemsRsp*>(
               &_RenameItemsRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(RenameItemsRsp& a, RenameItemsRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(RenameItemsRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RenameItemsRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RenameItemsRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RenameItemsRsp>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RenameItemsRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RenameItemsRsp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "prpc.RenameItemsRsp";
  }
  protected:
  explicit RenameItemsRsp(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prpc.RenameItemsRsp)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_user_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// UserInfo

// int64 id = 1;
inline void UserInfo::clear_id() {
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t UserInfo::id() const {
  // @@protoc_insertion_point(field_get:prpc.UserInfo.id)
  return _internal_id();
}
inline void UserInfo::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:prpc.UserInfo.id)
}
inline ::int64_t UserInfo::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void UserInfo::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string name = 2;
inline void UserInfo::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& UserInfo::name() const {
  // @@protoc_insertion_point(field_get:prpc.UserInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.UserInfo.name)
}
inline std::string* UserInfo::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:prpc.UserInfo.name)
  return _s;
}
inline const std::string& UserInfo::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void UserInfo::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* UserInfo::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* UserInfo::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.UserInfo.name)
  return _impl_.name_.Release();
}
inline void UserInfo::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.UserInfo.name)
}

// string email = 3;
inline void UserInfo::clear_email() {
  _impl_.email_.ClearToEmpty();
}
inline const std::string& UserInfo::email() const {
  // @@protoc_insertion_point(field_get:prpc.UserInfo.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.UserInfo.email)
}
inline std::string* UserInfo::mutable_email() {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:prpc.UserInfo.email)
  return _s;
}
inline const std::string& UserInfo::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void UserInfo::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArenaForAllocation());
}
inline std::string* UserInfo::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArenaForAllocation());
}
inline std::string* UserInfo::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.UserInfo.email)
  return _impl_.email_.Release();
}
inline void UserInfo::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.UserInfo.email)
}

// string passwd = 4;
inline void UserInfo::clear_passwd() {
  _impl_.passwd_.ClearToEmpty();
}
inline const std::string& UserInfo::passwd() const {
  // @@protoc_insertion_point(field_get:prpc.UserInfo.passwd)
  return _internal_passwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo::set_passwd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.passwd_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.UserInfo.passwd)
}
inline std::string* UserInfo::mutable_passwd() {
  std::string* _s = _internal_mutable_passwd();
  // @@protoc_insertion_point(field_mutable:prpc.UserInfo.passwd)
  return _s;
}
inline const std::string& UserInfo::_internal_passwd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.passwd_.Get();
}
inline void UserInfo::_internal_set_passwd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.passwd_.Set(value, GetArenaForAllocation());
}
inline std::string* UserInfo::_internal_mutable_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.passwd_.Mutable( GetArenaForAllocation());
}
inline std::string* UserInfo::release_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.UserInfo.passwd)
  return _impl_.passwd_.Release();
}
inline void UserInfo::set_allocated_passwd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.passwd_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.passwd_.IsDefault()) {
          _impl_.passwd_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.UserInfo.passwd)
}

// int64 home_directory_id = 5;
inline void UserInfo::clear_home_directory_id() {
  _impl_.home_directory_id_ = ::int64_t{0};
}
inline ::int64_t UserInfo::home_directory_id() const {
  // @@protoc_insertion_point(field_get:prpc.UserInfo.home_directory_id)
  return _internal_home_directory_id();
}
inline void UserInfo::set_home_directory_id(::int64_t value) {
  _internal_set_home_directory_id(value);
  // @@protoc_insertion_point(field_set:prpc.UserInfo.home_directory_id)
}
inline ::int64_t UserInfo::_internal_home_directory_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.home_directory_id_;
}
inline void UserInfo::_internal_set_home_directory_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_directory_id_ = value;
}

// int64 magnet_root_id = 6;
inline void UserInfo::clear_magnet_root_id() {
  _impl_.magnet_root_id_ = ::int64_t{0};
}
inline ::int64_t UserInfo::magnet_root_id() const {
  // @@protoc_insertion_point(field_get:prpc.UserInfo.magnet_root_id)
  return _internal_magnet_root_id();
}
inline void UserInfo::set_magnet_root_id(::int64_t value) {
  _internal_set_magnet_root_id(value);
  // @@protoc_insertion_point(field_set:prpc.UserInfo.magnet_root_id)
}
inline ::int64_t UserInfo::_internal_magnet_root_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.magnet_root_id_;
}
inline void UserInfo::_internal_set_magnet_root_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.magnet_root_id_ = value;
}

// -------------------------------------------------------------------

// RegisterInfo

// .prpc.UserInfo user_info = 1;
inline bool RegisterInfo::has_user_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.user_info_ != nullptr);
  return value;
}
inline void RegisterInfo::clear_user_info() {
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::prpc::UserInfo& RegisterInfo::_internal_user_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::UserInfo* p = _impl_.user_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::UserInfo&>(::prpc::_UserInfo_default_instance_);
}
inline const ::prpc::UserInfo& RegisterInfo::user_info() const {
  // @@protoc_insertion_point(field_get:prpc.RegisterInfo.user_info)
  return _internal_user_info();
}
inline void RegisterInfo::unsafe_arena_set_allocated_user_info(::prpc::UserInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_info_);
  }
  _impl_.user_info_ = reinterpret_cast<::prpc::UserInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.RegisterInfo.user_info)
}
inline ::prpc::UserInfo* RegisterInfo::release_user_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::UserInfo* released = _impl_.user_info_;
  _impl_.user_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::UserInfo* RegisterInfo::unsafe_arena_release_user_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.RegisterInfo.user_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::UserInfo* temp = _impl_.user_info_;
  _impl_.user_info_ = nullptr;
  return temp;
}
inline ::prpc::UserInfo* RegisterInfo::_internal_mutable_user_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.user_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::UserInfo>(GetArenaForAllocation());
    _impl_.user_info_ = reinterpret_cast<::prpc::UserInfo*>(p);
  }
  return _impl_.user_info_;
}
inline ::prpc::UserInfo* RegisterInfo::mutable_user_info() {
  ::prpc::UserInfo* _msg = _internal_mutable_user_info();
  // @@protoc_insertion_point(field_mutable:prpc.RegisterInfo.user_info)
  return _msg;
}
inline void RegisterInfo::set_allocated_user_info(::prpc::UserInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::prpc::UserInfo*>(_impl_.user_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::prpc::UserInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.user_info_ = reinterpret_cast<::prpc::UserInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.RegisterInfo.user_info)
}

// -------------------------------------------------------------------

// RegisterRet

// -------------------------------------------------------------------

// EmailInfo

// string email = 1;
inline void EmailInfo::clear_email() {
  _impl_.email_.ClearToEmpty();
}
inline const std::string& EmailInfo::email() const {
  // @@protoc_insertion_point(field_get:prpc.EmailInfo.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailInfo::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.EmailInfo.email)
}
inline std::string* EmailInfo::mutable_email() {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:prpc.EmailInfo.email)
  return _s;
}
inline const std::string& EmailInfo::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void EmailInfo::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArenaForAllocation());
}
inline std::string* EmailInfo::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArenaForAllocation());
}
inline std::string* EmailInfo::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.EmailInfo.email)
  return _impl_.email_.Release();
}
inline void EmailInfo::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.EmailInfo.email)
}

// -------------------------------------------------------------------

// IsUsedEmailRet

// -------------------------------------------------------------------

// LoginInfo

// string email = 1;
inline void LoginInfo::clear_email() {
  _impl_.email_.ClearToEmpty();
}
inline const std::string& LoginInfo::email() const {
  // @@protoc_insertion_point(field_get:prpc.LoginInfo.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginInfo::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.LoginInfo.email)
}
inline std::string* LoginInfo::mutable_email() {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:prpc.LoginInfo.email)
  return _s;
}
inline const std::string& LoginInfo::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void LoginInfo::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArenaForAllocation());
}
inline std::string* LoginInfo::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArenaForAllocation());
}
inline std::string* LoginInfo::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.LoginInfo.email)
  return _impl_.email_.Release();
}
inline void LoginInfo::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.LoginInfo.email)
}

// string passwd = 2;
inline void LoginInfo::clear_passwd() {
  _impl_.passwd_.ClearToEmpty();
}
inline const std::string& LoginInfo::passwd() const {
  // @@protoc_insertion_point(field_get:prpc.LoginInfo.passwd)
  return _internal_passwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginInfo::set_passwd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.passwd_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.LoginInfo.passwd)
}
inline std::string* LoginInfo::mutable_passwd() {
  std::string* _s = _internal_mutable_passwd();
  // @@protoc_insertion_point(field_mutable:prpc.LoginInfo.passwd)
  return _s;
}
inline const std::string& LoginInfo::_internal_passwd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.passwd_.Get();
}
inline void LoginInfo::_internal_set_passwd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.passwd_.Set(value, GetArenaForAllocation());
}
inline std::string* LoginInfo::_internal_mutable_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.passwd_.Mutable( GetArenaForAllocation());
}
inline std::string* LoginInfo::release_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.LoginInfo.passwd)
  return _impl_.passwd_.Release();
}
inline void LoginInfo::set_allocated_passwd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.passwd_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.passwd_.IsDefault()) {
          _impl_.passwd_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.LoginInfo.passwd)
}

// bool remember_me = 3;
inline void LoginInfo::clear_remember_me() {
  _impl_.remember_me_ = false;
}
inline bool LoginInfo::remember_me() const {
  // @@protoc_insertion_point(field_get:prpc.LoginInfo.remember_me)
  return _internal_remember_me();
}
inline void LoginInfo::set_remember_me(bool value) {
  _internal_set_remember_me(value);
  // @@protoc_insertion_point(field_set:prpc.LoginInfo.remember_me)
}
inline bool LoginInfo::_internal_remember_me() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remember_me_;
}
inline void LoginInfo::_internal_set_remember_me(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remember_me_ = value;
}

// -------------------------------------------------------------------

// LoginRet

// string token = 1;
inline void LoginRet::clear_token() {
  _impl_.token_.ClearToEmpty();
}
inline const std::string& LoginRet::token() const {
  // @@protoc_insertion_point(field_get:prpc.LoginRet.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRet::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.LoginRet.token)
}
inline std::string* LoginRet::mutable_token() {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:prpc.LoginRet.token)
  return _s;
}
inline const std::string& LoginRet::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void LoginRet::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArenaForAllocation());
}
inline std::string* LoginRet::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArenaForAllocation());
}
inline std::string* LoginRet::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.LoginRet.token)
  return _impl_.token_.Release();
}
inline void LoginRet::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.LoginRet.token)
}

// .prpc.UserInfo user_info = 2;
inline bool LoginRet::has_user_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.user_info_ != nullptr);
  return value;
}
inline void LoginRet::clear_user_info() {
  if (_impl_.user_info_ != nullptr) _impl_.user_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::prpc::UserInfo& LoginRet::_internal_user_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::UserInfo* p = _impl_.user_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::UserInfo&>(::prpc::_UserInfo_default_instance_);
}
inline const ::prpc::UserInfo& LoginRet::user_info() const {
  // @@protoc_insertion_point(field_get:prpc.LoginRet.user_info)
  return _internal_user_info();
}
inline void LoginRet::unsafe_arena_set_allocated_user_info(::prpc::UserInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_info_);
  }
  _impl_.user_info_ = reinterpret_cast<::prpc::UserInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.LoginRet.user_info)
}
inline ::prpc::UserInfo* LoginRet::release_user_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::UserInfo* released = _impl_.user_info_;
  _impl_.user_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::UserInfo* LoginRet::unsafe_arena_release_user_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.LoginRet.user_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::UserInfo* temp = _impl_.user_info_;
  _impl_.user_info_ = nullptr;
  return temp;
}
inline ::prpc::UserInfo* LoginRet::_internal_mutable_user_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.user_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::UserInfo>(GetArenaForAllocation());
    _impl_.user_info_ = reinterpret_cast<::prpc::UserInfo*>(p);
  }
  return _impl_.user_info_;
}
inline ::prpc::UserInfo* LoginRet::mutable_user_info() {
  ::prpc::UserInfo* _msg = _internal_mutable_user_info();
  // @@protoc_insertion_point(field_mutable:prpc.LoginRet.user_info)
  return _msg;
}
inline void LoginRet::set_allocated_user_info(::prpc::UserInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::prpc::UserInfo*>(_impl_.user_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::prpc::UserInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.user_info_ = reinterpret_cast<::prpc::UserInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.LoginRet.user_info)
}

// bool remember_me = 3;
inline void LoginRet::clear_remember_me() {
  _impl_.remember_me_ = false;
}
inline bool LoginRet::remember_me() const {
  // @@protoc_insertion_point(field_get:prpc.LoginRet.remember_me)
  return _internal_remember_me();
}
inline void LoginRet::set_remember_me(bool value) {
  _internal_set_remember_me(value);
  // @@protoc_insertion_point(field_set:prpc.LoginRet.remember_me)
}
inline bool LoginRet::_internal_remember_me() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remember_me_;
}
inline void LoginRet::_internal_set_remember_me(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remember_me_ = value;
}

// -------------------------------------------------------------------

// ChangePasswordReq

// string email = 1;
inline void ChangePasswordReq::clear_email() {
  _impl_.email_.ClearToEmpty();
}
inline const std::string& ChangePasswordReq::email() const {
  // @@protoc_insertion_point(field_get:prpc.ChangePasswordReq.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChangePasswordReq::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.ChangePasswordReq.email)
}
inline std::string* ChangePasswordReq::mutable_email() {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:prpc.ChangePasswordReq.email)
  return _s;
}
inline const std::string& ChangePasswordReq::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void ChangePasswordReq::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArenaForAllocation());
}
inline std::string* ChangePasswordReq::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArenaForAllocation());
}
inline std::string* ChangePasswordReq::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.ChangePasswordReq.email)
  return _impl_.email_.Release();
}
inline void ChangePasswordReq::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.ChangePasswordReq.email)
}

// string old_passwd = 2;
inline void ChangePasswordReq::clear_old_passwd() {
  _impl_.old_passwd_.ClearToEmpty();
}
inline const std::string& ChangePasswordReq::old_passwd() const {
  // @@protoc_insertion_point(field_get:prpc.ChangePasswordReq.old_passwd)
  return _internal_old_passwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChangePasswordReq::set_old_passwd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.old_passwd_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.ChangePasswordReq.old_passwd)
}
inline std::string* ChangePasswordReq::mutable_old_passwd() {
  std::string* _s = _internal_mutable_old_passwd();
  // @@protoc_insertion_point(field_mutable:prpc.ChangePasswordReq.old_passwd)
  return _s;
}
inline const std::string& ChangePasswordReq::_internal_old_passwd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.old_passwd_.Get();
}
inline void ChangePasswordReq::_internal_set_old_passwd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.old_passwd_.Set(value, GetArenaForAllocation());
}
inline std::string* ChangePasswordReq::_internal_mutable_old_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.old_passwd_.Mutable( GetArenaForAllocation());
}
inline std::string* ChangePasswordReq::release_old_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.ChangePasswordReq.old_passwd)
  return _impl_.old_passwd_.Release();
}
inline void ChangePasswordReq::set_allocated_old_passwd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.old_passwd_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.old_passwd_.IsDefault()) {
          _impl_.old_passwd_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.ChangePasswordReq.old_passwd)
}

// string new_passwd = 3;
inline void ChangePasswordReq::clear_new_passwd() {
  _impl_.new_passwd_.ClearToEmpty();
}
inline const std::string& ChangePasswordReq::new_passwd() const {
  // @@protoc_insertion_point(field_get:prpc.ChangePasswordReq.new_passwd)
  return _internal_new_passwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChangePasswordReq::set_new_passwd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_passwd_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.ChangePasswordReq.new_passwd)
}
inline std::string* ChangePasswordReq::mutable_new_passwd() {
  std::string* _s = _internal_mutable_new_passwd();
  // @@protoc_insertion_point(field_mutable:prpc.ChangePasswordReq.new_passwd)
  return _s;
}
inline const std::string& ChangePasswordReq::_internal_new_passwd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_passwd_.Get();
}
inline void ChangePasswordReq::_internal_set_new_passwd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_passwd_.Set(value, GetArenaForAllocation());
}
inline std::string* ChangePasswordReq::_internal_mutable_new_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.new_passwd_.Mutable( GetArenaForAllocation());
}
inline std::string* ChangePasswordReq::release_new_passwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.ChangePasswordReq.new_passwd)
  return _impl_.new_passwd_.Release();
}
inline void ChangePasswordReq::set_allocated_new_passwd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_passwd_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.new_passwd_.IsDefault()) {
          _impl_.new_passwd_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.ChangePasswordReq.new_passwd)
}

// -------------------------------------------------------------------

// ChangePasswordRsp

// -------------------------------------------------------------------

// NewCategoryItemReq

// string name = 1;
inline void NewCategoryItemReq::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& NewCategoryItemReq::name() const {
  // @@protoc_insertion_point(field_get:prpc.NewCategoryItemReq.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewCategoryItemReq::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.NewCategoryItemReq.name)
}
inline std::string* NewCategoryItemReq::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:prpc.NewCategoryItemReq.name)
  return _s;
}
inline const std::string& NewCategoryItemReq::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void NewCategoryItemReq::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* NewCategoryItemReq::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* NewCategoryItemReq::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.NewCategoryItemReq.name)
  return _impl_.name_.Release();
}
inline void NewCategoryItemReq::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.NewCategoryItemReq.name)
}

// .prpc.CategoryItem.Type type_id = 2;
inline void NewCategoryItemReq::clear_type_id() {
  _impl_.type_id_ = 0;
}
inline ::prpc::CategoryItem_Type NewCategoryItemReq::type_id() const {
  // @@protoc_insertion_point(field_get:prpc.NewCategoryItemReq.type_id)
  return _internal_type_id();
}
inline void NewCategoryItemReq::set_type_id(::prpc::CategoryItem_Type value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:prpc.NewCategoryItemReq.type_id)
}
inline ::prpc::CategoryItem_Type NewCategoryItemReq::_internal_type_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::prpc::CategoryItem_Type>(_impl_.type_id_);
}
inline void NewCategoryItemReq::_internal_set_type_id(::prpc::CategoryItem_Type value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_id_ = value;
}

// string resource_path = 3;
inline void NewCategoryItemReq::clear_resource_path() {
  _impl_.resource_path_.ClearToEmpty();
}
inline const std::string& NewCategoryItemReq::resource_path() const {
  // @@protoc_insertion_point(field_get:prpc.NewCategoryItemReq.resource_path)
  return _internal_resource_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewCategoryItemReq::set_resource_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.NewCategoryItemReq.resource_path)
}
inline std::string* NewCategoryItemReq::mutable_resource_path() {
  std::string* _s = _internal_mutable_resource_path();
  // @@protoc_insertion_point(field_mutable:prpc.NewCategoryItemReq.resource_path)
  return _s;
}
inline const std::string& NewCategoryItemReq::_internal_resource_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_path_.Get();
}
inline void NewCategoryItemReq::_internal_set_resource_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_path_.Set(value, GetArenaForAllocation());
}
inline std::string* NewCategoryItemReq::_internal_mutable_resource_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resource_path_.Mutable( GetArenaForAllocation());
}
inline std::string* NewCategoryItemReq::release_resource_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.NewCategoryItemReq.resource_path)
  return _impl_.resource_path_.Release();
}
inline void NewCategoryItemReq::set_allocated_resource_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_path_.IsDefault()) {
          _impl_.resource_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.NewCategoryItemReq.resource_path)
}

// string introduce = 4;
inline void NewCategoryItemReq::clear_introduce() {
  _impl_.introduce_.ClearToEmpty();
}
inline const std::string& NewCategoryItemReq::introduce() const {
  // @@protoc_insertion_point(field_get:prpc.NewCategoryItemReq.introduce)
  return _internal_introduce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewCategoryItemReq::set_introduce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.introduce_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.NewCategoryItemReq.introduce)
}
inline std::string* NewCategoryItemReq::mutable_introduce() {
  std::string* _s = _internal_mutable_introduce();
  // @@protoc_insertion_point(field_mutable:prpc.NewCategoryItemReq.introduce)
  return _s;
}
inline const std::string& NewCategoryItemReq::_internal_introduce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.introduce_.Get();
}
inline void NewCategoryItemReq::_internal_set_introduce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.introduce_.Set(value, GetArenaForAllocation());
}
inline std::string* NewCategoryItemReq::_internal_mutable_introduce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.introduce_.Mutable( GetArenaForAllocation());
}
inline std::string* NewCategoryItemReq::release_introduce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.NewCategoryItemReq.introduce)
  return _impl_.introduce_.Release();
}
inline void NewCategoryItemReq::set_allocated_introduce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.introduce_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.introduce_.IsDefault()) {
          _impl_.introduce_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.NewCategoryItemReq.introduce)
}

// int64 parent_id = 5;
inline void NewCategoryItemReq::clear_parent_id() {
  _impl_.parent_id_ = ::int64_t{0};
}
inline ::int64_t NewCategoryItemReq::parent_id() const {
  // @@protoc_insertion_point(field_get:prpc.NewCategoryItemReq.parent_id)
  return _internal_parent_id();
}
inline void NewCategoryItemReq::set_parent_id(::int64_t value) {
  _internal_set_parent_id(value);
  // @@protoc_insertion_point(field_set:prpc.NewCategoryItemReq.parent_id)
}
inline ::int64_t NewCategoryItemReq::_internal_parent_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parent_id_;
}
inline void NewCategoryItemReq::_internal_set_parent_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_id_ = value;
}

// -------------------------------------------------------------------

// NewCategoryItemRes

// -------------------------------------------------------------------

// DelCategoryItemReq

// int64 item_id = 1;
inline void DelCategoryItemReq::clear_item_id() {
  _impl_.item_id_ = ::int64_t{0};
}
inline ::int64_t DelCategoryItemReq::item_id() const {
  // @@protoc_insertion_point(field_get:prpc.DelCategoryItemReq.item_id)
  return _internal_item_id();
}
inline void DelCategoryItemReq::set_item_id(::int64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:prpc.DelCategoryItemReq.item_id)
}
inline ::int64_t DelCategoryItemReq::_internal_item_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.item_id_;
}
inline void DelCategoryItemReq::_internal_set_item_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.item_id_ = value;
}

// -------------------------------------------------------------------

// DelCategoryItemRes

// -------------------------------------------------------------------

// QuerySubItemsReq

// int64 parent_id = 1;
inline void QuerySubItemsReq::clear_parent_id() {
  _impl_.parent_id_ = ::int64_t{0};
}
inline ::int64_t QuerySubItemsReq::parent_id() const {
  // @@protoc_insertion_point(field_get:prpc.QuerySubItemsReq.parent_id)
  return _internal_parent_id();
}
inline void QuerySubItemsReq::set_parent_id(::int64_t value) {
  _internal_set_parent_id(value);
  // @@protoc_insertion_point(field_set:prpc.QuerySubItemsReq.parent_id)
}
inline ::int64_t QuerySubItemsReq::_internal_parent_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parent_id_;
}
inline void QuerySubItemsReq::_internal_set_parent_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_id_ = value;
}

// string share_id = 2;
inline void QuerySubItemsReq::clear_share_id() {
  _impl_.share_id_.ClearToEmpty();
}
inline const std::string& QuerySubItemsReq::share_id() const {
  // @@protoc_insertion_point(field_get:prpc.QuerySubItemsReq.share_id)
  return _internal_share_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuerySubItemsReq::set_share_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.QuerySubItemsReq.share_id)
}
inline std::string* QuerySubItemsReq::mutable_share_id() {
  std::string* _s = _internal_mutable_share_id();
  // @@protoc_insertion_point(field_mutable:prpc.QuerySubItemsReq.share_id)
  return _s;
}
inline const std::string& QuerySubItemsReq::_internal_share_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.share_id_.Get();
}
inline void QuerySubItemsReq::_internal_set_share_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(value, GetArenaForAllocation());
}
inline std::string* QuerySubItemsReq::_internal_mutable_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.share_id_.Mutable( GetArenaForAllocation());
}
inline std::string* QuerySubItemsReq::release_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.QuerySubItemsReq.share_id)
  return _impl_.share_id_.Release();
}
inline void QuerySubItemsReq::set_allocated_share_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.share_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.share_id_.IsDefault()) {
          _impl_.share_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.QuerySubItemsReq.share_id)
}

// int32 page_num = 3;
inline void QuerySubItemsReq::clear_page_num() {
  _impl_.page_num_ = 0;
}
inline ::int32_t QuerySubItemsReq::page_num() const {
  // @@protoc_insertion_point(field_get:prpc.QuerySubItemsReq.page_num)
  return _internal_page_num();
}
inline void QuerySubItemsReq::set_page_num(::int32_t value) {
  _internal_set_page_num(value);
  // @@protoc_insertion_point(field_set:prpc.QuerySubItemsReq.page_num)
}
inline ::int32_t QuerySubItemsReq::_internal_page_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_num_;
}
inline void QuerySubItemsReq::_internal_set_page_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_num_ = value;
}

// int32 rows = 4;
inline void QuerySubItemsReq::clear_rows() {
  _impl_.rows_ = 0;
}
inline ::int32_t QuerySubItemsReq::rows() const {
  // @@protoc_insertion_point(field_get:prpc.QuerySubItemsReq.rows)
  return _internal_rows();
}
inline void QuerySubItemsReq::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:prpc.QuerySubItemsReq.rows)
}
inline ::int32_t QuerySubItemsReq::_internal_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rows_;
}
inline void QuerySubItemsReq::_internal_set_rows(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rows_ = value;
}

// -------------------------------------------------------------------

// QuerySubItemsRes

// .prpc.CategoryItem parent_item = 1;
inline bool QuerySubItemsRes::has_parent_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parent_item_ != nullptr);
  return value;
}
inline const ::prpc::CategoryItem& QuerySubItemsRes::_internal_parent_item() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::CategoryItem* p = _impl_.parent_item_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::CategoryItem&>(::prpc::_CategoryItem_default_instance_);
}
inline const ::prpc::CategoryItem& QuerySubItemsRes::parent_item() const {
  // @@protoc_insertion_point(field_get:prpc.QuerySubItemsRes.parent_item)
  return _internal_parent_item();
}
inline void QuerySubItemsRes::unsafe_arena_set_allocated_parent_item(::prpc::CategoryItem* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parent_item_);
  }
  _impl_.parent_item_ = reinterpret_cast<::prpc::CategoryItem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.QuerySubItemsRes.parent_item)
}
inline ::prpc::CategoryItem* QuerySubItemsRes::release_parent_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::CategoryItem* released = _impl_.parent_item_;
  _impl_.parent_item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::CategoryItem* QuerySubItemsRes::unsafe_arena_release_parent_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.QuerySubItemsRes.parent_item)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::CategoryItem* temp = _impl_.parent_item_;
  _impl_.parent_item_ = nullptr;
  return temp;
}
inline ::prpc::CategoryItem* QuerySubItemsRes::_internal_mutable_parent_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.parent_item_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::CategoryItem>(GetArenaForAllocation());
    _impl_.parent_item_ = reinterpret_cast<::prpc::CategoryItem*>(p);
  }
  return _impl_.parent_item_;
}
inline ::prpc::CategoryItem* QuerySubItemsRes::mutable_parent_item() {
  ::prpc::CategoryItem* _msg = _internal_mutable_parent_item();
  // @@protoc_insertion_point(field_mutable:prpc.QuerySubItemsRes.parent_item)
  return _msg;
}
inline void QuerySubItemsRes::set_allocated_parent_item(::prpc::CategoryItem* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parent_item_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.parent_item_ = reinterpret_cast<::prpc::CategoryItem*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.QuerySubItemsRes.parent_item)
}

// repeated .prpc.CategoryItem items = 2;
inline int QuerySubItemsRes::_internal_items_size() const {
  return _internal_items().size();
}
inline int QuerySubItemsRes::items_size() const {
  return _internal_items_size();
}
inline ::prpc::CategoryItem* QuerySubItemsRes::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:prpc.QuerySubItemsRes.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >*
QuerySubItemsRes::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:prpc.QuerySubItemsRes.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::prpc::CategoryItem& QuerySubItemsRes::items(int index) const {
  // @@protoc_insertion_point(field_get:prpc.QuerySubItemsRes.items)
    return _internal_items().Get(index);
}
inline ::prpc::CategoryItem* QuerySubItemsRes::add_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::prpc::CategoryItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:prpc.QuerySubItemsRes.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >&
QuerySubItemsRes::items() const {
  // @@protoc_insertion_point(field_list:prpc.QuerySubItemsRes.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>&
QuerySubItemsRes::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>*
QuerySubItemsRes::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// int32 total_row_count = 3;
inline void QuerySubItemsRes::clear_total_row_count() {
  _impl_.total_row_count_ = 0;
}
inline ::int32_t QuerySubItemsRes::total_row_count() const {
  // @@protoc_insertion_point(field_get:prpc.QuerySubItemsRes.total_row_count)
  return _internal_total_row_count();
}
inline void QuerySubItemsRes::set_total_row_count(::int32_t value) {
  _internal_set_total_row_count(value);
  // @@protoc_insertion_point(field_set:prpc.QuerySubItemsRes.total_row_count)
}
inline ::int32_t QuerySubItemsRes::_internal_total_row_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_row_count_;
}
inline void QuerySubItemsRes::_internal_set_total_row_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_row_count_ = value;
}

// -------------------------------------------------------------------

// QueryBtVideosReq

// .prpc.InfoHash info_hash = 1;
inline bool QueryBtVideosReq::has_info_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_hash_ != nullptr);
  return value;
}
inline const ::prpc::InfoHash& QueryBtVideosReq::_internal_info_hash() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::InfoHash* p = _impl_.info_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::InfoHash&>(::prpc::_InfoHash_default_instance_);
}
inline const ::prpc::InfoHash& QueryBtVideosReq::info_hash() const {
  // @@protoc_insertion_point(field_get:prpc.QueryBtVideosReq.info_hash)
  return _internal_info_hash();
}
inline void QueryBtVideosReq::unsafe_arena_set_allocated_info_hash(::prpc::InfoHash* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_hash_);
  }
  _impl_.info_hash_ = reinterpret_cast<::prpc::InfoHash*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.QueryBtVideosReq.info_hash)
}
inline ::prpc::InfoHash* QueryBtVideosReq::release_info_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::InfoHash* released = _impl_.info_hash_;
  _impl_.info_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::InfoHash* QueryBtVideosReq::unsafe_arena_release_info_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.QueryBtVideosReq.info_hash)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::InfoHash* temp = _impl_.info_hash_;
  _impl_.info_hash_ = nullptr;
  return temp;
}
inline ::prpc::InfoHash* QueryBtVideosReq::_internal_mutable_info_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.info_hash_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::InfoHash>(GetArenaForAllocation());
    _impl_.info_hash_ = reinterpret_cast<::prpc::InfoHash*>(p);
  }
  return _impl_.info_hash_;
}
inline ::prpc::InfoHash* QueryBtVideosReq::mutable_info_hash() {
  ::prpc::InfoHash* _msg = _internal_mutable_info_hash();
  // @@protoc_insertion_point(field_mutable:prpc.QueryBtVideosReq.info_hash)
  return _msg;
}
inline void QueryBtVideosReq::set_allocated_info_hash(::prpc::InfoHash* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_hash_ = reinterpret_cast<::prpc::InfoHash*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.QueryBtVideosReq.info_hash)
}

// -------------------------------------------------------------------

// BtFileMetadata

// int32 file_index = 1;
inline void BtFileMetadata::clear_file_index() {
  _impl_.file_index_ = 0;
}
inline ::int32_t BtFileMetadata::file_index() const {
  // @@protoc_insertion_point(field_get:prpc.BtFileMetadata.file_index)
  return _internal_file_index();
}
inline void BtFileMetadata::set_file_index(::int32_t value) {
  _internal_set_file_index(value);
  // @@protoc_insertion_point(field_set:prpc.BtFileMetadata.file_index)
}
inline ::int32_t BtFileMetadata::_internal_file_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_index_;
}
inline void BtFileMetadata::_internal_set_file_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.file_index_ = value;
}

// .prpc.VideoMetadata meta = 2;
inline bool BtFileMetadata::has_meta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_ != nullptr);
  return value;
}
inline const ::prpc::VideoMetadata& BtFileMetadata::_internal_meta() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::VideoMetadata* p = _impl_.meta_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::VideoMetadata&>(::prpc::_VideoMetadata_default_instance_);
}
inline const ::prpc::VideoMetadata& BtFileMetadata::meta() const {
  // @@protoc_insertion_point(field_get:prpc.BtFileMetadata.meta)
  return _internal_meta();
}
inline void BtFileMetadata::unsafe_arena_set_allocated_meta(::prpc::VideoMetadata* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }
  _impl_.meta_ = reinterpret_cast<::prpc::VideoMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.BtFileMetadata.meta)
}
inline ::prpc::VideoMetadata* BtFileMetadata::release_meta() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::VideoMetadata* released = _impl_.meta_;
  _impl_.meta_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::VideoMetadata* BtFileMetadata::unsafe_arena_release_meta() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.BtFileMetadata.meta)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::VideoMetadata* temp = _impl_.meta_;
  _impl_.meta_ = nullptr;
  return temp;
}
inline ::prpc::VideoMetadata* BtFileMetadata::_internal_mutable_meta() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.meta_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::VideoMetadata>(GetArenaForAllocation());
    _impl_.meta_ = reinterpret_cast<::prpc::VideoMetadata*>(p);
  }
  return _impl_.meta_;
}
inline ::prpc::VideoMetadata* BtFileMetadata::mutable_meta() {
  ::prpc::VideoMetadata* _msg = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:prpc.BtFileMetadata.meta)
  return _msg;
}
inline void BtFileMetadata::set_allocated_meta(::prpc::VideoMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.meta_ = reinterpret_cast<::prpc::VideoMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.BtFileMetadata.meta)
}

// -------------------------------------------------------------------

// QueryBtVideosRes

// repeated .prpc.BtFileMetadata data = 1;
inline int QueryBtVideosRes::_internal_data_size() const {
  return _internal_data().size();
}
inline int QueryBtVideosRes::data_size() const {
  return _internal_data_size();
}
inline void QueryBtVideosRes::clear_data() {
  _internal_mutable_data()->Clear();
}
inline ::prpc::BtFileMetadata* QueryBtVideosRes::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:prpc.QueryBtVideosRes.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prpc::BtFileMetadata >*
QueryBtVideosRes::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:prpc.QueryBtVideosRes.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::prpc::BtFileMetadata& QueryBtVideosRes::data(int index) const {
  // @@protoc_insertion_point(field_get:prpc.QueryBtVideosRes.data)
    return _internal_data().Get(index);
}
inline ::prpc::BtFileMetadata* QueryBtVideosRes::add_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::prpc::BtFileMetadata* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:prpc.QueryBtVideosRes.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::prpc::BtFileMetadata >&
QueryBtVideosRes::data() const {
  // @@protoc_insertion_point(field_list:prpc.QueryBtVideosRes.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::prpc::BtFileMetadata>&
QueryBtVideosRes::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::prpc::BtFileMetadata>*
QueryBtVideosRes::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// AddBtVideosReq

// .prpc.InfoHash info_hash = 1;
inline bool AddBtVideosReq::has_info_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_hash_ != nullptr);
  return value;
}
inline const ::prpc::InfoHash& AddBtVideosReq::_internal_info_hash() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::InfoHash* p = _impl_.info_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::InfoHash&>(::prpc::_InfoHash_default_instance_);
}
inline const ::prpc::InfoHash& AddBtVideosReq::info_hash() const {
  // @@protoc_insertion_point(field_get:prpc.AddBtVideosReq.info_hash)
  return _internal_info_hash();
}
inline void AddBtVideosReq::unsafe_arena_set_allocated_info_hash(::prpc::InfoHash* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_hash_);
  }
  _impl_.info_hash_ = reinterpret_cast<::prpc::InfoHash*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.AddBtVideosReq.info_hash)
}
inline ::prpc::InfoHash* AddBtVideosReq::release_info_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::InfoHash* released = _impl_.info_hash_;
  _impl_.info_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::InfoHash* AddBtVideosReq::unsafe_arena_release_info_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.AddBtVideosReq.info_hash)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::InfoHash* temp = _impl_.info_hash_;
  _impl_.info_hash_ = nullptr;
  return temp;
}
inline ::prpc::InfoHash* AddBtVideosReq::_internal_mutable_info_hash() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.info_hash_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::InfoHash>(GetArenaForAllocation());
    _impl_.info_hash_ = reinterpret_cast<::prpc::InfoHash*>(p);
  }
  return _impl_.info_hash_;
}
inline ::prpc::InfoHash* AddBtVideosReq::mutable_info_hash() {
  ::prpc::InfoHash* _msg = _internal_mutable_info_hash();
  // @@protoc_insertion_point(field_mutable:prpc.AddBtVideosReq.info_hash)
  return _msg;
}
inline void AddBtVideosReq::set_allocated_info_hash(::prpc::InfoHash* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_hash_ = reinterpret_cast<::prpc::InfoHash*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.AddBtVideosReq.info_hash)
}

// repeated int32 file_indexes = 2;
inline int AddBtVideosReq::_internal_file_indexes_size() const {
  return _internal_file_indexes().size();
}
inline int AddBtVideosReq::file_indexes_size() const {
  return _internal_file_indexes_size();
}
inline void AddBtVideosReq::clear_file_indexes() {
  _internal_mutable_file_indexes()->Clear();
}
inline ::int32_t AddBtVideosReq::file_indexes(int index) const {
  // @@protoc_insertion_point(field_get:prpc.AddBtVideosReq.file_indexes)
  return _internal_file_indexes().Get(index);
}
inline void AddBtVideosReq::set_file_indexes(int index, ::int32_t value) {
  _internal_mutable_file_indexes()->Set(index, value);
  // @@protoc_insertion_point(field_set:prpc.AddBtVideosReq.file_indexes)
}
inline void AddBtVideosReq::add_file_indexes(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_file_indexes()->Add(value);
  // @@protoc_insertion_point(field_add:prpc.AddBtVideosReq.file_indexes)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& AddBtVideosReq::file_indexes() const {
  // @@protoc_insertion_point(field_list:prpc.AddBtVideosReq.file_indexes)
  return _internal_file_indexes();
}
inline ::google::protobuf::RepeatedField<::int32_t>* AddBtVideosReq::mutable_file_indexes() {
  // @@protoc_insertion_point(field_mutable_list:prpc.AddBtVideosReq.file_indexes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_file_indexes();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& AddBtVideosReq::_internal_file_indexes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.file_indexes_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* AddBtVideosReq::_internal_mutable_file_indexes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.file_indexes_;
}

// int64 category_item_id = 3;
inline void AddBtVideosReq::clear_category_item_id() {
  _impl_.category_item_id_ = ::int64_t{0};
}
inline ::int64_t AddBtVideosReq::category_item_id() const {
  // @@protoc_insertion_point(field_get:prpc.AddBtVideosReq.category_item_id)
  return _internal_category_item_id();
}
inline void AddBtVideosReq::set_category_item_id(::int64_t value) {
  _internal_set_category_item_id(value);
  // @@protoc_insertion_point(field_set:prpc.AddBtVideosReq.category_item_id)
}
inline ::int64_t AddBtVideosReq::_internal_category_item_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.category_item_id_;
}
inline void AddBtVideosReq::_internal_set_category_item_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_item_id_ = value;
}

// -------------------------------------------------------------------

// AddBtVideosRes

// -------------------------------------------------------------------

// QueryItemInfoReq

// int64 item_id = 1;
inline void QueryItemInfoReq::clear_item_id() {
  _impl_.item_id_ = ::int64_t{0};
}
inline ::int64_t QueryItemInfoReq::item_id() const {
  // @@protoc_insertion_point(field_get:prpc.QueryItemInfoReq.item_id)
  return _internal_item_id();
}
inline void QueryItemInfoReq::set_item_id(::int64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:prpc.QueryItemInfoReq.item_id)
}
inline ::int64_t QueryItemInfoReq::_internal_item_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.item_id_;
}
inline void QueryItemInfoReq::_internal_set_item_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.item_id_ = value;
}

// string share_id = 2;
inline void QueryItemInfoReq::clear_share_id() {
  _impl_.share_id_.ClearToEmpty();
}
inline const std::string& QueryItemInfoReq::share_id() const {
  // @@protoc_insertion_point(field_get:prpc.QueryItemInfoReq.share_id)
  return _internal_share_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryItemInfoReq::set_share_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.QueryItemInfoReq.share_id)
}
inline std::string* QueryItemInfoReq::mutable_share_id() {
  std::string* _s = _internal_mutable_share_id();
  // @@protoc_insertion_point(field_mutable:prpc.QueryItemInfoReq.share_id)
  return _s;
}
inline const std::string& QueryItemInfoReq::_internal_share_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.share_id_.Get();
}
inline void QueryItemInfoReq::_internal_set_share_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryItemInfoReq::_internal_mutable_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.share_id_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryItemInfoReq::release_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.QueryItemInfoReq.share_id)
  return _impl_.share_id_.Release();
}
inline void QueryItemInfoReq::set_allocated_share_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.share_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.share_id_.IsDefault()) {
          _impl_.share_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.QueryItemInfoReq.share_id)
}

// -------------------------------------------------------------------

// QueryItemInfoRes

// .prpc.CategoryItem item_info = 1;
inline bool QueryItemInfoRes::has_item_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.item_info_ != nullptr);
  return value;
}
inline const ::prpc::CategoryItem& QueryItemInfoRes::_internal_item_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::CategoryItem* p = _impl_.item_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::CategoryItem&>(::prpc::_CategoryItem_default_instance_);
}
inline const ::prpc::CategoryItem& QueryItemInfoRes::item_info() const {
  // @@protoc_insertion_point(field_get:prpc.QueryItemInfoRes.item_info)
  return _internal_item_info();
}
inline void QueryItemInfoRes::unsafe_arena_set_allocated_item_info(::prpc::CategoryItem* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.item_info_);
  }
  _impl_.item_info_ = reinterpret_cast<::prpc::CategoryItem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.QueryItemInfoRes.item_info)
}
inline ::prpc::CategoryItem* QueryItemInfoRes::release_item_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::CategoryItem* released = _impl_.item_info_;
  _impl_.item_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::CategoryItem* QueryItemInfoRes::unsafe_arena_release_item_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.QueryItemInfoRes.item_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::CategoryItem* temp = _impl_.item_info_;
  _impl_.item_info_ = nullptr;
  return temp;
}
inline ::prpc::CategoryItem* QueryItemInfoRes::_internal_mutable_item_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.item_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::CategoryItem>(GetArenaForAllocation());
    _impl_.item_info_ = reinterpret_cast<::prpc::CategoryItem*>(p);
  }
  return _impl_.item_info_;
}
inline ::prpc::CategoryItem* QueryItemInfoRes::mutable_item_info() {
  ::prpc::CategoryItem* _msg = _internal_mutable_item_info();
  // @@protoc_insertion_point(field_mutable:prpc.QueryItemInfoRes.item_info)
  return _msg;
}
inline void QueryItemInfoRes::set_allocated_item_info(::prpc::CategoryItem* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.item_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.item_info_ = reinterpret_cast<::prpc::CategoryItem*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.QueryItemInfoRes.item_info)
}

// .prpc.Video video_info = 2;
inline bool QueryItemInfoRes::has_video_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.video_info_ != nullptr);
  return value;
}
inline const ::prpc::Video& QueryItemInfoRes::_internal_video_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::Video* p = _impl_.video_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::Video&>(::prpc::_Video_default_instance_);
}
inline const ::prpc::Video& QueryItemInfoRes::video_info() const {
  // @@protoc_insertion_point(field_get:prpc.QueryItemInfoRes.video_info)
  return _internal_video_info();
}
inline void QueryItemInfoRes::unsafe_arena_set_allocated_video_info(::prpc::Video* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.video_info_);
  }
  _impl_.video_info_ = reinterpret_cast<::prpc::Video*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.QueryItemInfoRes.video_info)
}
inline ::prpc::Video* QueryItemInfoRes::release_video_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::prpc::Video* released = _impl_.video_info_;
  _impl_.video_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::Video* QueryItemInfoRes::unsafe_arena_release_video_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.QueryItemInfoRes.video_info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::prpc::Video* temp = _impl_.video_info_;
  _impl_.video_info_ = nullptr;
  return temp;
}
inline ::prpc::Video* QueryItemInfoRes::_internal_mutable_video_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.video_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::Video>(GetArenaForAllocation());
    _impl_.video_info_ = reinterpret_cast<::prpc::Video*>(p);
  }
  return _impl_.video_info_;
}
inline ::prpc::Video* QueryItemInfoRes::mutable_video_info() {
  ::prpc::Video* _msg = _internal_mutable_video_info();
  // @@protoc_insertion_point(field_mutable:prpc.QueryItemInfoRes.video_info)
  return _msg;
}
inline void QueryItemInfoRes::set_allocated_video_info(::prpc::Video* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.video_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.video_info_ = reinterpret_cast<::prpc::Video*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.QueryItemInfoRes.video_info)
}

// -------------------------------------------------------------------

// ShareItemReq

// int64 item_id = 1;
inline void ShareItemReq::clear_item_id() {
  _impl_.item_id_ = ::int64_t{0};
}
inline ::int64_t ShareItemReq::item_id() const {
  // @@protoc_insertion_point(field_get:prpc.ShareItemReq.item_id)
  return _internal_item_id();
}
inline void ShareItemReq::set_item_id(::int64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:prpc.ShareItemReq.item_id)
}
inline ::int64_t ShareItemReq::_internal_item_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.item_id_;
}
inline void ShareItemReq::_internal_set_item_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.item_id_ = value;
}

// -------------------------------------------------------------------

// ShareItemRes

// int64 item_id = 1;
inline void ShareItemRes::clear_item_id() {
  _impl_.item_id_ = ::int64_t{0};
}
inline ::int64_t ShareItemRes::item_id() const {
  // @@protoc_insertion_point(field_get:prpc.ShareItemRes.item_id)
  return _internal_item_id();
}
inline void ShareItemRes::set_item_id(::int64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:prpc.ShareItemRes.item_id)
}
inline ::int64_t ShareItemRes::_internal_item_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.item_id_;
}
inline void ShareItemRes::_internal_set_item_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.item_id_ = value;
}

// string share_id = 2;
inline void ShareItemRes::clear_share_id() {
  _impl_.share_id_.ClearToEmpty();
}
inline const std::string& ShareItemRes::share_id() const {
  // @@protoc_insertion_point(field_get:prpc.ShareItemRes.share_id)
  return _internal_share_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShareItemRes::set_share_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.ShareItemRes.share_id)
}
inline std::string* ShareItemRes::mutable_share_id() {
  std::string* _s = _internal_mutable_share_id();
  // @@protoc_insertion_point(field_mutable:prpc.ShareItemRes.share_id)
  return _s;
}
inline const std::string& ShareItemRes::_internal_share_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.share_id_.Get();
}
inline void ShareItemRes::_internal_set_share_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ShareItemRes::_internal_mutable_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.share_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ShareItemRes::release_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.ShareItemRes.share_id)
  return _impl_.share_id_.Release();
}
inline void ShareItemRes::set_allocated_share_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.share_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.share_id_.IsDefault()) {
          _impl_.share_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.ShareItemRes.share_id)
}

// -------------------------------------------------------------------

// QuerySharedItemsReq

// int64 user_id = 1;
inline void QuerySharedItemsReq::clear_user_id() {
  _impl_.user_id_ = ::int64_t{0};
}
inline ::int64_t QuerySharedItemsReq::user_id() const {
  // @@protoc_insertion_point(field_get:prpc.QuerySharedItemsReq.user_id)
  return _internal_user_id();
}
inline void QuerySharedItemsReq::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:prpc.QuerySharedItemsReq.user_id)
}
inline ::int64_t QuerySharedItemsReq::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void QuerySharedItemsReq::_internal_set_user_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// QuerySharedItemsRes

// repeated .prpc.SharedItem shared_items = 1;
inline int QuerySharedItemsRes::_internal_shared_items_size() const {
  return _internal_shared_items().size();
}
inline int QuerySharedItemsRes::shared_items_size() const {
  return _internal_shared_items_size();
}
inline ::prpc::SharedItem* QuerySharedItemsRes::mutable_shared_items(int index) {
  // @@protoc_insertion_point(field_mutable:prpc.QuerySharedItemsRes.shared_items)
  return _internal_mutable_shared_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prpc::SharedItem >*
QuerySharedItemsRes::mutable_shared_items() {
  // @@protoc_insertion_point(field_mutable_list:prpc.QuerySharedItemsRes.shared_items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_shared_items();
}
inline const ::prpc::SharedItem& QuerySharedItemsRes::shared_items(int index) const {
  // @@protoc_insertion_point(field_get:prpc.QuerySharedItemsRes.shared_items)
    return _internal_shared_items().Get(index);
}
inline ::prpc::SharedItem* QuerySharedItemsRes::add_shared_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::prpc::SharedItem* _add = _internal_mutable_shared_items()->Add();
  // @@protoc_insertion_point(field_add:prpc.QuerySharedItemsRes.shared_items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::prpc::SharedItem >&
QuerySharedItemsRes::shared_items() const {
  // @@protoc_insertion_point(field_list:prpc.QuerySharedItemsRes.shared_items)
  return _internal_shared_items();
}
inline const ::google::protobuf::RepeatedPtrField<::prpc::SharedItem>&
QuerySharedItemsRes::_internal_shared_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.shared_items_;
}
inline ::google::protobuf::RepeatedPtrField<::prpc::SharedItem>*
QuerySharedItemsRes::_internal_mutable_shared_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.shared_items_;
}

// -------------------------------------------------------------------

// DelSharedItemReq

// string share_id = 1;
inline void DelSharedItemReq::clear_share_id() {
  _impl_.share_id_.ClearToEmpty();
}
inline const std::string& DelSharedItemReq::share_id() const {
  // @@protoc_insertion_point(field_get:prpc.DelSharedItemReq.share_id)
  return _internal_share_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DelSharedItemReq::set_share_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.DelSharedItemReq.share_id)
}
inline std::string* DelSharedItemReq::mutable_share_id() {
  std::string* _s = _internal_mutable_share_id();
  // @@protoc_insertion_point(field_mutable:prpc.DelSharedItemReq.share_id)
  return _s;
}
inline const std::string& DelSharedItemReq::_internal_share_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.share_id_.Get();
}
inline void DelSharedItemReq::_internal_set_share_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.share_id_.Set(value, GetArenaForAllocation());
}
inline std::string* DelSharedItemReq::_internal_mutable_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.share_id_.Mutable( GetArenaForAllocation());
}
inline std::string* DelSharedItemReq::release_share_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.DelSharedItemReq.share_id)
  return _impl_.share_id_.Release();
}
inline void DelSharedItemReq::set_allocated_share_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.share_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.share_id_.IsDefault()) {
          _impl_.share_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.DelSharedItemReq.share_id)
}

// -------------------------------------------------------------------

// DelSharedItemRes

// -------------------------------------------------------------------

// SubtitleFile

// string name = 1;
inline void SubtitleFile::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SubtitleFile::name() const {
  // @@protoc_insertion_point(field_get:prpc.SubtitleFile.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtitleFile::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.SubtitleFile.name)
}
inline std::string* SubtitleFile::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:prpc.SubtitleFile.name)
  return _s;
}
inline const std::string& SubtitleFile::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SubtitleFile::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtitleFile::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtitleFile::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.SubtitleFile.name)
  return _impl_.name_.Release();
}
inline void SubtitleFile::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.SubtitleFile.name)
}

// bytes content = 2;
inline void SubtitleFile::clear_content() {
  _impl_.content_.ClearToEmpty();
}
inline const std::string& SubtitleFile::content() const {
  // @@protoc_insertion_point(field_get:prpc.SubtitleFile.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtitleFile::set_content(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.SubtitleFile.content)
}
inline std::string* SubtitleFile::mutable_content() {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:prpc.SubtitleFile.content)
  return _s;
}
inline const std::string& SubtitleFile::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_.Get();
}
inline void SubtitleFile::_internal_set_content(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtitleFile::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtitleFile::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.SubtitleFile.content)
  return _impl_.content_.Release();
}
inline void SubtitleFile::set_allocated_content(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.SubtitleFile.content)
}

// -------------------------------------------------------------------

// UploadSubtitleReq

// int64 item_id = 1;
inline void UploadSubtitleReq::clear_item_id() {
  _impl_.item_id_ = ::int64_t{0};
}
inline ::int64_t UploadSubtitleReq::item_id() const {
  // @@protoc_insertion_point(field_get:prpc.UploadSubtitleReq.item_id)
  return _internal_item_id();
}
inline void UploadSubtitleReq::set_item_id(::int64_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:prpc.UploadSubtitleReq.item_id)
}
inline ::int64_t UploadSubtitleReq::_internal_item_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.item_id_;
}
inline void UploadSubtitleReq::_internal_set_item_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.item_id_ = value;
}

// repeated .prpc.SubtitleFile subtitles = 2;
inline int UploadSubtitleReq::_internal_subtitles_size() const {
  return _internal_subtitles().size();
}
inline int UploadSubtitleReq::subtitles_size() const {
  return _internal_subtitles_size();
}
inline void UploadSubtitleReq::clear_subtitles() {
  _internal_mutable_subtitles()->Clear();
}
inline ::prpc::SubtitleFile* UploadSubtitleReq::mutable_subtitles(int index) {
  // @@protoc_insertion_point(field_mutable:prpc.UploadSubtitleReq.subtitles)
  return _internal_mutable_subtitles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prpc::SubtitleFile >*
UploadSubtitleReq::mutable_subtitles() {
  // @@protoc_insertion_point(field_mutable_list:prpc.UploadSubtitleReq.subtitles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_subtitles();
}
inline const ::prpc::SubtitleFile& UploadSubtitleReq::subtitles(int index) const {
  // @@protoc_insertion_point(field_get:prpc.UploadSubtitleReq.subtitles)
    return _internal_subtitles().Get(index);
}
inline ::prpc::SubtitleFile* UploadSubtitleReq::add_subtitles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::prpc::SubtitleFile* _add = _internal_mutable_subtitles()->Add();
  // @@protoc_insertion_point(field_add:prpc.UploadSubtitleReq.subtitles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::prpc::SubtitleFile >&
UploadSubtitleReq::subtitles() const {
  // @@protoc_insertion_point(field_list:prpc.UploadSubtitleReq.subtitles)
  return _internal_subtitles();
}
inline const ::google::protobuf::RepeatedPtrField<::prpc::SubtitleFile>&
UploadSubtitleReq::_internal_subtitles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subtitles_;
}
inline ::google::protobuf::RepeatedPtrField<::prpc::SubtitleFile>*
UploadSubtitleReq::_internal_mutable_subtitles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.subtitles_;
}

// -------------------------------------------------------------------

// UploadSubtitleRes

// -------------------------------------------------------------------

// GetBtMetaReq

// .prpc.DownloadRequest req = 1;
inline bool GetBtMetaReq::has_req() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.req_ != nullptr);
  return value;
}
inline const ::prpc::DownloadRequest& GetBtMetaReq::_internal_req() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::DownloadRequest* p = _impl_.req_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::DownloadRequest&>(::prpc::_DownloadRequest_default_instance_);
}
inline const ::prpc::DownloadRequest& GetBtMetaReq::req() const {
  // @@protoc_insertion_point(field_get:prpc.GetBtMetaReq.req)
  return _internal_req();
}
inline void GetBtMetaReq::unsafe_arena_set_allocated_req(::prpc::DownloadRequest* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.req_);
  }
  _impl_.req_ = reinterpret_cast<::prpc::DownloadRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.GetBtMetaReq.req)
}
inline ::prpc::DownloadRequest* GetBtMetaReq::release_req() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::DownloadRequest* released = _impl_.req_;
  _impl_.req_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::DownloadRequest* GetBtMetaReq::unsafe_arena_release_req() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.GetBtMetaReq.req)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::DownloadRequest* temp = _impl_.req_;
  _impl_.req_ = nullptr;
  return temp;
}
inline ::prpc::DownloadRequest* GetBtMetaReq::_internal_mutable_req() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.req_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::DownloadRequest>(GetArenaForAllocation());
    _impl_.req_ = reinterpret_cast<::prpc::DownloadRequest*>(p);
  }
  return _impl_.req_;
}
inline ::prpc::DownloadRequest* GetBtMetaReq::mutable_req() {
  ::prpc::DownloadRequest* _msg = _internal_mutable_req();
  // @@protoc_insertion_point(field_mutable:prpc.GetBtMetaReq.req)
  return _msg;
}
inline void GetBtMetaReq::set_allocated_req(::prpc::DownloadRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.req_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.req_ = reinterpret_cast<::prpc::DownloadRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.GetBtMetaReq.req)
}

// -------------------------------------------------------------------

// GetBtMetaRsp

// .prpc.TorrentInfo torrent_info = 1;
inline bool GetBtMetaRsp::has_torrent_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.torrent_info_ != nullptr);
  return value;
}
inline const ::prpc::TorrentInfo& GetBtMetaRsp::_internal_torrent_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::TorrentInfo* p = _impl_.torrent_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::TorrentInfo&>(::prpc::_TorrentInfo_default_instance_);
}
inline const ::prpc::TorrentInfo& GetBtMetaRsp::torrent_info() const {
  // @@protoc_insertion_point(field_get:prpc.GetBtMetaRsp.torrent_info)
  return _internal_torrent_info();
}
inline void GetBtMetaRsp::unsafe_arena_set_allocated_torrent_info(::prpc::TorrentInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.torrent_info_);
  }
  _impl_.torrent_info_ = reinterpret_cast<::prpc::TorrentInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.GetBtMetaRsp.torrent_info)
}
inline ::prpc::TorrentInfo* GetBtMetaRsp::release_torrent_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::TorrentInfo* released = _impl_.torrent_info_;
  _impl_.torrent_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::TorrentInfo* GetBtMetaRsp::unsafe_arena_release_torrent_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.GetBtMetaRsp.torrent_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::TorrentInfo* temp = _impl_.torrent_info_;
  _impl_.torrent_info_ = nullptr;
  return temp;
}
inline ::prpc::TorrentInfo* GetBtMetaRsp::_internal_mutable_torrent_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.torrent_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::TorrentInfo>(GetArenaForAllocation());
    _impl_.torrent_info_ = reinterpret_cast<::prpc::TorrentInfo*>(p);
  }
  return _impl_.torrent_info_;
}
inline ::prpc::TorrentInfo* GetBtMetaRsp::mutable_torrent_info() {
  ::prpc::TorrentInfo* _msg = _internal_mutable_torrent_info();
  // @@protoc_insertion_point(field_mutable:prpc.GetBtMetaRsp.torrent_info)
  return _msg;
}
inline void GetBtMetaRsp::set_allocated_torrent_info(::prpc::TorrentInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.torrent_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.torrent_info_ = reinterpret_cast<::prpc::TorrentInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.GetBtMetaRsp.torrent_info)
}

// -------------------------------------------------------------------

// NewBtHlsTaskReq

// .prpc.DownloadRequest req = 1;
inline bool NewBtHlsTaskReq::has_req() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.req_ != nullptr);
  return value;
}
inline const ::prpc::DownloadRequest& NewBtHlsTaskReq::_internal_req() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::DownloadRequest* p = _impl_.req_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::DownloadRequest&>(::prpc::_DownloadRequest_default_instance_);
}
inline const ::prpc::DownloadRequest& NewBtHlsTaskReq::req() const {
  // @@protoc_insertion_point(field_get:prpc.NewBtHlsTaskReq.req)
  return _internal_req();
}
inline void NewBtHlsTaskReq::unsafe_arena_set_allocated_req(::prpc::DownloadRequest* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.req_);
  }
  _impl_.req_ = reinterpret_cast<::prpc::DownloadRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.NewBtHlsTaskReq.req)
}
inline ::prpc::DownloadRequest* NewBtHlsTaskReq::release_req() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::DownloadRequest* released = _impl_.req_;
  _impl_.req_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::DownloadRequest* NewBtHlsTaskReq::unsafe_arena_release_req() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.NewBtHlsTaskReq.req)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::DownloadRequest* temp = _impl_.req_;
  _impl_.req_ = nullptr;
  return temp;
}
inline ::prpc::DownloadRequest* NewBtHlsTaskReq::_internal_mutable_req() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.req_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::DownloadRequest>(GetArenaForAllocation());
    _impl_.req_ = reinterpret_cast<::prpc::DownloadRequest*>(p);
  }
  return _impl_.req_;
}
inline ::prpc::DownloadRequest* NewBtHlsTaskReq::mutable_req() {
  ::prpc::DownloadRequest* _msg = _internal_mutable_req();
  // @@protoc_insertion_point(field_mutable:prpc.NewBtHlsTaskReq.req)
  return _msg;
}
inline void NewBtHlsTaskReq::set_allocated_req(::prpc::DownloadRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.req_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.req_ = reinterpret_cast<::prpc::DownloadRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.NewBtHlsTaskReq.req)
}

// int64 category_parent_id = 2;
inline void NewBtHlsTaskReq::clear_category_parent_id() {
  _impl_.category_parent_id_ = ::int64_t{0};
}
inline ::int64_t NewBtHlsTaskReq::category_parent_id() const {
  // @@protoc_insertion_point(field_get:prpc.NewBtHlsTaskReq.category_parent_id)
  return _internal_category_parent_id();
}
inline void NewBtHlsTaskReq::set_category_parent_id(::int64_t value) {
  _internal_set_category_parent_id(value);
  // @@protoc_insertion_point(field_set:prpc.NewBtHlsTaskReq.category_parent_id)
}
inline ::int64_t NewBtHlsTaskReq::_internal_category_parent_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.category_parent_id_;
}
inline void NewBtHlsTaskReq::_internal_set_category_parent_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_parent_id_ = value;
}

// bool recursive_new_path = 3;
inline void NewBtHlsTaskReq::clear_recursive_new_path() {
  _impl_.recursive_new_path_ = false;
}
inline bool NewBtHlsTaskReq::recursive_new_path() const {
  // @@protoc_insertion_point(field_get:prpc.NewBtHlsTaskReq.recursive_new_path)
  return _internal_recursive_new_path();
}
inline void NewBtHlsTaskReq::set_recursive_new_path(bool value) {
  _internal_set_recursive_new_path(value);
  // @@protoc_insertion_point(field_set:prpc.NewBtHlsTaskReq.recursive_new_path)
}
inline bool NewBtHlsTaskReq::_internal_recursive_new_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.recursive_new_path_;
}
inline void NewBtHlsTaskReq::_internal_set_recursive_new_path(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.recursive_new_path_ = value;
}

// -------------------------------------------------------------------

// NewBtHlsTaskRsp

// -------------------------------------------------------------------

// Room

// .prpc.Room.Type type = 1;
inline void Room::clear_type() {
  _impl_.type_ = 0;
}
inline ::prpc::Room_Type Room::type() const {
  // @@protoc_insertion_point(field_get:prpc.Room.type)
  return _internal_type();
}
inline void Room::set_type(::prpc::Room_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:prpc.Room.type)
}
inline ::prpc::Room_Type Room::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::prpc::Room_Type>(_impl_.type_);
}
inline void Room::_internal_set_type(::prpc::Room_Type value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// int64 id = 2;
inline void Room::clear_id() {
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Room::id() const {
  // @@protoc_insertion_point(field_get:prpc.Room.id)
  return _internal_id();
}
inline void Room::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:prpc.Room.id)
}
inline ::int64_t Room::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Room::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// JoinChatRoomReq

// .prpc.Room room = 1;
inline bool JoinChatRoomReq::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline void JoinChatRoomReq::clear_room() {
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::prpc::Room& JoinChatRoomReq::_internal_room() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::Room* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::Room&>(::prpc::_Room_default_instance_);
}
inline const ::prpc::Room& JoinChatRoomReq::room() const {
  // @@protoc_insertion_point(field_get:prpc.JoinChatRoomReq.room)
  return _internal_room();
}
inline void JoinChatRoomReq::unsafe_arena_set_allocated_room(::prpc::Room* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::prpc::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.JoinChatRoomReq.room)
}
inline ::prpc::Room* JoinChatRoomReq::release_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::Room* released = _impl_.room_;
  _impl_.room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::Room* JoinChatRoomReq::unsafe_arena_release_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.JoinChatRoomReq.room)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::Room* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::prpc::Room* JoinChatRoomReq::_internal_mutable_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.room_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::Room>(GetArenaForAllocation());
    _impl_.room_ = reinterpret_cast<::prpc::Room*>(p);
  }
  return _impl_.room_;
}
inline ::prpc::Room* JoinChatRoomReq::mutable_room() {
  ::prpc::Room* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:prpc.JoinChatRoomReq.room)
  return _msg;
}
inline void JoinChatRoomReq::set_allocated_room(::prpc::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::prpc::Room*>(_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::prpc::Room*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.room_ = reinterpret_cast<::prpc::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.JoinChatRoomReq.room)
}

// -------------------------------------------------------------------

// ChatMessage

// int64 user_id = 1;
inline void ChatMessage::clear_user_id() {
  _impl_.user_id_ = ::int64_t{0};
}
inline ::int64_t ChatMessage::user_id() const {
  // @@protoc_insertion_point(field_get:prpc.ChatMessage.user_id)
  return _internal_user_id();
}
inline void ChatMessage::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:prpc.ChatMessage.user_id)
}
inline ::int64_t ChatMessage::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void ChatMessage::_internal_set_user_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// string user_name = 2;
inline void ChatMessage::clear_user_name() {
  _impl_.user_name_.ClearToEmpty();
}
inline const std::string& ChatMessage::user_name() const {
  // @@protoc_insertion_point(field_get:prpc.ChatMessage.user_name)
  return _internal_user_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChatMessage::set_user_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.ChatMessage.user_name)
}
inline std::string* ChatMessage::mutable_user_name() {
  std::string* _s = _internal_mutable_user_name();
  // @@protoc_insertion_point(field_mutable:prpc.ChatMessage.user_name)
  return _s;
}
inline const std::string& ChatMessage::_internal_user_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_name_.Get();
}
inline void ChatMessage::_internal_set_user_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ChatMessage::_internal_mutable_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.user_name_.Mutable( GetArenaForAllocation());
}
inline std::string* ChatMessage::release_user_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.ChatMessage.user_name)
  return _impl_.user_name_.Release();
}
inline void ChatMessage::set_allocated_user_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_name_.IsDefault()) {
          _impl_.user_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.ChatMessage.user_name)
}

// int64 sent_time = 3;
inline void ChatMessage::clear_sent_time() {
  _impl_.sent_time_ = ::int64_t{0};
}
inline ::int64_t ChatMessage::sent_time() const {
  // @@protoc_insertion_point(field_get:prpc.ChatMessage.sent_time)
  return _internal_sent_time();
}
inline void ChatMessage::set_sent_time(::int64_t value) {
  _internal_set_sent_time(value);
  // @@protoc_insertion_point(field_set:prpc.ChatMessage.sent_time)
}
inline ::int64_t ChatMessage::_internal_sent_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sent_time_;
}
inline void ChatMessage::_internal_set_sent_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sent_time_ = value;
}

// string msg = 4;
inline void ChatMessage::clear_msg() {
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& ChatMessage::msg() const {
  // @@protoc_insertion_point(field_get:prpc.ChatMessage.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChatMessage::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.ChatMessage.msg)
}
inline std::string* ChatMessage::mutable_msg() {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:prpc.ChatMessage.msg)
  return _s;
}
inline const std::string& ChatMessage::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void ChatMessage::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_.Set(value, GetArenaForAllocation());
}
inline std::string* ChatMessage::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msg_.Mutable( GetArenaForAllocation());
}
inline std::string* ChatMessage::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.ChatMessage.msg)
  return _impl_.msg_.Release();
}
inline void ChatMessage::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.ChatMessage.msg)
}

// -------------------------------------------------------------------

// JoinChatRoomRes

// .prpc.Room room = 1;
inline bool JoinChatRoomRes::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline void JoinChatRoomRes::clear_room() {
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::prpc::Room& JoinChatRoomRes::_internal_room() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::Room* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::Room&>(::prpc::_Room_default_instance_);
}
inline const ::prpc::Room& JoinChatRoomRes::room() const {
  // @@protoc_insertion_point(field_get:prpc.JoinChatRoomRes.room)
  return _internal_room();
}
inline void JoinChatRoomRes::unsafe_arena_set_allocated_room(::prpc::Room* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::prpc::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.JoinChatRoomRes.room)
}
inline ::prpc::Room* JoinChatRoomRes::release_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::Room* released = _impl_.room_;
  _impl_.room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::Room* JoinChatRoomRes::unsafe_arena_release_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.JoinChatRoomRes.room)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::Room* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::prpc::Room* JoinChatRoomRes::_internal_mutable_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.room_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::Room>(GetArenaForAllocation());
    _impl_.room_ = reinterpret_cast<::prpc::Room*>(p);
  }
  return _impl_.room_;
}
inline ::prpc::Room* JoinChatRoomRes::mutable_room() {
  ::prpc::Room* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:prpc.JoinChatRoomRes.room)
  return _msg;
}
inline void JoinChatRoomRes::set_allocated_room(::prpc::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::prpc::Room*>(_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::prpc::Room*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.room_ = reinterpret_cast<::prpc::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.JoinChatRoomRes.room)
}

// repeated .prpc.ChatMessage chat_msgs = 2;
inline int JoinChatRoomRes::_internal_chat_msgs_size() const {
  return _internal_chat_msgs().size();
}
inline int JoinChatRoomRes::chat_msgs_size() const {
  return _internal_chat_msgs_size();
}
inline void JoinChatRoomRes::clear_chat_msgs() {
  _internal_mutable_chat_msgs()->Clear();
}
inline ::prpc::ChatMessage* JoinChatRoomRes::mutable_chat_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:prpc.JoinChatRoomRes.chat_msgs)
  return _internal_mutable_chat_msgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prpc::ChatMessage >*
JoinChatRoomRes::mutable_chat_msgs() {
  // @@protoc_insertion_point(field_mutable_list:prpc.JoinChatRoomRes.chat_msgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_chat_msgs();
}
inline const ::prpc::ChatMessage& JoinChatRoomRes::chat_msgs(int index) const {
  // @@protoc_insertion_point(field_get:prpc.JoinChatRoomRes.chat_msgs)
    return _internal_chat_msgs().Get(index);
}
inline ::prpc::ChatMessage* JoinChatRoomRes::add_chat_msgs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::prpc::ChatMessage* _add = _internal_mutable_chat_msgs()->Add();
  // @@protoc_insertion_point(field_add:prpc.JoinChatRoomRes.chat_msgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::prpc::ChatMessage >&
JoinChatRoomRes::chat_msgs() const {
  // @@protoc_insertion_point(field_list:prpc.JoinChatRoomRes.chat_msgs)
  return _internal_chat_msgs();
}
inline const ::google::protobuf::RepeatedPtrField<::prpc::ChatMessage>&
JoinChatRoomRes::_internal_chat_msgs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.chat_msgs_;
}
inline ::google::protobuf::RepeatedPtrField<::prpc::ChatMessage>*
JoinChatRoomRes::_internal_mutable_chat_msgs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.chat_msgs_;
}

// -------------------------------------------------------------------

// SendMsg2ChatRoomReq

// .prpc.Room room = 1;
inline bool SendMsg2ChatRoomReq::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline void SendMsg2ChatRoomReq::clear_room() {
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::prpc::Room& SendMsg2ChatRoomReq::_internal_room() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::Room* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::Room&>(::prpc::_Room_default_instance_);
}
inline const ::prpc::Room& SendMsg2ChatRoomReq::room() const {
  // @@protoc_insertion_point(field_get:prpc.SendMsg2ChatRoomReq.room)
  return _internal_room();
}
inline void SendMsg2ChatRoomReq::unsafe_arena_set_allocated_room(::prpc::Room* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::prpc::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.SendMsg2ChatRoomReq.room)
}
inline ::prpc::Room* SendMsg2ChatRoomReq::release_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::Room* released = _impl_.room_;
  _impl_.room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::Room* SendMsg2ChatRoomReq::unsafe_arena_release_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.SendMsg2ChatRoomReq.room)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::prpc::Room* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::prpc::Room* SendMsg2ChatRoomReq::_internal_mutable_room() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.room_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::Room>(GetArenaForAllocation());
    _impl_.room_ = reinterpret_cast<::prpc::Room*>(p);
  }
  return _impl_.room_;
}
inline ::prpc::Room* SendMsg2ChatRoomReq::mutable_room() {
  ::prpc::Room* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:prpc.SendMsg2ChatRoomReq.room)
  return _msg;
}
inline void SendMsg2ChatRoomReq::set_allocated_room(::prpc::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::prpc::Room*>(_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::prpc::Room*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.room_ = reinterpret_cast<::prpc::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.SendMsg2ChatRoomReq.room)
}

// .prpc.ChatMessage chat_msg = 2;
inline bool SendMsg2ChatRoomReq::has_chat_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chat_msg_ != nullptr);
  return value;
}
inline void SendMsg2ChatRoomReq::clear_chat_msg() {
  if (_impl_.chat_msg_ != nullptr) _impl_.chat_msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::prpc::ChatMessage& SendMsg2ChatRoomReq::_internal_chat_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::prpc::ChatMessage* p = _impl_.chat_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::prpc::ChatMessage&>(::prpc::_ChatMessage_default_instance_);
}
inline const ::prpc::ChatMessage& SendMsg2ChatRoomReq::chat_msg() const {
  // @@protoc_insertion_point(field_get:prpc.SendMsg2ChatRoomReq.chat_msg)
  return _internal_chat_msg();
}
inline void SendMsg2ChatRoomReq::unsafe_arena_set_allocated_chat_msg(::prpc::ChatMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chat_msg_);
  }
  _impl_.chat_msg_ = reinterpret_cast<::prpc::ChatMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:prpc.SendMsg2ChatRoomReq.chat_msg)
}
inline ::prpc::ChatMessage* SendMsg2ChatRoomReq::release_chat_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::prpc::ChatMessage* released = _impl_.chat_msg_;
  _impl_.chat_msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::prpc::ChatMessage* SendMsg2ChatRoomReq::unsafe_arena_release_chat_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.SendMsg2ChatRoomReq.chat_msg)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::prpc::ChatMessage* temp = _impl_.chat_msg_;
  _impl_.chat_msg_ = nullptr;
  return temp;
}
inline ::prpc::ChatMessage* SendMsg2ChatRoomReq::_internal_mutable_chat_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.chat_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::prpc::ChatMessage>(GetArenaForAllocation());
    _impl_.chat_msg_ = reinterpret_cast<::prpc::ChatMessage*>(p);
  }
  return _impl_.chat_msg_;
}
inline ::prpc::ChatMessage* SendMsg2ChatRoomReq::mutable_chat_msg() {
  ::prpc::ChatMessage* _msg = _internal_mutable_chat_msg();
  // @@protoc_insertion_point(field_mutable:prpc.SendMsg2ChatRoomReq.chat_msg)
  return _msg;
}
inline void SendMsg2ChatRoomReq::set_allocated_chat_msg(::prpc::ChatMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::prpc::ChatMessage*>(_impl_.chat_msg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::prpc::ChatMessage*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.chat_msg_ = reinterpret_cast<::prpc::ChatMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:prpc.SendMsg2ChatRoomReq.chat_msg)
}

// -------------------------------------------------------------------

// SendMsg2ChatRoomRes

// -------------------------------------------------------------------

// AddMagnetCategoryReq

// int64 parent_id = 1;
inline void AddMagnetCategoryReq::clear_parent_id() {
  _impl_.parent_id_ = ::int64_t{0};
}
inline ::int64_t AddMagnetCategoryReq::parent_id() const {
  // @@protoc_insertion_point(field_get:prpc.AddMagnetCategoryReq.parent_id)
  return _internal_parent_id();
}
inline void AddMagnetCategoryReq::set_parent_id(::int64_t value) {
  _internal_set_parent_id(value);
  // @@protoc_insertion_point(field_set:prpc.AddMagnetCategoryReq.parent_id)
}
inline ::int64_t AddMagnetCategoryReq::_internal_parent_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parent_id_;
}
inline void AddMagnetCategoryReq::_internal_set_parent_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_id_ = value;
}

// string category_name = 2;
inline void AddMagnetCategoryReq::clear_category_name() {
  _impl_.category_name_.ClearToEmpty();
}
inline const std::string& AddMagnetCategoryReq::category_name() const {
  // @@protoc_insertion_point(field_get:prpc.AddMagnetCategoryReq.category_name)
  return _internal_category_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddMagnetCategoryReq::set_category_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.AddMagnetCategoryReq.category_name)
}
inline std::string* AddMagnetCategoryReq::mutable_category_name() {
  std::string* _s = _internal_mutable_category_name();
  // @@protoc_insertion_point(field_mutable:prpc.AddMagnetCategoryReq.category_name)
  return _s;
}
inline const std::string& AddMagnetCategoryReq::_internal_category_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.category_name_.Get();
}
inline void AddMagnetCategoryReq::_internal_set_category_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_name_.Set(value, GetArenaForAllocation());
}
inline std::string* AddMagnetCategoryReq::_internal_mutable_category_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.category_name_.Mutable( GetArenaForAllocation());
}
inline std::string* AddMagnetCategoryReq::release_category_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.AddMagnetCategoryReq.category_name)
  return _impl_.category_name_.Release();
}
inline void AddMagnetCategoryReq::set_allocated_category_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.category_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.category_name_.IsDefault()) {
          _impl_.category_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.AddMagnetCategoryReq.category_name)
}

// string introduce = 3;
inline void AddMagnetCategoryReq::clear_introduce() {
  _impl_.introduce_.ClearToEmpty();
}
inline const std::string& AddMagnetCategoryReq::introduce() const {
  // @@protoc_insertion_point(field_get:prpc.AddMagnetCategoryReq.introduce)
  return _internal_introduce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddMagnetCategoryReq::set_introduce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.introduce_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.AddMagnetCategoryReq.introduce)
}
inline std::string* AddMagnetCategoryReq::mutable_introduce() {
  std::string* _s = _internal_mutable_introduce();
  // @@protoc_insertion_point(field_mutable:prpc.AddMagnetCategoryReq.introduce)
  return _s;
}
inline const std::string& AddMagnetCategoryReq::_internal_introduce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.introduce_.Get();
}
inline void AddMagnetCategoryReq::_internal_set_introduce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.introduce_.Set(value, GetArenaForAllocation());
}
inline std::string* AddMagnetCategoryReq::_internal_mutable_introduce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.introduce_.Mutable( GetArenaForAllocation());
}
inline std::string* AddMagnetCategoryReq::release_introduce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.AddMagnetCategoryReq.introduce)
  return _impl_.introduce_.Release();
}
inline void AddMagnetCategoryReq::set_allocated_introduce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.introduce_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.introduce_.IsDefault()) {
          _impl_.introduce_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.AddMagnetCategoryReq.introduce)
}

// -------------------------------------------------------------------

// AddMagnetCategoryRsp

// -------------------------------------------------------------------

// AddMagnetUriReq

// int64 category_id = 1;
inline void AddMagnetUriReq::clear_category_id() {
  _impl_.category_id_ = ::int64_t{0};
}
inline ::int64_t AddMagnetUriReq::category_id() const {
  // @@protoc_insertion_point(field_get:prpc.AddMagnetUriReq.category_id)
  return _internal_category_id();
}
inline void AddMagnetUriReq::set_category_id(::int64_t value) {
  _internal_set_category_id(value);
  // @@protoc_insertion_point(field_set:prpc.AddMagnetUriReq.category_id)
}
inline ::int64_t AddMagnetUriReq::_internal_category_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.category_id_;
}
inline void AddMagnetUriReq::_internal_set_category_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_id_ = value;
}

// string magnet_uri = 2;
inline void AddMagnetUriReq::clear_magnet_uri() {
  _impl_.magnet_uri_.ClearToEmpty();
}
inline const std::string& AddMagnetUriReq::magnet_uri() const {
  // @@protoc_insertion_point(field_get:prpc.AddMagnetUriReq.magnet_uri)
  return _internal_magnet_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddMagnetUriReq::set_magnet_uri(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.magnet_uri_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.AddMagnetUriReq.magnet_uri)
}
inline std::string* AddMagnetUriReq::mutable_magnet_uri() {
  std::string* _s = _internal_mutable_magnet_uri();
  // @@protoc_insertion_point(field_mutable:prpc.AddMagnetUriReq.magnet_uri)
  return _s;
}
inline const std::string& AddMagnetUriReq::_internal_magnet_uri() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.magnet_uri_.Get();
}
inline void AddMagnetUriReq::_internal_set_magnet_uri(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.magnet_uri_.Set(value, GetArenaForAllocation());
}
inline std::string* AddMagnetUriReq::_internal_mutable_magnet_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.magnet_uri_.Mutable( GetArenaForAllocation());
}
inline std::string* AddMagnetUriReq::release_magnet_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.AddMagnetUriReq.magnet_uri)
  return _impl_.magnet_uri_.Release();
}
inline void AddMagnetUriReq::set_allocated_magnet_uri(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.magnet_uri_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.magnet_uri_.IsDefault()) {
          _impl_.magnet_uri_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.AddMagnetUriReq.magnet_uri)
}

// string introduce = 3;
inline void AddMagnetUriReq::clear_introduce() {
  _impl_.introduce_.ClearToEmpty();
}
inline const std::string& AddMagnetUriReq::introduce() const {
  // @@protoc_insertion_point(field_get:prpc.AddMagnetUriReq.introduce)
  return _internal_introduce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddMagnetUriReq::set_introduce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.introduce_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.AddMagnetUriReq.introduce)
}
inline std::string* AddMagnetUriReq::mutable_introduce() {
  std::string* _s = _internal_mutable_introduce();
  // @@protoc_insertion_point(field_mutable:prpc.AddMagnetUriReq.introduce)
  return _s;
}
inline const std::string& AddMagnetUriReq::_internal_introduce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.introduce_.Get();
}
inline void AddMagnetUriReq::_internal_set_introduce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.introduce_.Set(value, GetArenaForAllocation());
}
inline std::string* AddMagnetUriReq::_internal_mutable_introduce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.introduce_.Mutable( GetArenaForAllocation());
}
inline std::string* AddMagnetUriReq::release_introduce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.AddMagnetUriReq.introduce)
  return _impl_.introduce_.Release();
}
inline void AddMagnetUriReq::set_allocated_introduce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.introduce_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.introduce_.IsDefault()) {
          _impl_.introduce_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.AddMagnetUriReq.introduce)
}

// -------------------------------------------------------------------

// AddMagnetUriRsp

// -------------------------------------------------------------------

// QueryMagnetReq

// int64 parent_id = 1;
inline void QueryMagnetReq::clear_parent_id() {
  _impl_.parent_id_ = ::int64_t{0};
}
inline ::int64_t QueryMagnetReq::parent_id() const {
  // @@protoc_insertion_point(field_get:prpc.QueryMagnetReq.parent_id)
  return _internal_parent_id();
}
inline void QueryMagnetReq::set_parent_id(::int64_t value) {
  _internal_set_parent_id(value);
  // @@protoc_insertion_point(field_set:prpc.QueryMagnetReq.parent_id)
}
inline ::int64_t QueryMagnetReq::_internal_parent_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parent_id_;
}
inline void QueryMagnetReq::_internal_set_parent_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_id_ = value;
}

// string search_cond = 2;
inline void QueryMagnetReq::clear_search_cond() {
  _impl_.search_cond_.ClearToEmpty();
}
inline const std::string& QueryMagnetReq::search_cond() const {
  // @@protoc_insertion_point(field_get:prpc.QueryMagnetReq.search_cond)
  return _internal_search_cond();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryMagnetReq::set_search_cond(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.search_cond_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.QueryMagnetReq.search_cond)
}
inline std::string* QueryMagnetReq::mutable_search_cond() {
  std::string* _s = _internal_mutable_search_cond();
  // @@protoc_insertion_point(field_mutable:prpc.QueryMagnetReq.search_cond)
  return _s;
}
inline const std::string& QueryMagnetReq::_internal_search_cond() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.search_cond_.Get();
}
inline void QueryMagnetReq::_internal_set_search_cond(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.search_cond_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryMagnetReq::_internal_mutable_search_cond() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.search_cond_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryMagnetReq::release_search_cond() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.QueryMagnetReq.search_cond)
  return _impl_.search_cond_.Release();
}
inline void QueryMagnetReq::set_allocated_search_cond(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.search_cond_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.search_cond_.IsDefault()) {
          _impl_.search_cond_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.QueryMagnetReq.search_cond)
}

// int32 page_num = 3;
inline void QueryMagnetReq::clear_page_num() {
  _impl_.page_num_ = 0;
}
inline ::int32_t QueryMagnetReq::page_num() const {
  // @@protoc_insertion_point(field_get:prpc.QueryMagnetReq.page_num)
  return _internal_page_num();
}
inline void QueryMagnetReq::set_page_num(::int32_t value) {
  _internal_set_page_num(value);
  // @@protoc_insertion_point(field_set:prpc.QueryMagnetReq.page_num)
}
inline ::int32_t QueryMagnetReq::_internal_page_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_num_;
}
inline void QueryMagnetReq::_internal_set_page_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_num_ = value;
}

// int32 rows = 4;
inline void QueryMagnetReq::clear_rows() {
  _impl_.rows_ = 0;
}
inline ::int32_t QueryMagnetReq::rows() const {
  // @@protoc_insertion_point(field_get:prpc.QueryMagnetReq.rows)
  return _internal_rows();
}
inline void QueryMagnetReq::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:prpc.QueryMagnetReq.rows)
}
inline ::int32_t QueryMagnetReq::_internal_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rows_;
}
inline void QueryMagnetReq::_internal_set_rows(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rows_ = value;
}

// -------------------------------------------------------------------

// QueryMagnetRsp

// repeated .prpc.CategoryItem items = 1;
inline int QueryMagnetRsp::_internal_items_size() const {
  return _internal_items().size();
}
inline int QueryMagnetRsp::items_size() const {
  return _internal_items_size();
}
inline ::prpc::CategoryItem* QueryMagnetRsp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:prpc.QueryMagnetRsp.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >*
QueryMagnetRsp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:prpc.QueryMagnetRsp.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::prpc::CategoryItem& QueryMagnetRsp::items(int index) const {
  // @@protoc_insertion_point(field_get:prpc.QueryMagnetRsp.items)
    return _internal_items().Get(index);
}
inline ::prpc::CategoryItem* QueryMagnetRsp::add_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::prpc::CategoryItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:prpc.QueryMagnetRsp.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::prpc::CategoryItem >&
QueryMagnetRsp::items() const {
  // @@protoc_insertion_point(field_list:prpc.QueryMagnetRsp.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>&
QueryMagnetRsp::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::prpc::CategoryItem>*
QueryMagnetRsp::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// int32 total_row_count = 2;
inline void QueryMagnetRsp::clear_total_row_count() {
  _impl_.total_row_count_ = 0;
}
inline ::int32_t QueryMagnetRsp::total_row_count() const {
  // @@protoc_insertion_point(field_get:prpc.QueryMagnetRsp.total_row_count)
  return _internal_total_row_count();
}
inline void QueryMagnetRsp::set_total_row_count(::int32_t value) {
  _internal_set_total_row_count(value);
  // @@protoc_insertion_point(field_set:prpc.QueryMagnetRsp.total_row_count)
}
inline ::int32_t QueryMagnetRsp::_internal_total_row_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_row_count_;
}
inline void QueryMagnetRsp::_internal_set_total_row_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_row_count_ = value;
}

// -------------------------------------------------------------------

// DelMagnetCategoryReq

// int64 id = 1;
inline void DelMagnetCategoryReq::clear_id() {
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DelMagnetCategoryReq::id() const {
  // @@protoc_insertion_point(field_get:prpc.DelMagnetCategoryReq.id)
  return _internal_id();
}
inline void DelMagnetCategoryReq::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:prpc.DelMagnetCategoryReq.id)
}
inline ::int64_t DelMagnetCategoryReq::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void DelMagnetCategoryReq::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DelMagnetCategoryRsp

// -------------------------------------------------------------------

// GetTorrentsReq

// -------------------------------------------------------------------

// GetTorrentsRsp

// repeated .prpc.TorrentInfo torrent_info = 1;
inline int GetTorrentsRsp::_internal_torrent_info_size() const {
  return _internal_torrent_info().size();
}
inline int GetTorrentsRsp::torrent_info_size() const {
  return _internal_torrent_info_size();
}
inline ::prpc::TorrentInfo* GetTorrentsRsp::mutable_torrent_info(int index) {
  // @@protoc_insertion_point(field_mutable:prpc.GetTorrentsRsp.torrent_info)
  return _internal_mutable_torrent_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prpc::TorrentInfo >*
GetTorrentsRsp::mutable_torrent_info() {
  // @@protoc_insertion_point(field_mutable_list:prpc.GetTorrentsRsp.torrent_info)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_torrent_info();
}
inline const ::prpc::TorrentInfo& GetTorrentsRsp::torrent_info(int index) const {
  // @@protoc_insertion_point(field_get:prpc.GetTorrentsRsp.torrent_info)
    return _internal_torrent_info().Get(index);
}
inline ::prpc::TorrentInfo* GetTorrentsRsp::add_torrent_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::prpc::TorrentInfo* _add = _internal_mutable_torrent_info()->Add();
  // @@protoc_insertion_point(field_add:prpc.GetTorrentsRsp.torrent_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::prpc::TorrentInfo >&
GetTorrentsRsp::torrent_info() const {
  // @@protoc_insertion_point(field_list:prpc.GetTorrentsRsp.torrent_info)
  return _internal_torrent_info();
}
inline const ::google::protobuf::RepeatedPtrField<::prpc::TorrentInfo>&
GetTorrentsRsp::_internal_torrent_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.torrent_info_;
}
inline ::google::protobuf::RepeatedPtrField<::prpc::TorrentInfo>*
GetTorrentsRsp::_internal_mutable_torrent_info() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.torrent_info_;
}

// -------------------------------------------------------------------

// RenameItemsReq

// int64 parent_id = 1;
inline void RenameItemsReq::clear_parent_id() {
  _impl_.parent_id_ = ::int64_t{0};
}
inline ::int64_t RenameItemsReq::parent_id() const {
  // @@protoc_insertion_point(field_get:prpc.RenameItemsReq.parent_id)
  return _internal_parent_id();
}
inline void RenameItemsReq::set_parent_id(::int64_t value) {
  _internal_set_parent_id(value);
  // @@protoc_insertion_point(field_set:prpc.RenameItemsReq.parent_id)
}
inline ::int64_t RenameItemsReq::_internal_parent_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parent_id_;
}
inline void RenameItemsReq::_internal_set_parent_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_id_ = value;
}

// .prpc.CategoryItem.Type type = 2;
inline void RenameItemsReq::clear_type() {
  _impl_.type_ = 0;
}
inline ::prpc::CategoryItem_Type RenameItemsReq::type() const {
  // @@protoc_insertion_point(field_get:prpc.RenameItemsReq.type)
  return _internal_type();
}
inline void RenameItemsReq::set_type(::prpc::CategoryItem_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:prpc.RenameItemsReq.type)
}
inline ::prpc::CategoryItem_Type RenameItemsReq::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::prpc::CategoryItem_Type>(_impl_.type_);
}
inline void RenameItemsReq::_internal_set_type(::prpc::CategoryItem_Type value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// string ref_name = 3;
inline void RenameItemsReq::clear_ref_name() {
  _impl_.ref_name_.ClearToEmpty();
}
inline const std::string& RenameItemsReq::ref_name() const {
  // @@protoc_insertion_point(field_get:prpc.RenameItemsReq.ref_name)
  return _internal_ref_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RenameItemsReq::set_ref_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ref_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:prpc.RenameItemsReq.ref_name)
}
inline std::string* RenameItemsReq::mutable_ref_name() {
  std::string* _s = _internal_mutable_ref_name();
  // @@protoc_insertion_point(field_mutable:prpc.RenameItemsReq.ref_name)
  return _s;
}
inline const std::string& RenameItemsReq::_internal_ref_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ref_name_.Get();
}
inline void RenameItemsReq::_internal_set_ref_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ref_name_.Set(value, GetArenaForAllocation());
}
inline std::string* RenameItemsReq::_internal_mutable_ref_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ref_name_.Mutable( GetArenaForAllocation());
}
inline std::string* RenameItemsReq::release_ref_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:prpc.RenameItemsReq.ref_name)
  return _impl_.ref_name_.Release();
}
inline void RenameItemsReq::set_allocated_ref_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ref_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ref_name_.IsDefault()) {
          _impl_.ref_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:prpc.RenameItemsReq.ref_name)
}

// -------------------------------------------------------------------

// RenameItemsRsp

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace prpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::prpc::Room_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::prpc::Room_Type>() {
  return ::prpc::Room_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_user_2eproto_2epb_2eh

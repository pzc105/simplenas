// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt.proto

#include "bt.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace prpc {
      template <typename>
PROTOBUF_CONSTEXPR InitedSessionReq::InitedSessionReq(::_pbi::ConstantInitialized) {}
struct InitedSessionReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitedSessionReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitedSessionReqDefaultTypeInternal() {}
  union {
    InitedSessionReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitedSessionReqDefaultTypeInternal _InitedSessionReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR InitedSessionRsp::InitedSessionRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.inited_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct InitedSessionRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitedSessionRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitedSessionRspDefaultTypeInternal() {}
  union {
    InitedSessionRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitedSessionRspDefaultTypeInternal _InitedSessionRsp_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR InitSessionReq::InitSessionReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.proxy_host_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.proxy_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.resume_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.proxy_port_)*/ 0,
      /*decltype(_impl_.upload_rate_limit_)*/ 0,
      /*decltype(_impl_.download_rate_limit_)*/ 0,
      /*decltype(_impl_.hashing_threads_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct InitSessionReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitSessionReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitSessionReqDefaultTypeInternal() {}
  union {
    InitSessionReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitSessionReqDefaultTypeInternal _InitSessionReq_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR InitSessionRsp::InitSessionRsp(::_pbi::ConstantInitialized) {}
struct InitSessionRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitSessionRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitSessionRspDefaultTypeInternal() {}
  union {
    InitSessionRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitSessionRspDefaultTypeInternal _InitSessionRsp_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BtFile::BtFile(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.index_)*/ 0,
      /*decltype(_impl_.st_)*/ 0,
      /*decltype(_impl_.total_size_)*/ ::int64_t{0},
      /*decltype(_impl_.downloaded_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BtFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BtFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BtFileDefaultTypeInternal() {}
  union {
    BtFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BtFileDefaultTypeInternal _BtFile_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TorrentInfo::TorrentInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.files_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.save_path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.info_hash_)*/ nullptr,
      /*decltype(_impl_.total_size_)*/ ::int64_t{0},
      /*decltype(_impl_.piece_length_)*/ 0,
      /*decltype(_impl_.num_pieces_)*/ 0,
    } {}
struct TorrentInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TorrentInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TorrentInfoDefaultTypeInternal() {}
  union {
    TorrentInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TorrentInfoDefaultTypeInternal _TorrentInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TorrentStatus::TorrentStatus(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.info_hash_)*/ nullptr,
      /*decltype(_impl_.total_done_)*/ ::int64_t{0},
      /*decltype(_impl_.download_payload_rate_)*/ 0,
      /*decltype(_impl_.progress_)*/ 0,
      /*decltype(_impl_.total_)*/ ::int64_t{0},
      /*decltype(_impl_.num_peers_)*/ 0,
      /*decltype(_impl_.state_)*/ 0,
    } {}
struct TorrentStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TorrentStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TorrentStatusDefaultTypeInternal() {}
  union {
    TorrentStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TorrentStatusDefaultTypeInternal _TorrentStatus_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DownloadRequest::DownloadRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.content_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.save_path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DownloadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadRequestDefaultTypeInternal() {}
  union {
    DownloadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadRequestDefaultTypeInternal _DownloadRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR InfoHash::InfoHash(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.hash_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.version_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct InfoHashDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoHashDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoHashDefaultTypeInternal() {}
  union {
    InfoHash _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoHashDefaultTypeInternal _InfoHash_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DownloadRespone::DownloadRespone(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct DownloadResponeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadResponeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadResponeDefaultTypeInternal() {}
  union {
    DownloadRespone _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadResponeDefaultTypeInternal _DownloadRespone_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetMagnetUriReq::GetMagnetUriReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.content_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.info_hash_)*/ nullptr,
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct GetMagnetUriReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMagnetUriReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMagnetUriReqDefaultTypeInternal() {}
  union {
    GetMagnetUriReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMagnetUriReqDefaultTypeInternal _GetMagnetUriReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetMagnetUriRsp::GetMagnetUriRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.magnet_uri_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct GetMagnetUriRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMagnetUriRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMagnetUriRspDefaultTypeInternal() {}
  union {
    GetMagnetUriRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMagnetUriRspDefaultTypeInternal _GetMagnetUriRsp_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetResumeDataReq::GetResumeDataReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct GetResumeDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResumeDataReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResumeDataReqDefaultTypeInternal() {}
  union {
    GetResumeDataReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResumeDataReqDefaultTypeInternal _GetResumeDataReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetResumeDataRsp::GetResumeDataRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.resume_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetResumeDataRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResumeDataRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResumeDataRspDefaultTypeInternal() {}
  union {
    GetResumeDataRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResumeDataRspDefaultTypeInternal _GetResumeDataRsp_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetTorrentInfoReq::GetTorrentInfoReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct GetTorrentInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTorrentInfoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTorrentInfoReqDefaultTypeInternal() {}
  union {
    GetTorrentInfoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTorrentInfoReqDefaultTypeInternal _GetTorrentInfoReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetTorrentInfoRsp::GetTorrentInfoRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.torrent_info_)*/ nullptr,
    } {}
struct GetTorrentInfoRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTorrentInfoRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTorrentInfoRspDefaultTypeInternal() {}
  union {
    GetTorrentInfoRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTorrentInfoRspDefaultTypeInternal _GetTorrentInfoRsp_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetSessionParamsReq::GetSessionParamsReq(::_pbi::ConstantInitialized) {}
struct GetSessionParamsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSessionParamsReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSessionParamsReqDefaultTypeInternal() {}
  union {
    GetSessionParamsReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSessionParamsReqDefaultTypeInternal _GetSessionParamsReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetSessionParamsRsp::GetSessionParamsRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.resume_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetSessionParamsRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSessionParamsRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSessionParamsRspDefaultTypeInternal() {}
  union {
    GetSessionParamsRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSessionParamsRspDefaultTypeInternal _GetSessionParamsRsp_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetBtStatusReq::GetBtStatusReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct GetBtStatusReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBtStatusReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBtStatusReqDefaultTypeInternal() {}
  union {
    GetBtStatusReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBtStatusReqDefaultTypeInternal _GetBtStatusReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetBtStatusRsp::GetBtStatusRsp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.status_)*/ nullptr,
    } {}
struct GetBtStatusRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBtStatusRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBtStatusRspDefaultTypeInternal() {}
  union {
    GetBtStatusRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBtStatusRspDefaultTypeInternal _GetBtStatusRsp_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BtStatusRequest::BtStatusRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.info_hash_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BtStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BtStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BtStatusRequestDefaultTypeInternal() {}
  union {
    BtStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BtStatusRequestDefaultTypeInternal _BtStatusRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BtStatusRespone::BtStatusRespone(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.status_array_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BtStatusResponeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BtStatusResponeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BtStatusResponeDefaultTypeInternal() {}
  union {
    BtStatusRespone _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BtStatusResponeDefaultTypeInternal _BtStatusRespone_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TorrentInfoReq::TorrentInfoReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.info_hash_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TorrentInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TorrentInfoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TorrentInfoReqDefaultTypeInternal() {}
  union {
    TorrentInfoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TorrentInfoReqDefaultTypeInternal _TorrentInfoReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TorrentInfoRes::TorrentInfoRes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ti_)*/ nullptr,
    } {}
struct TorrentInfoResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TorrentInfoResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TorrentInfoResDefaultTypeInternal() {}
  union {
    TorrentInfoRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TorrentInfoResDefaultTypeInternal _TorrentInfoRes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RemoveTorrentReq::RemoveTorrentReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct RemoveTorrentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveTorrentReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveTorrentReqDefaultTypeInternal() {}
  union {
    RemoveTorrentReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveTorrentReqDefaultTypeInternal _RemoveTorrentReq_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RemoveTorrentRes::RemoveTorrentRes(::_pbi::ConstantInitialized) {}
struct RemoveTorrentResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveTorrentResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveTorrentResDefaultTypeInternal() {}
  union {
    RemoveTorrentRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveTorrentResDefaultTypeInternal _RemoveTorrentRes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FileProgressReq::FileProgressReq(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct FileProgressReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileProgressReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileProgressReqDefaultTypeInternal() {}
  union {
    FileProgressReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileProgressReqDefaultTypeInternal _FileProgressReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FileProgressRes::FileProgressRes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.files_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
    } {}
struct FileProgressResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileProgressResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileProgressResDefaultTypeInternal() {}
  union {
    FileProgressRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileProgressResDefaultTypeInternal _FileProgressRes_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FileCompletedReq::FileCompletedReq(::_pbi::ConstantInitialized) {}
struct FileCompletedReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileCompletedReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileCompletedReqDefaultTypeInternal() {}
  union {
    FileCompletedReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileCompletedReqDefaultTypeInternal _FileCompletedReq_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FileCompletedRes::FileCompletedRes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.info_hash_)*/ nullptr,
      /*decltype(_impl_.file_index_)*/ 0,
    } {}
struct FileCompletedResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileCompletedResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileCompletedResDefaultTypeInternal() {}
  union {
    FileCompletedRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileCompletedResDefaultTypeInternal _FileCompletedRes_default_instance_;
}  // namespace prpc
static ::_pb::Metadata file_level_metadata_bt_2eproto[30];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_bt_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_bt_2eproto = nullptr;
const ::uint32_t TableStruct_bt_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::InitedSessionReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::InitedSessionRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::InitedSessionRsp, _impl_.inited_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _impl_.proxy_host_),
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _impl_.proxy_port_),
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _impl_.proxy_type_),
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _impl_.upload_rate_limit_),
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _impl_.download_rate_limit_),
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _impl_.hashing_threads_),
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionReq, _impl_.resume_data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::InitSessionRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::BtFile, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::BtFile, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::prpc::BtFile, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::prpc::BtFile, _impl_.st_),
    PROTOBUF_FIELD_OFFSET(::prpc::BtFile, _impl_.total_size_),
    PROTOBUF_FIELD_OFFSET(::prpc::BtFile, _impl_.downloaded_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_.info_hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_.save_path_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_.files_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_.total_size_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_.piece_length_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfo, _impl_.num_pieces_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.info_hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.download_payload_rate_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.total_done_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.progress_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.num_peers_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentStatus, _impl_.state_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::DownloadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::DownloadRequest, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::prpc::DownloadRequest, _impl_.content_),
    PROTOBUF_FIELD_OFFSET(::prpc::DownloadRequest, _impl_.save_path_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::InfoHash, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::InfoHash, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::prpc::InfoHash, _impl_.hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::DownloadRespone, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::DownloadRespone, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::DownloadRespone, _impl_.info_hash_),
    0,
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriReq, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriReq, _impl_.content_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriReq, _impl_.info_hash_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriRsp, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriRsp, _impl_.info_hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetMagnetUriRsp, _impl_.magnet_uri_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::prpc::GetResumeDataReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetResumeDataReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetResumeDataReq, _impl_.info_hash_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::GetResumeDataRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetResumeDataRsp, _impl_.resume_data_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetTorrentInfoReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetTorrentInfoReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetTorrentInfoReq, _impl_.info_hash_),
    0,
    PROTOBUF_FIELD_OFFSET(::prpc::GetTorrentInfoRsp, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetTorrentInfoRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetTorrentInfoRsp, _impl_.torrent_info_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::GetSessionParamsReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::GetSessionParamsRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetSessionParamsRsp, _impl_.resume_data_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetBtStatusReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetBtStatusReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetBtStatusReq, _impl_.info_hash_),
    0,
    PROTOBUF_FIELD_OFFSET(::prpc::GetBtStatusRsp, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::GetBtStatusRsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::GetBtStatusRsp, _impl_.status_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::BtStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::BtStatusRequest, _impl_.info_hash_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::BtStatusRespone, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::BtStatusRespone, _impl_.status_array_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfoReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfoReq, _impl_.info_hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfoRes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfoRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::TorrentInfoRes, _impl_.ti_),
    0,
    PROTOBUF_FIELD_OFFSET(::prpc::RemoveTorrentReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::RemoveTorrentReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RemoveTorrentReq, _impl_.info_hash_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RemoveTorrentRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::FileProgressReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::FileProgressReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::FileProgressReq, _impl_.info_hash_),
    0,
    PROTOBUF_FIELD_OFFSET(::prpc::FileProgressRes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::FileProgressRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::FileProgressRes, _impl_.info_hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::FileProgressRes, _impl_.files_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::FileCompletedReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::FileCompletedRes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::FileCompletedRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::FileCompletedRes, _impl_.info_hash_),
    PROTOBUF_FIELD_OFFSET(::prpc::FileCompletedRes, _impl_.file_index_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::prpc::InitedSessionReq)},
        {8, -1, -1, sizeof(::prpc::InitedSessionRsp)},
        {17, -1, -1, sizeof(::prpc::InitSessionReq)},
        {32, -1, -1, sizeof(::prpc::InitSessionRsp)},
        {40, -1, -1, sizeof(::prpc::BtFile)},
        {53, 68, -1, sizeof(::prpc::TorrentInfo)},
        {75, 91, -1, sizeof(::prpc::TorrentStatus)},
        {99, -1, -1, sizeof(::prpc::DownloadRequest)},
        {110, -1, -1, sizeof(::prpc::InfoHash)},
        {120, 129, -1, sizeof(::prpc::DownloadRespone)},
        {130, 141, -1, sizeof(::prpc::GetMagnetUriReq)},
        {144, 154, -1, sizeof(::prpc::GetMagnetUriRsp)},
        {156, 165, -1, sizeof(::prpc::GetResumeDataReq)},
        {166, -1, -1, sizeof(::prpc::GetResumeDataRsp)},
        {175, 184, -1, sizeof(::prpc::GetTorrentInfoReq)},
        {185, 194, -1, sizeof(::prpc::GetTorrentInfoRsp)},
        {195, -1, -1, sizeof(::prpc::GetSessionParamsReq)},
        {203, -1, -1, sizeof(::prpc::GetSessionParamsRsp)},
        {212, 221, -1, sizeof(::prpc::GetBtStatusReq)},
        {222, 231, -1, sizeof(::prpc::GetBtStatusRsp)},
        {232, -1, -1, sizeof(::prpc::BtStatusRequest)},
        {241, -1, -1, sizeof(::prpc::BtStatusRespone)},
        {250, -1, -1, sizeof(::prpc::TorrentInfoReq)},
        {259, 268, -1, sizeof(::prpc::TorrentInfoRes)},
        {269, 278, -1, sizeof(::prpc::RemoveTorrentReq)},
        {279, -1, -1, sizeof(::prpc::RemoveTorrentRes)},
        {287, 296, -1, sizeof(::prpc::FileProgressReq)},
        {297, 307, -1, sizeof(::prpc::FileProgressRes)},
        {309, -1, -1, sizeof(::prpc::FileCompletedReq)},
        {317, 327, -1, sizeof(::prpc::FileCompletedRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::prpc::_InitedSessionReq_default_instance_._instance,
    &::prpc::_InitedSessionRsp_default_instance_._instance,
    &::prpc::_InitSessionReq_default_instance_._instance,
    &::prpc::_InitSessionRsp_default_instance_._instance,
    &::prpc::_BtFile_default_instance_._instance,
    &::prpc::_TorrentInfo_default_instance_._instance,
    &::prpc::_TorrentStatus_default_instance_._instance,
    &::prpc::_DownloadRequest_default_instance_._instance,
    &::prpc::_InfoHash_default_instance_._instance,
    &::prpc::_DownloadRespone_default_instance_._instance,
    &::prpc::_GetMagnetUriReq_default_instance_._instance,
    &::prpc::_GetMagnetUriRsp_default_instance_._instance,
    &::prpc::_GetResumeDataReq_default_instance_._instance,
    &::prpc::_GetResumeDataRsp_default_instance_._instance,
    &::prpc::_GetTorrentInfoReq_default_instance_._instance,
    &::prpc::_GetTorrentInfoRsp_default_instance_._instance,
    &::prpc::_GetSessionParamsReq_default_instance_._instance,
    &::prpc::_GetSessionParamsRsp_default_instance_._instance,
    &::prpc::_GetBtStatusReq_default_instance_._instance,
    &::prpc::_GetBtStatusRsp_default_instance_._instance,
    &::prpc::_BtStatusRequest_default_instance_._instance,
    &::prpc::_BtStatusRespone_default_instance_._instance,
    &::prpc::_TorrentInfoReq_default_instance_._instance,
    &::prpc::_TorrentInfoRes_default_instance_._instance,
    &::prpc::_RemoveTorrentReq_default_instance_._instance,
    &::prpc::_RemoveTorrentRes_default_instance_._instance,
    &::prpc::_FileProgressReq_default_instance_._instance,
    &::prpc::_FileProgressRes_default_instance_._instance,
    &::prpc::_FileCompletedReq_default_instance_._instance,
    &::prpc::_FileCompletedRes_default_instance_._instance,
};
const char descriptor_table_protodef_bt_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\010bt.proto\022\004prpc\"\022\n\020InitedSessionReq\"\"\n\020"
    "InitedSessionRsp\022\016\n\006inited\030\001 \001(\010\"\262\001\n\016Ini"
    "tSessionReq\022\022\n\nproxy_host\030\001 \001(\t\022\022\n\nproxy"
    "_port\030\002 \001(\005\022\022\n\nproxy_type\030\003 \001(\t\022\031\n\021uploa"
    "d_rate_limit\030\004 \001(\005\022\033\n\023download_rate_limi"
    "t\030\005 \001(\005\022\027\n\017hashing_threads\030\006 \001(\005\022\023\n\013resu"
    "me_data\030\007 \001(\014\"\020\n\016InitSessionRsp\"\240\001\n\006BtFi"
    "le\022\014\n\004name\030\001 \001(\t\022\r\n\005index\030\002 \001(\005\022\036\n\002st\030\003 "
    "\001(\0162\022.prpc.BtFile.State\022\022\n\ntotal_size\030\004 "
    "\001(\003\022\022\n\ndownloaded\030\005 \001(\003\"1\n\005State\022\010\n\004stop"
    "\020\000\022\017\n\013downloading\020\001\022\r\n\tcompleted\020\002\"\254\001\n\013T"
    "orrentInfo\022!\n\tinfo_hash\030\001 \001(\0132\016.prpc.Inf"
    "oHash\022\014\n\004name\030\002 \001(\t\022\021\n\tsave_path\030\003 \001(\t\022\033"
    "\n\005files\030\004 \003(\0132\014.prpc.BtFile\022\022\n\ntotal_siz"
    "e\030\005 \001(\003\022\024\n\014piece_length\030\006 \001(\005\022\022\n\nnum_pie"
    "ces\030\007 \001(\005\"\311\001\n\rTorrentStatus\022!\n\tinfo_hash"
    "\030\001 \001(\0132\016.prpc.InfoHash\022\014\n\004name\030\002 \001(\t\022\035\n\025"
    "download_payload_rate\030\003 \001(\005\022\022\n\ntotal_don"
    "e\030\004 \001(\003\022\r\n\005total\030\005 \001(\003\022\020\n\010progress\030\006 \001(\002"
    "\022\021\n\tnum_peers\030\007 \001(\005\022 \n\005state\030\010 \001(\0162\021.prp"
    "c.BtStateEnum\"\225\001\n\017DownloadRequest\022+\n\004typ"
    "e\030\001 \001(\0162\035.prpc.DownloadRequest.ReqType\022\017"
    "\n\007content\030\002 \001(\014\022\021\n\tsave_path\030\003 \001(\t\"1\n\007Re"
    "qType\022\r\n\tMagnetUri\020\000\022\013\n\007Torrent\020\001\022\n\n\006Res"
    "ume\020\002\")\n\010InfoHash\022\017\n\007version\030\001 \001(\005\022\014\n\004ha"
    "sh\030\002 \001(\014\"4\n\017DownloadRespone\022!\n\tinfo_hash"
    "\030\001 \001(\0132\016.prpc.InfoHash\"\230\001\n\017GetMagnetUriR"
    "eq\022+\n\004type\030\001 \001(\0162\035.prpc.GetMagnetUriReq."
    "ReqType\022\017\n\007content\030\002 \001(\014\022!\n\tinfo_hash\030\003 "
    "\001(\0132\016.prpc.InfoHash\"$\n\007ReqType\022\013\n\007Torren"
    "t\020\000\022\014\n\010InfoHash\020\001\"H\n\017GetMagnetUriRsp\022!\n\t"
    "info_hash\030\001 \001(\0132\016.prpc.InfoHash\022\022\n\nmagne"
    "t_uri\030\002 \001(\t\"5\n\020GetResumeDataReq\022!\n\tinfo_"
    "hash\030\001 \001(\0132\016.prpc.InfoHash\"\'\n\020GetResumeD"
    "ataRsp\022\023\n\013resume_data\030\001 \001(\014\"6\n\021GetTorren"
    "tInfoReq\022!\n\tinfo_hash\030\001 \001(\0132\016.prpc.InfoH"
    "ash\"<\n\021GetTorrentInfoRsp\022\'\n\014torrent_info"
    "\030\001 \001(\0132\021.prpc.TorrentInfo\"\025\n\023GetSessionP"
    "aramsReq\"*\n\023GetSessionParamsRsp\022\023\n\013resum"
    "e_data\030\001 \001(\014\"3\n\016GetBtStatusReq\022!\n\tinfo_h"
    "ash\030\001 \001(\0132\016.prpc.InfoHash\"5\n\016GetBtStatus"
    "Rsp\022#\n\006status\030\001 \001(\0132\023.prpc.TorrentStatus"
    "\"4\n\017BtStatusRequest\022!\n\tinfo_hash\030\001 \003(\0132\016"
    ".prpc.InfoHash\"<\n\017BtStatusRespone\022)\n\014sta"
    "tus_array\030\001 \003(\0132\023.prpc.TorrentStatus\"3\n\016"
    "TorrentInfoReq\022!\n\tinfo_hash\030\001 \003(\0132\016.prpc"
    ".InfoHash\"/\n\016TorrentInfoRes\022\035\n\002ti\030\001 \001(\0132"
    "\021.prpc.TorrentInfo\"5\n\020RemoveTorrentReq\022!"
    "\n\tinfo_hash\030\001 \001(\0132\016.prpc.InfoHash\"\022\n\020Rem"
    "oveTorrentRes\"4\n\017FileProgressReq\022!\n\tinfo"
    "_hash\030\001 \001(\0132\016.prpc.InfoHash\"Q\n\017FileProgr"
    "essRes\022!\n\tinfo_hash\030\001 \001(\0132\016.prpc.InfoHas"
    "h\022\033\n\005files\030\002 \003(\0132\014.prpc.BtFile\"\022\n\020FileCo"
    "mpletedReq\"I\n\020FileCompletedRes\022!\n\tinfo_h"
    "ash\030\001 \001(\0132\016.prpc.InfoHash\022\022\n\nfile_index\030"
    "\002 \001(\005*\216\001\n\013BtStateEnum\022\013\n\007unknown\020\000\022\022\n\016ch"
    "ecking_files\020\001\022\030\n\024downloading_metadata\020\002"
    "\022\017\n\013downloading\020\003\022\014\n\010finished\020\004\022\013\n\007seedi"
    "ng\020\005\022\030\n\024checking_resume_data\020\0072\210\006\n\tBtSer"
    "vice\022\?\n\rInitedSession\022\026.prpc.InitedSessi"
    "onReq\032\026.prpc.InitedSessionRsp\0229\n\013InitSes"
    "sion\022\024.prpc.InitSessionReq\032\024.prpc.InitSe"
    "ssionRsp\0225\n\005Parse\022\025.prpc.DownloadRequest"
    "\032\025.prpc.DownloadRespone\0228\n\010Download\022\025.pr"
    "pc.DownloadRequest\032\025.prpc.DownloadRespon"
    "e\022\?\n\rRemoveTorrent\022\026.prpc.RemoveTorrentR"
    "eq\032\026.prpc.RemoveTorrentRes\022<\n\014GetMagnetU"
    "ri\022\025.prpc.GetMagnetUriReq\032\025.prpc.GetMagn"
    "etUriRsp\022\?\n\rGetResumeData\022\026.prpc.GetResu"
    "meDataReq\032\026.prpc.GetResumeDataRsp\022B\n\016Get"
    "TorrentInfo\022\027.prpc.GetTorrentInfoReq\032\027.p"
    "rpc.GetTorrentInfoRsp\0229\n\013GetBtStatus\022\024.p"
    "rpc.GetBtStatusReq\032\024.prpc.GetBtStatusRsp"
    "\022H\n\020GetSessionParams\022\031.prpc.GetSessionPa"
    "ramsReq\032\031.prpc.GetSessionParamsRsp\022>\n\nOn"
    "BtStatus\022\025.prpc.BtStatusRequest\032\025.prpc.B"
    "tStatusRespone(\0010\001\022E\n\017OnFileCompleted\022\026."
    "prpc.FileCompletedReq\032\026.prpc.FileComplet"
    "edRes(\0010\001B\010Z\006./prpcb\006proto3"
};
static ::absl::once_flag descriptor_table_bt_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_bt_2eproto = {
    false,
    false,
    3147,
    descriptor_table_protodef_bt_2eproto,
    "bt.proto",
    &descriptor_table_bt_2eproto_once,
    nullptr,
    0,
    30,
    schemas,
    file_default_instances,
    TableStruct_bt_2eproto::offsets,
    file_level_metadata_bt_2eproto,
    file_level_enum_descriptors_bt_2eproto,
    file_level_service_descriptors_bt_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_bt_2eproto_getter() {
  return &descriptor_table_bt_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_bt_2eproto(&descriptor_table_bt_2eproto);
namespace prpc {
const ::google::protobuf::EnumDescriptor* BtFile_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_bt_2eproto);
  return file_level_enum_descriptors_bt_2eproto[0];
}
bool BtFile_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr BtFile_State BtFile::stop;
constexpr BtFile_State BtFile::downloading;
constexpr BtFile_State BtFile::completed;
constexpr BtFile_State BtFile::State_MIN;
constexpr BtFile_State BtFile::State_MAX;
constexpr int BtFile::State_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* DownloadRequest_ReqType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_bt_2eproto);
  return file_level_enum_descriptors_bt_2eproto[1];
}
bool DownloadRequest_ReqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr DownloadRequest_ReqType DownloadRequest::MagnetUri;
constexpr DownloadRequest_ReqType DownloadRequest::Torrent;
constexpr DownloadRequest_ReqType DownloadRequest::Resume;
constexpr DownloadRequest_ReqType DownloadRequest::ReqType_MIN;
constexpr DownloadRequest_ReqType DownloadRequest::ReqType_MAX;
constexpr int DownloadRequest::ReqType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GetMagnetUriReq_ReqType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_bt_2eproto);
  return file_level_enum_descriptors_bt_2eproto[2];
}
bool GetMagnetUriReq_ReqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GetMagnetUriReq_ReqType GetMagnetUriReq::Torrent;
constexpr GetMagnetUriReq_ReqType GetMagnetUriReq::InfoHash;
constexpr GetMagnetUriReq_ReqType GetMagnetUriReq::ReqType_MIN;
constexpr GetMagnetUriReq_ReqType GetMagnetUriReq::ReqType_MAX;
constexpr int GetMagnetUriReq::ReqType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* BtStateEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_bt_2eproto);
  return file_level_enum_descriptors_bt_2eproto[3];
}
bool BtStateEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class InitedSessionReq::_Internal {
 public:
};

InitedSessionReq::InitedSessionReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.InitedSessionReq)
}
InitedSessionReq::InitedSessionReq(const InitedSessionReq& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  InitedSessionReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.InitedSessionReq)
}




const ::google::protobuf::Message::ClassData InitedSessionReq::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*InitedSessionReq::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata InitedSessionReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[0]);
}
// ===================================================================

class InitedSessionRsp::_Internal {
 public:
};

InitedSessionRsp::InitedSessionRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.InitedSessionRsp)
}
InitedSessionRsp::InitedSessionRsp(const InitedSessionRsp& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prpc.InitedSessionRsp)
}
inline void InitedSessionRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.inited_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
InitedSessionRsp::~InitedSessionRsp() {
  // @@protoc_insertion_point(destructor:prpc.InitedSessionRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InitedSessionRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void InitedSessionRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void InitedSessionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.InitedSessionRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inited_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InitedSessionRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> InitedSessionRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InitedSessionRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool inited = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InitedSessionRsp, _impl_.inited_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InitedSessionRsp, _impl_.inited_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool inited = 1;
    {PROTOBUF_FIELD_OFFSET(InitedSessionRsp, _impl_.inited_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* InitedSessionRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.InitedSessionRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool inited = 1;
  if (this->_internal_inited() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_inited(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.InitedSessionRsp)
  return target;
}

::size_t InitedSessionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.InitedSessionRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool inited = 1;
  if (this->_internal_inited() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InitedSessionRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    InitedSessionRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*InitedSessionRsp::GetClassData() const { return &_class_data_; }


void InitedSessionRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InitedSessionRsp*>(&to_msg);
  auto& from = static_cast<const InitedSessionRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.InitedSessionRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_inited() != 0) {
    _this->_internal_set_inited(from._internal_inited());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitedSessionRsp::CopyFrom(const InitedSessionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.InitedSessionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InitedSessionRsp::IsInitialized() const {
  return true;
}

void InitedSessionRsp::InternalSwap(InitedSessionRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.inited_, other->_impl_.inited_);
}

::google::protobuf::Metadata InitedSessionRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[1]);
}
// ===================================================================

class InitSessionReq::_Internal {
 public:
};

InitSessionReq::InitSessionReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.InitSessionReq)
}
InitSessionReq::InitSessionReq(const InitSessionReq& from) : ::google::protobuf::Message() {
  InitSessionReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.proxy_host_){},
      decltype(_impl_.proxy_type_){},
      decltype(_impl_.resume_data_){},
      decltype(_impl_.proxy_port_){},
      decltype(_impl_.upload_rate_limit_){},
      decltype(_impl_.download_rate_limit_){},
      decltype(_impl_.hashing_threads_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.proxy_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proxy_host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proxy_host().empty()) {
    _this->_impl_.proxy_host_.Set(from._internal_proxy_host(), _this->GetArenaForAllocation());
  }
  _impl_.proxy_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proxy_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proxy_type().empty()) {
    _this->_impl_.proxy_type_.Set(from._internal_proxy_type(), _this->GetArenaForAllocation());
  }
  _impl_.resume_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resume_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resume_data().empty()) {
    _this->_impl_.resume_data_.Set(from._internal_resume_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.proxy_port_, &from._impl_.proxy_port_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.hashing_threads_) -
    reinterpret_cast<char*>(&_impl_.proxy_port_)) + sizeof(_impl_.hashing_threads_));

  // @@protoc_insertion_point(copy_constructor:prpc.InitSessionReq)
}
inline void InitSessionReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.proxy_host_){},
      decltype(_impl_.proxy_type_){},
      decltype(_impl_.resume_data_){},
      decltype(_impl_.proxy_port_){0},
      decltype(_impl_.upload_rate_limit_){0},
      decltype(_impl_.download_rate_limit_){0},
      decltype(_impl_.hashing_threads_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.proxy_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proxy_host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.proxy_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.proxy_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resume_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resume_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
InitSessionReq::~InitSessionReq() {
  // @@protoc_insertion_point(destructor:prpc.InitSessionReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InitSessionReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.proxy_host_.Destroy();
  _impl_.proxy_type_.Destroy();
  _impl_.resume_data_.Destroy();
}
void InitSessionReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void InitSessionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.InitSessionReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proxy_host_.ClearToEmpty();
  _impl_.proxy_type_.ClearToEmpty();
  _impl_.resume_data_.ClearToEmpty();
  ::memset(&_impl_.proxy_port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hashing_threads_) -
      reinterpret_cast<char*>(&_impl_.proxy_port_)) + sizeof(_impl_.hashing_threads_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InitSessionReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 48, 2> InitSessionReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InitSessionReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string proxy_host = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.proxy_host_)}},
    // int32 proxy_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitSessionReq, _impl_.proxy_port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.proxy_port_)}},
    // string proxy_type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.proxy_type_)}},
    // int32 upload_rate_limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitSessionReq, _impl_.upload_rate_limit_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.upload_rate_limit_)}},
    // int32 download_rate_limit = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitSessionReq, _impl_.download_rate_limit_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.download_rate_limit_)}},
    // int32 hashing_threads = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitSessionReq, _impl_.hashing_threads_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.hashing_threads_)}},
    // bytes resume_data = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.resume_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string proxy_host = 1;
    {PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.proxy_host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 proxy_port = 2;
    {PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.proxy_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string proxy_type = 3;
    {PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.proxy_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 upload_rate_limit = 4;
    {PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.upload_rate_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 download_rate_limit = 5;
    {PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.download_rate_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 hashing_threads = 6;
    {PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.hashing_threads_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes resume_data = 7;
    {PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.resume_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\12\0\12\0\0\0\0"
    "prpc.InitSessionReq"
    "proxy_host"
    "proxy_type"
  }},
};

::uint8_t* InitSessionReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.InitSessionReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string proxy_host = 1;
  if (!this->_internal_proxy_host().empty()) {
    const std::string& _s = this->_internal_proxy_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.InitSessionReq.proxy_host");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 proxy_port = 2;
  if (this->_internal_proxy_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_proxy_port(), target);
  }

  // string proxy_type = 3;
  if (!this->_internal_proxy_type().empty()) {
    const std::string& _s = this->_internal_proxy_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.InitSessionReq.proxy_type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 upload_rate_limit = 4;
  if (this->_internal_upload_rate_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_upload_rate_limit(), target);
  }

  // int32 download_rate_limit = 5;
  if (this->_internal_download_rate_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_download_rate_limit(), target);
  }

  // int32 hashing_threads = 6;
  if (this->_internal_hashing_threads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_hashing_threads(), target);
  }

  // bytes resume_data = 7;
  if (!this->_internal_resume_data().empty()) {
    const std::string& _s = this->_internal_resume_data();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.InitSessionReq)
  return target;
}

::size_t InitSessionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.InitSessionReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string proxy_host = 1;
  if (!this->_internal_proxy_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_proxy_host());
  }

  // string proxy_type = 3;
  if (!this->_internal_proxy_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_proxy_type());
  }

  // bytes resume_data = 7;
  if (!this->_internal_resume_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_resume_data());
  }

  // int32 proxy_port = 2;
  if (this->_internal_proxy_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_proxy_port());
  }

  // int32 upload_rate_limit = 4;
  if (this->_internal_upload_rate_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_upload_rate_limit());
  }

  // int32 download_rate_limit = 5;
  if (this->_internal_download_rate_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_download_rate_limit());
  }

  // int32 hashing_threads = 6;
  if (this->_internal_hashing_threads() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hashing_threads());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InitSessionReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    InitSessionReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*InitSessionReq::GetClassData() const { return &_class_data_; }


void InitSessionReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InitSessionReq*>(&to_msg);
  auto& from = static_cast<const InitSessionReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.InitSessionReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proxy_host().empty()) {
    _this->_internal_set_proxy_host(from._internal_proxy_host());
  }
  if (!from._internal_proxy_type().empty()) {
    _this->_internal_set_proxy_type(from._internal_proxy_type());
  }
  if (!from._internal_resume_data().empty()) {
    _this->_internal_set_resume_data(from._internal_resume_data());
  }
  if (from._internal_proxy_port() != 0) {
    _this->_internal_set_proxy_port(from._internal_proxy_port());
  }
  if (from._internal_upload_rate_limit() != 0) {
    _this->_internal_set_upload_rate_limit(from._internal_upload_rate_limit());
  }
  if (from._internal_download_rate_limit() != 0) {
    _this->_internal_set_download_rate_limit(from._internal_download_rate_limit());
  }
  if (from._internal_hashing_threads() != 0) {
    _this->_internal_set_hashing_threads(from._internal_hashing_threads());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitSessionReq::CopyFrom(const InitSessionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.InitSessionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InitSessionReq::IsInitialized() const {
  return true;
}

void InitSessionReq::InternalSwap(InitSessionReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proxy_host_, lhs_arena,
                                       &other->_impl_.proxy_host_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proxy_type_, lhs_arena,
                                       &other->_impl_.proxy_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resume_data_, lhs_arena,
                                       &other->_impl_.resume_data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.hashing_threads_)
      + sizeof(InitSessionReq::_impl_.hashing_threads_)
      - PROTOBUF_FIELD_OFFSET(InitSessionReq, _impl_.proxy_port_)>(
          reinterpret_cast<char*>(&_impl_.proxy_port_),
          reinterpret_cast<char*>(&other->_impl_.proxy_port_));
}

::google::protobuf::Metadata InitSessionReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[2]);
}
// ===================================================================

class InitSessionRsp::_Internal {
 public:
};

InitSessionRsp::InitSessionRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.InitSessionRsp)
}
InitSessionRsp::InitSessionRsp(const InitSessionRsp& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  InitSessionRsp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.InitSessionRsp)
}




const ::google::protobuf::Message::ClassData InitSessionRsp::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*InitSessionRsp::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata InitSessionRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[3]);
}
// ===================================================================

class BtFile::_Internal {
 public:
};

BtFile::BtFile(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.BtFile)
}
BtFile::BtFile(const BtFile& from) : ::google::protobuf::Message() {
  BtFile* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.index_){},
      decltype(_impl_.st_){},
      decltype(_impl_.total_size_){},
      decltype(_impl_.downloaded_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.index_, &from._impl_.index_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.downloaded_) -
    reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.downloaded_));

  // @@protoc_insertion_point(copy_constructor:prpc.BtFile)
}
inline void BtFile::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.index_){0},
      decltype(_impl_.st_){0},
      decltype(_impl_.total_size_){::int64_t{0}},
      decltype(_impl_.downloaded_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
BtFile::~BtFile() {
  // @@protoc_insertion_point(destructor:prpc.BtFile)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BtFile::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}
void BtFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BtFile::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.BtFile)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.downloaded_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.downloaded_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BtFile::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 24, 2> BtFile::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BtFile_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BtFile, _impl_.name_)}},
    // int32 index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BtFile, _impl_.index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BtFile, _impl_.index_)}},
    // .prpc.BtFile.State st = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BtFile, _impl_.st_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BtFile, _impl_.st_)}},
    // int64 total_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BtFile, _impl_.total_size_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BtFile, _impl_.total_size_)}},
    // int64 downloaded = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BtFile, _impl_.downloaded_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BtFile, _impl_.downloaded_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(BtFile, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 index = 2;
    {PROTOBUF_FIELD_OFFSET(BtFile, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .prpc.BtFile.State st = 3;
    {PROTOBUF_FIELD_OFFSET(BtFile, _impl_.st_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 total_size = 4;
    {PROTOBUF_FIELD_OFFSET(BtFile, _impl_.total_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 downloaded = 5;
    {PROTOBUF_FIELD_OFFSET(BtFile, _impl_.downloaded_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\13\4\0\0\0\0\0\0"
    "prpc.BtFile"
    "name"
  }},
};

::uint8_t* BtFile::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.BtFile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.BtFile.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 index = 2;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_index(), target);
  }

  // .prpc.BtFile.State st = 3;
  if (this->_internal_st() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_st(), target);
  }

  // int64 total_size = 4;
  if (this->_internal_total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_total_size(), target);
  }

  // int64 downloaded = 5;
  if (this->_internal_downloaded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_downloaded(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.BtFile)
  return target;
}

::size_t BtFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.BtFile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 index = 2;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  // .prpc.BtFile.State st = 3;
  if (this->_internal_st() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_st());
  }

  // int64 total_size = 4;
  if (this->_internal_total_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_size());
  }

  // int64 downloaded = 5;
  if (this->_internal_downloaded() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_downloaded());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BtFile::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BtFile::MergeImpl
};
const ::google::protobuf::Message::ClassData*BtFile::GetClassData() const { return &_class_data_; }


void BtFile::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BtFile*>(&to_msg);
  auto& from = static_cast<const BtFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.BtFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_st() != 0) {
    _this->_internal_set_st(from._internal_st());
  }
  if (from._internal_total_size() != 0) {
    _this->_internal_set_total_size(from._internal_total_size());
  }
  if (from._internal_downloaded() != 0) {
    _this->_internal_set_downloaded(from._internal_downloaded());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BtFile::CopyFrom(const BtFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.BtFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BtFile::IsInitialized() const {
  return true;
}

void BtFile::InternalSwap(BtFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BtFile, _impl_.downloaded_)
      + sizeof(BtFile::_impl_.downloaded_)
      - PROTOBUF_FIELD_OFFSET(BtFile, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata BtFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[4]);
}
// ===================================================================

class TorrentInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<TorrentInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const TorrentInfo* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& TorrentInfo::_Internal::info_hash(const TorrentInfo* msg) {
  return *msg->_impl_.info_hash_;
}
TorrentInfo::TorrentInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.TorrentInfo)
}
TorrentInfo::TorrentInfo(const TorrentInfo& from) : ::google::protobuf::Message() {
  TorrentInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.files_){from._impl_.files_},
      decltype(_impl_.name_){},
      decltype(_impl_.save_path_){},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.total_size_){},
      decltype(_impl_.piece_length_){},
      decltype(_impl_.num_pieces_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.save_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.save_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_save_path().empty()) {
    _this->_impl_.save_path_.Set(from._internal_save_path(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }
  ::memcpy(&_impl_.total_size_, &from._impl_.total_size_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_pieces_) -
    reinterpret_cast<char*>(&_impl_.total_size_)) + sizeof(_impl_.num_pieces_));

  // @@protoc_insertion_point(copy_constructor:prpc.TorrentInfo)
}
inline void TorrentInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.files_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.save_path_){},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.total_size_){::int64_t{0}},
      decltype(_impl_.piece_length_){0},
      decltype(_impl_.num_pieces_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.save_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.save_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TorrentInfo::~TorrentInfo() {
  // @@protoc_insertion_point(destructor:prpc.TorrentInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TorrentInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.files_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.save_path_.Destroy();
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void TorrentInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TorrentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.TorrentInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_files()->Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.save_path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  ::memset(&_impl_.total_size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.num_pieces_) -
      reinterpret_cast<char*>(&_impl_.total_size_)) + sizeof(_impl_.num_pieces_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TorrentInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 38, 2> TorrentInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TorrentInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.info_hash_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.name_)}},
    // string save_path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.save_path_)}},
    // repeated .prpc.BtFile files = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.files_)}},
    // int64 total_size = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TorrentInfo, _impl_.total_size_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.total_size_)}},
    // int32 piece_length = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TorrentInfo, _impl_.piece_length_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.piece_length_)}},
    // int32 num_pieces = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TorrentInfo, _impl_.num_pieces_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.num_pieces_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string save_path = 3;
    {PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.save_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .prpc.BtFile files = 4;
    {PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.files_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 total_size = 5;
    {PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.total_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 piece_length = 6;
    {PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.piece_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 num_pieces = 7;
    {PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.num_pieces_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
    {::_pbi::TcParser::GetTable<::prpc::BtFile>()},
  }}, {{
    "\20\0\4\11\0\0\0\0"
    "prpc.TorrentInfo"
    "name"
    "save_path"
  }},
};

::uint8_t* TorrentInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.TorrentInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.TorrentInfo.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string save_path = 3;
  if (!this->_internal_save_path().empty()) {
    const std::string& _s = this->_internal_save_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.TorrentInfo.save_path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .prpc.BtFile files = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 total_size = 5;
  if (this->_internal_total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_total_size(), target);
  }

  // int32 piece_length = 6;
  if (this->_internal_piece_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_piece_length(), target);
  }

  // int32 num_pieces = 7;
  if (this->_internal_num_pieces() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_num_pieces(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.TorrentInfo)
  return target;
}

::size_t TorrentInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.TorrentInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.BtFile files = 4;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->_internal_files()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string save_path = 3;
  if (!this->_internal_save_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_save_path());
  }

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  // int64 total_size = 5;
  if (this->_internal_total_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_size());
  }

  // int32 piece_length = 6;
  if (this->_internal_piece_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_piece_length());
  }

  // int32 num_pieces = 7;
  if (this->_internal_num_pieces() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_pieces());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TorrentInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TorrentInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*TorrentInfo::GetClassData() const { return &_class_data_; }


void TorrentInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TorrentInfo*>(&to_msg);
  auto& from = static_cast<const TorrentInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.TorrentInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_files()->MergeFrom(from._internal_files());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_save_path().empty()) {
    _this->_internal_set_save_path(from._internal_save_path());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  if (from._internal_total_size() != 0) {
    _this->_internal_set_total_size(from._internal_total_size());
  }
  if (from._internal_piece_length() != 0) {
    _this->_internal_set_piece_length(from._internal_piece_length());
  }
  if (from._internal_num_pieces() != 0) {
    _this->_internal_set_num_pieces(from._internal_num_pieces());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TorrentInfo::CopyFrom(const TorrentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.TorrentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TorrentInfo::IsInitialized() const {
  return true;
}

void TorrentInfo::InternalSwap(TorrentInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.save_path_, lhs_arena,
                                       &other->_impl_.save_path_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.num_pieces_)
      + sizeof(TorrentInfo::_impl_.num_pieces_)
      - PROTOBUF_FIELD_OFFSET(TorrentInfo, _impl_.info_hash_)>(
          reinterpret_cast<char*>(&_impl_.info_hash_),
          reinterpret_cast<char*>(&other->_impl_.info_hash_));
}

::google::protobuf::Metadata TorrentInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[5]);
}
// ===================================================================

class TorrentStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<TorrentStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const TorrentStatus* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& TorrentStatus::_Internal::info_hash(const TorrentStatus* msg) {
  return *msg->_impl_.info_hash_;
}
TorrentStatus::TorrentStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.TorrentStatus)
}
TorrentStatus::TorrentStatus(const TorrentStatus& from) : ::google::protobuf::Message() {
  TorrentStatus* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.total_done_){},
      decltype(_impl_.download_payload_rate_){},
      decltype(_impl_.progress_){},
      decltype(_impl_.total_){},
      decltype(_impl_.num_peers_){},
      decltype(_impl_.state_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }
  ::memcpy(&_impl_.total_done_, &from._impl_.total_done_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.state_) -
    reinterpret_cast<char*>(&_impl_.total_done_)) + sizeof(_impl_.state_));

  // @@protoc_insertion_point(copy_constructor:prpc.TorrentStatus)
}
inline void TorrentStatus::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.total_done_){::int64_t{0}},
      decltype(_impl_.download_payload_rate_){0},
      decltype(_impl_.progress_){0},
      decltype(_impl_.total_){::int64_t{0}},
      decltype(_impl_.num_peers_){0},
      decltype(_impl_.state_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TorrentStatus::~TorrentStatus() {
  // @@protoc_insertion_point(destructor:prpc.TorrentStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TorrentStatus::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void TorrentStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TorrentStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.TorrentStatus)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  ::memset(&_impl_.total_done_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.state_) -
      reinterpret_cast<char*>(&_impl_.total_done_)) + sizeof(_impl_.state_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TorrentStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 39, 2> TorrentStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TorrentStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.BtStateEnum state = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TorrentStatus, _impl_.state_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.state_)}},
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.info_hash_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.name_)}},
    // int32 download_payload_rate = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TorrentStatus, _impl_.download_payload_rate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.download_payload_rate_)}},
    // int64 total_done = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TorrentStatus, _impl_.total_done_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.total_done_)}},
    // int64 total = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TorrentStatus, _impl_.total_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.total_)}},
    // float progress = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.progress_)}},
    // int32 num_peers = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TorrentStatus, _impl_.num_peers_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.num_peers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 download_payload_rate = 3;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.download_payload_rate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 total_done = 4;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.total_done_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 total = 5;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.total_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // float progress = 6;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.progress_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 num_peers = 7;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.num_peers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .prpc.BtStateEnum state = 8;
    {PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
    "\22\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "prpc.TorrentStatus"
    "name"
  }},
};

::uint8_t* TorrentStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.TorrentStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.TorrentStatus.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 download_payload_rate = 3;
  if (this->_internal_download_payload_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_download_payload_rate(), target);
  }

  // int64 total_done = 4;
  if (this->_internal_total_done() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_total_done(), target);
  }

  // int64 total = 5;
  if (this->_internal_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_total(), target);
  }

  // float progress = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_progress(), target);
  }

  // int32 num_peers = 7;
  if (this->_internal_num_peers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_num_peers(), target);
  }

  // .prpc.BtStateEnum state = 8;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.TorrentStatus)
  return target;
}

::size_t TorrentStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.TorrentStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  // int64 total_done = 4;
  if (this->_internal_total_done() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_done());
  }

  // int32 download_payload_rate = 3;
  if (this->_internal_download_payload_rate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_download_payload_rate());
  }

  // float progress = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    total_size += 5;
  }

  // int64 total = 5;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total());
  }

  // int32 num_peers = 7;
  if (this->_internal_num_peers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_peers());
  }

  // .prpc.BtStateEnum state = 8;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TorrentStatus::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TorrentStatus::MergeImpl
};
const ::google::protobuf::Message::ClassData*TorrentStatus::GetClassData() const { return &_class_data_; }


void TorrentStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TorrentStatus*>(&to_msg);
  auto& from = static_cast<const TorrentStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.TorrentStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  if (from._internal_total_done() != 0) {
    _this->_internal_set_total_done(from._internal_total_done());
  }
  if (from._internal_download_payload_rate() != 0) {
    _this->_internal_set_download_payload_rate(from._internal_download_payload_rate());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = from._internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  if (from._internal_total() != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  if (from._internal_num_peers() != 0) {
    _this->_internal_set_num_peers(from._internal_num_peers());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TorrentStatus::CopyFrom(const TorrentStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.TorrentStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TorrentStatus::IsInitialized() const {
  return true;
}

void TorrentStatus::InternalSwap(TorrentStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.state_)
      + sizeof(TorrentStatus::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(TorrentStatus, _impl_.info_hash_)>(
          reinterpret_cast<char*>(&_impl_.info_hash_),
          reinterpret_cast<char*>(&other->_impl_.info_hash_));
}

::google::protobuf::Metadata TorrentStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[6]);
}
// ===================================================================

class DownloadRequest::_Internal {
 public:
};

DownloadRequest::DownloadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.DownloadRequest)
}
DownloadRequest::DownloadRequest(const DownloadRequest& from) : ::google::protobuf::Message() {
  DownloadRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){},
      decltype(_impl_.save_path_){},
      decltype(_impl_.type_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), _this->GetArenaForAllocation());
  }
  _impl_.save_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.save_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_save_path().empty()) {
    _this->_impl_.save_path_.Set(from._internal_save_path(), _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:prpc.DownloadRequest)
}
inline void DownloadRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){},
      decltype(_impl_.save_path_){},
      decltype(_impl_.type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.save_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.save_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
DownloadRequest::~DownloadRequest() {
  // @@protoc_insertion_point(destructor:prpc.DownloadRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
  _impl_.save_path_.Destroy();
}
void DownloadRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.DownloadRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.save_path_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 38, 2> DownloadRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DownloadRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .prpc.DownloadRequest.ReqType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DownloadRequest, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.type_)}},
    // bytes content = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.content_)}},
    // string save_path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.save_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.DownloadRequest.ReqType type = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes content = 2;
    {PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string save_path = 3;
    {PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.save_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\0\11\0\0\0\0"
    "prpc.DownloadRequest"
    "save_path"
  }},
};

::uint8_t* DownloadRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.DownloadRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .prpc.DownloadRequest.ReqType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // string save_path = 3;
  if (!this->_internal_save_path().empty()) {
    const std::string& _s = this->_internal_save_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.DownloadRequest.save_path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.DownloadRequest)
  return target;
}

::size_t DownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.DownloadRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_content());
  }

  // string save_path = 3;
  if (!this->_internal_save_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_save_path());
  }

  // .prpc.DownloadRequest.ReqType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DownloadRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*DownloadRequest::GetClassData() const { return &_class_data_; }


void DownloadRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadRequest*>(&to_msg);
  auto& from = static_cast<const DownloadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.DownloadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_save_path().empty()) {
    _this->_internal_set_save_path(from._internal_save_path());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadRequest::CopyFrom(const DownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.DownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadRequest::IsInitialized() const {
  return true;
}

void DownloadRequest::InternalSwap(DownloadRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, lhs_arena,
                                       &other->_impl_.content_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.save_path_, lhs_arena,
                                       &other->_impl_.save_path_, rhs_arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata DownloadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[7]);
}
// ===================================================================

class InfoHash::_Internal {
 public:
};

InfoHash::InfoHash(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.InfoHash)
}
InfoHash::InfoHash(const InfoHash& from) : ::google::protobuf::Message() {
  InfoHash* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){},
      decltype(_impl_.version_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), _this->GetArenaForAllocation());
  }
  _this->_impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:prpc.InfoHash)
}
inline void InfoHash::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){},
      decltype(_impl_.version_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hash_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
InfoHash::~InfoHash() {
  // @@protoc_insertion_point(destructor:prpc.InfoHash)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InfoHash::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hash_.Destroy();
}
void InfoHash::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void InfoHash::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.InfoHash)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _impl_.version_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InfoHash::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> InfoHash::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InfoHash_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes hash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InfoHash, _impl_.hash_)}},
    // int32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InfoHash, _impl_.version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InfoHash, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 version = 1;
    {PROTOBUF_FIELD_OFFSET(InfoHash, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes hash = 2;
    {PROTOBUF_FIELD_OFFSET(InfoHash, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* InfoHash::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.InfoHash)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 version = 1;
  if (this->_internal_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_version(), target);
  }

  // bytes hash = 2;
  if (!this->_internal_hash().empty()) {
    const std::string& _s = this->_internal_hash();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.InfoHash)
  return target;
}

::size_t InfoHash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.InfoHash)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes hash = 2;
  if (!this->_internal_hash().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_hash());
  }

  // int32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InfoHash::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    InfoHash::MergeImpl
};
const ::google::protobuf::Message::ClassData*InfoHash::GetClassData() const { return &_class_data_; }


void InfoHash::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InfoHash*>(&to_msg);
  auto& from = static_cast<const InfoHash&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.InfoHash)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InfoHash::CopyFrom(const InfoHash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.InfoHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InfoHash::IsInitialized() const {
  return true;
}

void InfoHash::InternalSwap(InfoHash* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, lhs_arena,
                                       &other->_impl_.hash_, rhs_arena);
        swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata InfoHash::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[8]);
}
// ===================================================================

class DownloadRespone::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadRespone>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DownloadRespone, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const DownloadRespone* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& DownloadRespone::_Internal::info_hash(const DownloadRespone* msg) {
  return *msg->_impl_.info_hash_;
}
DownloadRespone::DownloadRespone(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.DownloadRespone)
}
DownloadRespone::DownloadRespone(const DownloadRespone& from) : ::google::protobuf::Message() {
  DownloadRespone* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.DownloadRespone)
}
inline void DownloadRespone::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
}
DownloadRespone::~DownloadRespone() {
  // @@protoc_insertion_point(destructor:prpc.DownloadRespone)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadRespone::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void DownloadRespone::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DownloadRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.DownloadRespone)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadRespone::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DownloadRespone::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DownloadRespone, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DownloadRespone_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DownloadRespone, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadRespone, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* DownloadRespone::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.DownloadRespone)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.DownloadRespone)
  return target;
}

::size_t DownloadRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.DownloadRespone)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadRespone::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DownloadRespone::MergeImpl
};
const ::google::protobuf::Message::ClassData*DownloadRespone::GetClassData() const { return &_class_data_; }


void DownloadRespone::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadRespone*>(&to_msg);
  auto& from = static_cast<const DownloadRespone&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.DownloadRespone)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadRespone::CopyFrom(const DownloadRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.DownloadRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadRespone::IsInitialized() const {
  return true;
}

void DownloadRespone::InternalSwap(DownloadRespone* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata DownloadRespone::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[9]);
}
// ===================================================================

class GetMagnetUriReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetMagnetUriReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const GetMagnetUriReq* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& GetMagnetUriReq::_Internal::info_hash(const GetMagnetUriReq* msg) {
  return *msg->_impl_.info_hash_;
}
GetMagnetUriReq::GetMagnetUriReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetMagnetUriReq)
}
GetMagnetUriReq::GetMagnetUriReq(const GetMagnetUriReq& from) : ::google::protobuf::Message() {
  GetMagnetUriReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.content_){},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:prpc.GetMagnetUriReq)
}
inline void GetMagnetUriReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.content_){},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.type_){0},
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
GetMagnetUriReq::~GetMagnetUriReq() {
  // @@protoc_insertion_point(destructor:prpc.GetMagnetUriReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetMagnetUriReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void GetMagnetUriReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetMagnetUriReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetMagnetUriReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetMagnetUriReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> GetMagnetUriReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetMagnetUriReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .prpc.GetMagnetUriReq.ReqType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetMagnetUriReq, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.type_)}},
    // bytes content = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.content_)}},
    // .prpc.InfoHash info_hash = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.GetMagnetUriReq.ReqType type = 1;
    {PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes content = 2;
    {PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.content_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .prpc.InfoHash info_hash = 3;
    {PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* GetMagnetUriReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetMagnetUriReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .prpc.GetMagnetUriReq.ReqType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetMagnetUriReq)
  return target;
}

::size_t GetMagnetUriReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetMagnetUriReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_content());
  }

  // .prpc.InfoHash info_hash = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  // .prpc.GetMagnetUriReq.ReqType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetMagnetUriReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetMagnetUriReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetMagnetUriReq::GetClassData() const { return &_class_data_; }


void GetMagnetUriReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetMagnetUriReq*>(&to_msg);
  auto& from = static_cast<const GetMagnetUriReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetMagnetUriReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMagnetUriReq::CopyFrom(const GetMagnetUriReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetMagnetUriReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetMagnetUriReq::IsInitialized() const {
  return true;
}

void GetMagnetUriReq::InternalSwap(GetMagnetUriReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, lhs_arena,
                                       &other->_impl_.content_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.type_)
      + sizeof(GetMagnetUriReq::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(GetMagnetUriReq, _impl_.info_hash_)>(
          reinterpret_cast<char*>(&_impl_.info_hash_),
          reinterpret_cast<char*>(&other->_impl_.info_hash_));
}

::google::protobuf::Metadata GetMagnetUriReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[10]);
}
// ===================================================================

class GetMagnetUriRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetMagnetUriRsp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetMagnetUriRsp, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const GetMagnetUriRsp* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& GetMagnetUriRsp::_Internal::info_hash(const GetMagnetUriRsp* msg) {
  return *msg->_impl_.info_hash_;
}
GetMagnetUriRsp::GetMagnetUriRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetMagnetUriRsp)
}
GetMagnetUriRsp::GetMagnetUriRsp(const GetMagnetUriRsp& from) : ::google::protobuf::Message() {
  GetMagnetUriRsp* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.magnet_uri_){},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.magnet_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.magnet_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_magnet_uri().empty()) {
    _this->_impl_.magnet_uri_.Set(from._internal_magnet_uri(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetMagnetUriRsp)
}
inline void GetMagnetUriRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.magnet_uri_){},
      decltype(_impl_.info_hash_){nullptr},
  };
  _impl_.magnet_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.magnet_uri_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
GetMagnetUriRsp::~GetMagnetUriRsp() {
  // @@protoc_insertion_point(destructor:prpc.GetMagnetUriRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetMagnetUriRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.magnet_uri_.Destroy();
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void GetMagnetUriRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetMagnetUriRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetMagnetUriRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.magnet_uri_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetMagnetUriRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 39, 2> GetMagnetUriRsp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetMagnetUriRsp, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetMagnetUriRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string magnet_uri = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetMagnetUriRsp, _impl_.magnet_uri_)}},
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetMagnetUriRsp, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(GetMagnetUriRsp, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string magnet_uri = 2;
    {PROTOBUF_FIELD_OFFSET(GetMagnetUriRsp, _impl_.magnet_uri_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
    "\24\0\12\0\0\0\0\0"
    "prpc.GetMagnetUriRsp"
    "magnet_uri"
  }},
};

::uint8_t* GetMagnetUriRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetMagnetUriRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  // string magnet_uri = 2;
  if (!this->_internal_magnet_uri().empty()) {
    const std::string& _s = this->_internal_magnet_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.GetMagnetUriRsp.magnet_uri");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetMagnetUriRsp)
  return target;
}

::size_t GetMagnetUriRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetMagnetUriRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string magnet_uri = 2;
  if (!this->_internal_magnet_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_magnet_uri());
  }

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetMagnetUriRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetMagnetUriRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetMagnetUriRsp::GetClassData() const { return &_class_data_; }


void GetMagnetUriRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetMagnetUriRsp*>(&to_msg);
  auto& from = static_cast<const GetMagnetUriRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetMagnetUriRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_magnet_uri().empty()) {
    _this->_internal_set_magnet_uri(from._internal_magnet_uri());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMagnetUriRsp::CopyFrom(const GetMagnetUriRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetMagnetUriRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetMagnetUriRsp::IsInitialized() const {
  return true;
}

void GetMagnetUriRsp::InternalSwap(GetMagnetUriRsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.magnet_uri_, lhs_arena,
                                       &other->_impl_.magnet_uri_, rhs_arena);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata GetMagnetUriRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[11]);
}
// ===================================================================

class GetResumeDataReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetResumeDataReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetResumeDataReq, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const GetResumeDataReq* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& GetResumeDataReq::_Internal::info_hash(const GetResumeDataReq* msg) {
  return *msg->_impl_.info_hash_;
}
GetResumeDataReq::GetResumeDataReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetResumeDataReq)
}
GetResumeDataReq::GetResumeDataReq(const GetResumeDataReq& from) : ::google::protobuf::Message() {
  GetResumeDataReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetResumeDataReq)
}
inline void GetResumeDataReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
}
GetResumeDataReq::~GetResumeDataReq() {
  // @@protoc_insertion_point(destructor:prpc.GetResumeDataReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResumeDataReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void GetResumeDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetResumeDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetResumeDataReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResumeDataReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetResumeDataReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetResumeDataReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetResumeDataReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetResumeDataReq, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(GetResumeDataReq, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* GetResumeDataReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetResumeDataReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetResumeDataReq)
  return target;
}

::size_t GetResumeDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetResumeDataReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetResumeDataReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetResumeDataReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetResumeDataReq::GetClassData() const { return &_class_data_; }


void GetResumeDataReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetResumeDataReq*>(&to_msg);
  auto& from = static_cast<const GetResumeDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetResumeDataReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResumeDataReq::CopyFrom(const GetResumeDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetResumeDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResumeDataReq::IsInitialized() const {
  return true;
}

void GetResumeDataReq::InternalSwap(GetResumeDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata GetResumeDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[12]);
}
// ===================================================================

class GetResumeDataRsp::_Internal {
 public:
};

GetResumeDataRsp::GetResumeDataRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetResumeDataRsp)
}
GetResumeDataRsp::GetResumeDataRsp(const GetResumeDataRsp& from) : ::google::protobuf::Message() {
  GetResumeDataRsp* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resume_data_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.resume_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resume_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resume_data().empty()) {
    _this->_impl_.resume_data_.Set(from._internal_resume_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetResumeDataRsp)
}
inline void GetResumeDataRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.resume_data_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.resume_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resume_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
GetResumeDataRsp::~GetResumeDataRsp() {
  // @@protoc_insertion_point(destructor:prpc.GetResumeDataRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetResumeDataRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resume_data_.Destroy();
}
void GetResumeDataRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetResumeDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetResumeDataRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resume_data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetResumeDataRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetResumeDataRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetResumeDataRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes resume_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResumeDataRsp, _impl_.resume_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes resume_data = 1;
    {PROTOBUF_FIELD_OFFSET(GetResumeDataRsp, _impl_.resume_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetResumeDataRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetResumeDataRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes resume_data = 1;
  if (!this->_internal_resume_data().empty()) {
    const std::string& _s = this->_internal_resume_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetResumeDataRsp)
  return target;
}

::size_t GetResumeDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetResumeDataRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes resume_data = 1;
  if (!this->_internal_resume_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_resume_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetResumeDataRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetResumeDataRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetResumeDataRsp::GetClassData() const { return &_class_data_; }


void GetResumeDataRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetResumeDataRsp*>(&to_msg);
  auto& from = static_cast<const GetResumeDataRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetResumeDataRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resume_data().empty()) {
    _this->_internal_set_resume_data(from._internal_resume_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResumeDataRsp::CopyFrom(const GetResumeDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetResumeDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetResumeDataRsp::IsInitialized() const {
  return true;
}

void GetResumeDataRsp::InternalSwap(GetResumeDataRsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resume_data_, lhs_arena,
                                       &other->_impl_.resume_data_, rhs_arena);
}

::google::protobuf::Metadata GetResumeDataRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[13]);
}
// ===================================================================

class GetTorrentInfoReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetTorrentInfoReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetTorrentInfoReq, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const GetTorrentInfoReq* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& GetTorrentInfoReq::_Internal::info_hash(const GetTorrentInfoReq* msg) {
  return *msg->_impl_.info_hash_;
}
GetTorrentInfoReq::GetTorrentInfoReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetTorrentInfoReq)
}
GetTorrentInfoReq::GetTorrentInfoReq(const GetTorrentInfoReq& from) : ::google::protobuf::Message() {
  GetTorrentInfoReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetTorrentInfoReq)
}
inline void GetTorrentInfoReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
}
GetTorrentInfoReq::~GetTorrentInfoReq() {
  // @@protoc_insertion_point(destructor:prpc.GetTorrentInfoReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetTorrentInfoReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void GetTorrentInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetTorrentInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetTorrentInfoReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetTorrentInfoReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTorrentInfoReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTorrentInfoReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetTorrentInfoReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTorrentInfoReq, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(GetTorrentInfoReq, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* GetTorrentInfoReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetTorrentInfoReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetTorrentInfoReq)
  return target;
}

::size_t GetTorrentInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetTorrentInfoReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetTorrentInfoReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetTorrentInfoReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetTorrentInfoReq::GetClassData() const { return &_class_data_; }


void GetTorrentInfoReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetTorrentInfoReq*>(&to_msg);
  auto& from = static_cast<const GetTorrentInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetTorrentInfoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTorrentInfoReq::CopyFrom(const GetTorrentInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetTorrentInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetTorrentInfoReq::IsInitialized() const {
  return true;
}

void GetTorrentInfoReq::InternalSwap(GetTorrentInfoReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata GetTorrentInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[14]);
}
// ===================================================================

class GetTorrentInfoRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetTorrentInfoRsp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetTorrentInfoRsp, _impl_._has_bits_);
  static const ::prpc::TorrentInfo& torrent_info(const GetTorrentInfoRsp* msg);
  static void set_has_torrent_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::TorrentInfo& GetTorrentInfoRsp::_Internal::torrent_info(const GetTorrentInfoRsp* msg) {
  return *msg->_impl_.torrent_info_;
}
GetTorrentInfoRsp::GetTorrentInfoRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetTorrentInfoRsp)
}
GetTorrentInfoRsp::GetTorrentInfoRsp(const GetTorrentInfoRsp& from) : ::google::protobuf::Message() {
  GetTorrentInfoRsp* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.torrent_info_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.torrent_info_ = new ::prpc::TorrentInfo(*from._impl_.torrent_info_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetTorrentInfoRsp)
}
inline void GetTorrentInfoRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.torrent_info_){nullptr},
  };
}
GetTorrentInfoRsp::~GetTorrentInfoRsp() {
  // @@protoc_insertion_point(destructor:prpc.GetTorrentInfoRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetTorrentInfoRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.torrent_info_;
}
void GetTorrentInfoRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetTorrentInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetTorrentInfoRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.torrent_info_ != nullptr);
    _impl_.torrent_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetTorrentInfoRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTorrentInfoRsp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTorrentInfoRsp, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetTorrentInfoRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.TorrentInfo torrent_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTorrentInfoRsp, _impl_.torrent_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.TorrentInfo torrent_info = 1;
    {PROTOBUF_FIELD_OFFSET(GetTorrentInfoRsp, _impl_.torrent_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::TorrentInfo>()},
  }}, {{
  }},
};

::uint8_t* GetTorrentInfoRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetTorrentInfoRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.TorrentInfo torrent_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::torrent_info(this),
        _Internal::torrent_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetTorrentInfoRsp)
  return target;
}

::size_t GetTorrentInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetTorrentInfoRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.TorrentInfo torrent_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.torrent_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetTorrentInfoRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetTorrentInfoRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetTorrentInfoRsp::GetClassData() const { return &_class_data_; }


void GetTorrentInfoRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetTorrentInfoRsp*>(&to_msg);
  auto& from = static_cast<const GetTorrentInfoRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetTorrentInfoRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_torrent_info()->::prpc::TorrentInfo::MergeFrom(
        from._internal_torrent_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTorrentInfoRsp::CopyFrom(const GetTorrentInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetTorrentInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetTorrentInfoRsp::IsInitialized() const {
  return true;
}

void GetTorrentInfoRsp::InternalSwap(GetTorrentInfoRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.torrent_info_, other->_impl_.torrent_info_);
}

::google::protobuf::Metadata GetTorrentInfoRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[15]);
}
// ===================================================================

class GetSessionParamsReq::_Internal {
 public:
};

GetSessionParamsReq::GetSessionParamsReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.GetSessionParamsReq)
}
GetSessionParamsReq::GetSessionParamsReq(const GetSessionParamsReq& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  GetSessionParamsReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.GetSessionParamsReq)
}




const ::google::protobuf::Message::ClassData GetSessionParamsReq::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*GetSessionParamsReq::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata GetSessionParamsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[16]);
}
// ===================================================================

class GetSessionParamsRsp::_Internal {
 public:
};

GetSessionParamsRsp::GetSessionParamsRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetSessionParamsRsp)
}
GetSessionParamsRsp::GetSessionParamsRsp(const GetSessionParamsRsp& from) : ::google::protobuf::Message() {
  GetSessionParamsRsp* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resume_data_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.resume_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resume_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resume_data().empty()) {
    _this->_impl_.resume_data_.Set(from._internal_resume_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetSessionParamsRsp)
}
inline void GetSessionParamsRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.resume_data_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.resume_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.resume_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
GetSessionParamsRsp::~GetSessionParamsRsp() {
  // @@protoc_insertion_point(destructor:prpc.GetSessionParamsRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetSessionParamsRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resume_data_.Destroy();
}
void GetSessionParamsRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetSessionParamsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetSessionParamsRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resume_data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetSessionParamsRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetSessionParamsRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetSessionParamsRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes resume_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetSessionParamsRsp, _impl_.resume_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes resume_data = 1;
    {PROTOBUF_FIELD_OFFSET(GetSessionParamsRsp, _impl_.resume_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetSessionParamsRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetSessionParamsRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes resume_data = 1;
  if (!this->_internal_resume_data().empty()) {
    const std::string& _s = this->_internal_resume_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetSessionParamsRsp)
  return target;
}

::size_t GetSessionParamsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetSessionParamsRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes resume_data = 1;
  if (!this->_internal_resume_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_resume_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetSessionParamsRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetSessionParamsRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetSessionParamsRsp::GetClassData() const { return &_class_data_; }


void GetSessionParamsRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetSessionParamsRsp*>(&to_msg);
  auto& from = static_cast<const GetSessionParamsRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetSessionParamsRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resume_data().empty()) {
    _this->_internal_set_resume_data(from._internal_resume_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSessionParamsRsp::CopyFrom(const GetSessionParamsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetSessionParamsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetSessionParamsRsp::IsInitialized() const {
  return true;
}

void GetSessionParamsRsp::InternalSwap(GetSessionParamsRsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resume_data_, lhs_arena,
                                       &other->_impl_.resume_data_, rhs_arena);
}

::google::protobuf::Metadata GetSessionParamsRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[17]);
}
// ===================================================================

class GetBtStatusReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBtStatusReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetBtStatusReq, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const GetBtStatusReq* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& GetBtStatusReq::_Internal::info_hash(const GetBtStatusReq* msg) {
  return *msg->_impl_.info_hash_;
}
GetBtStatusReq::GetBtStatusReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetBtStatusReq)
}
GetBtStatusReq::GetBtStatusReq(const GetBtStatusReq& from) : ::google::protobuf::Message() {
  GetBtStatusReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetBtStatusReq)
}
inline void GetBtStatusReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
}
GetBtStatusReq::~GetBtStatusReq() {
  // @@protoc_insertion_point(destructor:prpc.GetBtStatusReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetBtStatusReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void GetBtStatusReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetBtStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetBtStatusReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetBtStatusReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetBtStatusReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBtStatusReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetBtStatusReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetBtStatusReq, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(GetBtStatusReq, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* GetBtStatusReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetBtStatusReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetBtStatusReq)
  return target;
}

::size_t GetBtStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetBtStatusReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetBtStatusReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetBtStatusReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetBtStatusReq::GetClassData() const { return &_class_data_; }


void GetBtStatusReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetBtStatusReq*>(&to_msg);
  auto& from = static_cast<const GetBtStatusReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetBtStatusReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBtStatusReq::CopyFrom(const GetBtStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetBtStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetBtStatusReq::IsInitialized() const {
  return true;
}

void GetBtStatusReq::InternalSwap(GetBtStatusReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata GetBtStatusReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[18]);
}
// ===================================================================

class GetBtStatusRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBtStatusRsp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetBtStatusRsp, _impl_._has_bits_);
  static const ::prpc::TorrentStatus& status(const GetBtStatusRsp* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::TorrentStatus& GetBtStatusRsp::_Internal::status(const GetBtStatusRsp* msg) {
  return *msg->_impl_.status_;
}
GetBtStatusRsp::GetBtStatusRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.GetBtStatusRsp)
}
GetBtStatusRsp::GetBtStatusRsp(const GetBtStatusRsp& from) : ::google::protobuf::Message() {
  GetBtStatusRsp* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.status_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.status_ = new ::prpc::TorrentStatus(*from._impl_.status_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.GetBtStatusRsp)
}
inline void GetBtStatusRsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.status_){nullptr},
  };
}
GetBtStatusRsp::~GetBtStatusRsp() {
  // @@protoc_insertion_point(destructor:prpc.GetBtStatusRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetBtStatusRsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.status_;
}
void GetBtStatusRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetBtStatusRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.GetBtStatusRsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetBtStatusRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetBtStatusRsp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBtStatusRsp, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetBtStatusRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.TorrentStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetBtStatusRsp, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.TorrentStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(GetBtStatusRsp, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::TorrentStatus>()},
  }}, {{
  }},
};

::uint8_t* GetBtStatusRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.GetBtStatusRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.TorrentStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.GetBtStatusRsp)
  return target;
}

::size_t GetBtStatusRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.GetBtStatusRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.TorrentStatus status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetBtStatusRsp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetBtStatusRsp::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetBtStatusRsp::GetClassData() const { return &_class_data_; }


void GetBtStatusRsp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetBtStatusRsp*>(&to_msg);
  auto& from = static_cast<const GetBtStatusRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.GetBtStatusRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::prpc::TorrentStatus::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBtStatusRsp::CopyFrom(const GetBtStatusRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.GetBtStatusRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetBtStatusRsp::IsInitialized() const {
  return true;
}

void GetBtStatusRsp::InternalSwap(GetBtStatusRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata GetBtStatusRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[19]);
}
// ===================================================================

class BtStatusRequest::_Internal {
 public:
};

BtStatusRequest::BtStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.BtStatusRequest)
}
BtStatusRequest::BtStatusRequest(const BtStatusRequest& from) : ::google::protobuf::Message() {
  BtStatusRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_hash_){from._impl_.info_hash_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.BtStatusRequest)
}
inline void BtStatusRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.info_hash_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
BtStatusRequest::~BtStatusRequest() {
  // @@protoc_insertion_point(destructor:prpc.BtStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BtStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.info_hash_.~RepeatedPtrField();
}
void BtStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BtStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.BtStatusRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_info_hash()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BtStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BtStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BtStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BtStatusRequest, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(BtStatusRequest, _impl_.info_hash_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* BtStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.BtStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .prpc.InfoHash info_hash = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_hash_size()); i < n; i++) {
    const auto& repfield = this->_internal_info_hash().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.BtStatusRequest)
  return target;
}

::size_t BtStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.BtStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.InfoHash info_hash = 1;
  total_size += 1UL * this->_internal_info_hash_size();
  for (const auto& msg : this->_internal_info_hash()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BtStatusRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BtStatusRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*BtStatusRequest::GetClassData() const { return &_class_data_; }


void BtStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BtStatusRequest*>(&to_msg);
  auto& from = static_cast<const BtStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.BtStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_info_hash()->MergeFrom(from._internal_info_hash());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BtStatusRequest::CopyFrom(const BtStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.BtStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BtStatusRequest::IsInitialized() const {
  return true;
}

void BtStatusRequest::InternalSwap(BtStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.info_hash_.InternalSwap(&other->_impl_.info_hash_);
}

::google::protobuf::Metadata BtStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[20]);
}
// ===================================================================

class BtStatusRespone::_Internal {
 public:
};

BtStatusRespone::BtStatusRespone(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.BtStatusRespone)
}
BtStatusRespone::BtStatusRespone(const BtStatusRespone& from) : ::google::protobuf::Message() {
  BtStatusRespone* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_array_){from._impl_.status_array_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.BtStatusRespone)
}
inline void BtStatusRespone::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.status_array_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
BtStatusRespone::~BtStatusRespone() {
  // @@protoc_insertion_point(destructor:prpc.BtStatusRespone)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BtStatusRespone::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_array_.~RepeatedPtrField();
}
void BtStatusRespone::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BtStatusRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.BtStatusRespone)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_status_array()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BtStatusRespone::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BtStatusRespone::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BtStatusRespone_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .prpc.TorrentStatus status_array = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BtStatusRespone, _impl_.status_array_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .prpc.TorrentStatus status_array = 1;
    {PROTOBUF_FIELD_OFFSET(BtStatusRespone, _impl_.status_array_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::TorrentStatus>()},
  }}, {{
  }},
};

::uint8_t* BtStatusRespone::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.BtStatusRespone)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .prpc.TorrentStatus status_array = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_status_array_size()); i < n; i++) {
    const auto& repfield = this->_internal_status_array().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.BtStatusRespone)
  return target;
}

::size_t BtStatusRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.BtStatusRespone)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.TorrentStatus status_array = 1;
  total_size += 1UL * this->_internal_status_array_size();
  for (const auto& msg : this->_internal_status_array()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BtStatusRespone::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BtStatusRespone::MergeImpl
};
const ::google::protobuf::Message::ClassData*BtStatusRespone::GetClassData() const { return &_class_data_; }


void BtStatusRespone::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BtStatusRespone*>(&to_msg);
  auto& from = static_cast<const BtStatusRespone&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.BtStatusRespone)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_status_array()->MergeFrom(from._internal_status_array());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BtStatusRespone::CopyFrom(const BtStatusRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.BtStatusRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BtStatusRespone::IsInitialized() const {
  return true;
}

void BtStatusRespone::InternalSwap(BtStatusRespone* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.status_array_.InternalSwap(&other->_impl_.status_array_);
}

::google::protobuf::Metadata BtStatusRespone::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[21]);
}
// ===================================================================

class TorrentInfoReq::_Internal {
 public:
};

TorrentInfoReq::TorrentInfoReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.TorrentInfoReq)
}
TorrentInfoReq::TorrentInfoReq(const TorrentInfoReq& from) : ::google::protobuf::Message() {
  TorrentInfoReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_hash_){from._impl_.info_hash_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.TorrentInfoReq)
}
inline void TorrentInfoReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.info_hash_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TorrentInfoReq::~TorrentInfoReq() {
  // @@protoc_insertion_point(destructor:prpc.TorrentInfoReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TorrentInfoReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.info_hash_.~RepeatedPtrField();
}
void TorrentInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TorrentInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.TorrentInfoReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_info_hash()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TorrentInfoReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TorrentInfoReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TorrentInfoReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TorrentInfoReq, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(TorrentInfoReq, _impl_.info_hash_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* TorrentInfoReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.TorrentInfoReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .prpc.InfoHash info_hash = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_hash_size()); i < n; i++) {
    const auto& repfield = this->_internal_info_hash().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.TorrentInfoReq)
  return target;
}

::size_t TorrentInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.TorrentInfoReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.InfoHash info_hash = 1;
  total_size += 1UL * this->_internal_info_hash_size();
  for (const auto& msg : this->_internal_info_hash()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TorrentInfoReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TorrentInfoReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*TorrentInfoReq::GetClassData() const { return &_class_data_; }


void TorrentInfoReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TorrentInfoReq*>(&to_msg);
  auto& from = static_cast<const TorrentInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.TorrentInfoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_info_hash()->MergeFrom(from._internal_info_hash());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TorrentInfoReq::CopyFrom(const TorrentInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.TorrentInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TorrentInfoReq::IsInitialized() const {
  return true;
}

void TorrentInfoReq::InternalSwap(TorrentInfoReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.info_hash_.InternalSwap(&other->_impl_.info_hash_);
}

::google::protobuf::Metadata TorrentInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[22]);
}
// ===================================================================

class TorrentInfoRes::_Internal {
 public:
  using HasBits = decltype(std::declval<TorrentInfoRes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TorrentInfoRes, _impl_._has_bits_);
  static const ::prpc::TorrentInfo& ti(const TorrentInfoRes* msg);
  static void set_has_ti(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::TorrentInfo& TorrentInfoRes::_Internal::ti(const TorrentInfoRes* msg) {
  return *msg->_impl_.ti_;
}
TorrentInfoRes::TorrentInfoRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.TorrentInfoRes)
}
TorrentInfoRes::TorrentInfoRes(const TorrentInfoRes& from) : ::google::protobuf::Message() {
  TorrentInfoRes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ti_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ti_ = new ::prpc::TorrentInfo(*from._impl_.ti_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.TorrentInfoRes)
}
inline void TorrentInfoRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ti_){nullptr},
  };
}
TorrentInfoRes::~TorrentInfoRes() {
  // @@protoc_insertion_point(destructor:prpc.TorrentInfoRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TorrentInfoRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.ti_;
}
void TorrentInfoRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TorrentInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.TorrentInfoRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ti_ != nullptr);
    _impl_.ti_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TorrentInfoRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TorrentInfoRes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TorrentInfoRes, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TorrentInfoRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.TorrentInfo ti = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TorrentInfoRes, _impl_.ti_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.TorrentInfo ti = 1;
    {PROTOBUF_FIELD_OFFSET(TorrentInfoRes, _impl_.ti_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::TorrentInfo>()},
  }}, {{
  }},
};

::uint8_t* TorrentInfoRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.TorrentInfoRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.TorrentInfo ti = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::ti(this),
        _Internal::ti(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.TorrentInfoRes)
  return target;
}

::size_t TorrentInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.TorrentInfoRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.TorrentInfo ti = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.ti_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TorrentInfoRes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TorrentInfoRes::MergeImpl
};
const ::google::protobuf::Message::ClassData*TorrentInfoRes::GetClassData() const { return &_class_data_; }


void TorrentInfoRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TorrentInfoRes*>(&to_msg);
  auto& from = static_cast<const TorrentInfoRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.TorrentInfoRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ti()->::prpc::TorrentInfo::MergeFrom(
        from._internal_ti());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TorrentInfoRes::CopyFrom(const TorrentInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.TorrentInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TorrentInfoRes::IsInitialized() const {
  return true;
}

void TorrentInfoRes::InternalSwap(TorrentInfoRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ti_, other->_impl_.ti_);
}

::google::protobuf::Metadata TorrentInfoRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[23]);
}
// ===================================================================

class RemoveTorrentReq::_Internal {
 public:
  using HasBits = decltype(std::declval<RemoveTorrentReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RemoveTorrentReq, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const RemoveTorrentReq* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& RemoveTorrentReq::_Internal::info_hash(const RemoveTorrentReq* msg) {
  return *msg->_impl_.info_hash_;
}
RemoveTorrentReq::RemoveTorrentReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.RemoveTorrentReq)
}
RemoveTorrentReq::RemoveTorrentReq(const RemoveTorrentReq& from) : ::google::protobuf::Message() {
  RemoveTorrentReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.RemoveTorrentReq)
}
inline void RemoveTorrentReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
}
RemoveTorrentReq::~RemoveTorrentReq() {
  // @@protoc_insertion_point(destructor:prpc.RemoveTorrentReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoveTorrentReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void RemoveTorrentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RemoveTorrentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.RemoveTorrentReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RemoveTorrentReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RemoveTorrentReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveTorrentReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RemoveTorrentReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveTorrentReq, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(RemoveTorrentReq, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* RemoveTorrentReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.RemoveTorrentReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.RemoveTorrentReq)
  return target;
}

::size_t RemoveTorrentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.RemoveTorrentReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RemoveTorrentReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RemoveTorrentReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*RemoveTorrentReq::GetClassData() const { return &_class_data_; }


void RemoveTorrentReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RemoveTorrentReq*>(&to_msg);
  auto& from = static_cast<const RemoveTorrentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.RemoveTorrentReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveTorrentReq::CopyFrom(const RemoveTorrentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.RemoveTorrentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RemoveTorrentReq::IsInitialized() const {
  return true;
}

void RemoveTorrentReq::InternalSwap(RemoveTorrentReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata RemoveTorrentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[24]);
}
// ===================================================================

class RemoveTorrentRes::_Internal {
 public:
};

RemoveTorrentRes::RemoveTorrentRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.RemoveTorrentRes)
}
RemoveTorrentRes::RemoveTorrentRes(const RemoveTorrentRes& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  RemoveTorrentRes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.RemoveTorrentRes)
}




const ::google::protobuf::Message::ClassData RemoveTorrentRes::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*RemoveTorrentRes::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata RemoveTorrentRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[25]);
}
// ===================================================================

class FileProgressReq::_Internal {
 public:
  using HasBits = decltype(std::declval<FileProgressReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FileProgressReq, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const FileProgressReq* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& FileProgressReq::_Internal::info_hash(const FileProgressReq* msg) {
  return *msg->_impl_.info_hash_;
}
FileProgressReq::FileProgressReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.FileProgressReq)
}
FileProgressReq::FileProgressReq(const FileProgressReq& from) : ::google::protobuf::Message() {
  FileProgressReq* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.FileProgressReq)
}
inline void FileProgressReq::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
  };
}
FileProgressReq::~FileProgressReq() {
  // @@protoc_insertion_point(destructor:prpc.FileProgressReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FileProgressReq::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void FileProgressReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FileProgressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.FileProgressReq)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FileProgressReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FileProgressReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileProgressReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FileProgressReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FileProgressReq, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(FileProgressReq, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* FileProgressReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.FileProgressReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.FileProgressReq)
  return target;
}

::size_t FileProgressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.FileProgressReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FileProgressReq::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FileProgressReq::MergeImpl
};
const ::google::protobuf::Message::ClassData*FileProgressReq::GetClassData() const { return &_class_data_; }


void FileProgressReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FileProgressReq*>(&to_msg);
  auto& from = static_cast<const FileProgressReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.FileProgressReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileProgressReq::CopyFrom(const FileProgressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.FileProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FileProgressReq::IsInitialized() const {
  return true;
}

void FileProgressReq::InternalSwap(FileProgressReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata FileProgressReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[26]);
}
// ===================================================================

class FileProgressRes::_Internal {
 public:
  using HasBits = decltype(std::declval<FileProgressRes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FileProgressRes, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const FileProgressRes* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& FileProgressRes::_Internal::info_hash(const FileProgressRes* msg) {
  return *msg->_impl_.info_hash_;
}
FileProgressRes::FileProgressRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.FileProgressRes)
}
FileProgressRes::FileProgressRes(const FileProgressRes& from) : ::google::protobuf::Message() {
  FileProgressRes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.files_){from._impl_.files_},
      decltype(_impl_.info_hash_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }

  // @@protoc_insertion_point(copy_constructor:prpc.FileProgressRes)
}
inline void FileProgressRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.files_){arena},
      decltype(_impl_.info_hash_){nullptr},
  };
}
FileProgressRes::~FileProgressRes() {
  // @@protoc_insertion_point(destructor:prpc.FileProgressRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FileProgressRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.files_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void FileProgressRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FileProgressRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.FileProgressRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_files()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FileProgressRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> FileProgressRes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileProgressRes, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FileProgressRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .prpc.BtFile files = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(FileProgressRes, _impl_.files_)}},
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FileProgressRes, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(FileProgressRes, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .prpc.BtFile files = 2;
    {PROTOBUF_FIELD_OFFSET(FileProgressRes, _impl_.files_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
    {::_pbi::TcParser::GetTable<::prpc::BtFile>()},
  }}, {{
  }},
};

::uint8_t* FileProgressRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.FileProgressRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  // repeated .prpc.BtFile files = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.FileProgressRes)
  return target;
}

::size_t FileProgressRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.FileProgressRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.BtFile files = 2;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->_internal_files()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FileProgressRes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FileProgressRes::MergeImpl
};
const ::google::protobuf::Message::ClassData*FileProgressRes::GetClassData() const { return &_class_data_; }


void FileProgressRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FileProgressRes*>(&to_msg);
  auto& from = static_cast<const FileProgressRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.FileProgressRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_files()->MergeFrom(from._internal_files());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileProgressRes::CopyFrom(const FileProgressRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.FileProgressRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FileProgressRes::IsInitialized() const {
  return true;
}

void FileProgressRes::InternalSwap(FileProgressRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  swap(_impl_.info_hash_, other->_impl_.info_hash_);
}

::google::protobuf::Metadata FileProgressRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[27]);
}
// ===================================================================

class FileCompletedReq::_Internal {
 public:
};

FileCompletedReq::FileCompletedReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.FileCompletedReq)
}
FileCompletedReq::FileCompletedReq(const FileCompletedReq& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  FileCompletedReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.FileCompletedReq)
}




const ::google::protobuf::Message::ClassData FileCompletedReq::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*FileCompletedReq::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata FileCompletedReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[28]);
}
// ===================================================================

class FileCompletedRes::_Internal {
 public:
  using HasBits = decltype(std::declval<FileCompletedRes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_._has_bits_);
  static const ::prpc::InfoHash& info_hash(const FileCompletedRes* msg);
  static void set_has_info_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::InfoHash& FileCompletedRes::_Internal::info_hash(const FileCompletedRes* msg) {
  return *msg->_impl_.info_hash_;
}
FileCompletedRes::FileCompletedRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.FileCompletedRes)
}
FileCompletedRes::FileCompletedRes(const FileCompletedRes& from) : ::google::protobuf::Message() {
  FileCompletedRes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.file_index_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_hash_ = new ::prpc::InfoHash(*from._impl_.info_hash_);
  }
  _this->_impl_.file_index_ = from._impl_.file_index_;

  // @@protoc_insertion_point(copy_constructor:prpc.FileCompletedRes)
}
inline void FileCompletedRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.info_hash_){nullptr},
      decltype(_impl_.file_index_){0},
  };
}
FileCompletedRes::~FileCompletedRes() {
  // @@protoc_insertion_point(destructor:prpc.FileCompletedRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FileCompletedRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_hash_;
}
void FileCompletedRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FileCompletedRes::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.FileCompletedRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_hash_ != nullptr);
    _impl_.info_hash_->Clear();
  }
  _impl_.file_index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FileCompletedRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> FileCompletedRes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FileCompletedRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 file_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FileCompletedRes, _impl_.file_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_.file_index_)}},
    // .prpc.InfoHash info_hash = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_.info_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.InfoHash info_hash = 1;
    {PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_.info_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 file_index = 2;
    {PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_.file_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::InfoHash>()},
  }}, {{
  }},
};

::uint8_t* FileCompletedRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.FileCompletedRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.InfoHash info_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_hash(this),
        _Internal::info_hash(this).GetCachedSize(), target, stream);
  }

  // int32 file_index = 2;
  if (this->_internal_file_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_file_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.FileCompletedRes)
  return target;
}

::size_t FileCompletedRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.FileCompletedRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .prpc.InfoHash info_hash = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_hash_);
  }

  // int32 file_index = 2;
  if (this->_internal_file_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_file_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FileCompletedRes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FileCompletedRes::MergeImpl
};
const ::google::protobuf::Message::ClassData*FileCompletedRes::GetClassData() const { return &_class_data_; }


void FileCompletedRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FileCompletedRes*>(&to_msg);
  auto& from = static_cast<const FileCompletedRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.FileCompletedRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info_hash()->::prpc::InfoHash::MergeFrom(
        from._internal_info_hash());
  }
  if (from._internal_file_index() != 0) {
    _this->_internal_set_file_index(from._internal_file_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileCompletedRes::CopyFrom(const FileCompletedRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.FileCompletedRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FileCompletedRes::IsInitialized() const {
  return true;
}

void FileCompletedRes::InternalSwap(FileCompletedRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_.file_index_)
      + sizeof(FileCompletedRes::_impl_.file_index_)
      - PROTOBUF_FIELD_OFFSET(FileCompletedRes, _impl_.info_hash_)>(
          reinterpret_cast<char*>(&_impl_.info_hash_),
          reinterpret_cast<char*>(&other->_impl_.info_hash_));
}

::google::protobuf::Metadata FileCompletedRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bt_2eproto_getter, &descriptor_table_bt_2eproto_once,
      file_level_metadata_bt_2eproto[29]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace prpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

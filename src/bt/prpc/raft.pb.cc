// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft.proto

#include "raft.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace prpc {
        template <typename>
PROTOBUF_CONSTEXPR NewNodeAction::NewNodeAction(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.my_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.my_address_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.role_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct NewNodeActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewNodeActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewNodeActionDefaultTypeInternal() {}
  union {
    NewNodeAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewNodeActionDefaultTypeInternal _NewNodeAction_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RaftTransaction::RaftTransaction(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.my_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.user_ref_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.new_node_)*/ nullptr,
      /*decltype(_impl_.epoch_)*/ ::uint64_t{0u},
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct RaftTransactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaftTransactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaftTransactionDefaultTypeInternal() {}
  union {
    RaftTransaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaftTransactionDefaultTypeInternal _RaftTransaction_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RaftActionRet::RaftActionRet(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.my_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.epoch_)*/ ::uint64_t{0u},
      /*decltype(_impl_.success_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct RaftActionRetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaftActionRetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaftActionRetDefaultTypeInternal() {}
  union {
    RaftActionRet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaftActionRetDefaultTypeInternal _RaftActionRet_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RaftPing::RaftPing(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.my_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.epoch_)*/ ::uint64_t{0u},
      /*decltype(_impl_.role_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct RaftPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaftPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaftPingDefaultTypeInternal() {}
  union {
    RaftPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaftPingDefaultTypeInternal _RaftPing_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RaftPong::RaftPong(::_pbi::ConstantInitialized) {}
struct RaftPongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaftPongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaftPongDefaultTypeInternal() {}
  union {
    RaftPong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaftPongDefaultTypeInternal _RaftPong_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RaftMsg::RaftMsg(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sync_actions_)*/ {},
      /*decltype(_impl_.action_)*/ nullptr,
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct RaftMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaftMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaftMsgDefaultTypeInternal() {}
  union {
    RaftMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaftMsgDefaultTypeInternal _RaftMsg_default_instance_;
}  // namespace prpc
static ::_pb::Metadata file_level_metadata_raft_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_raft_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_raft_2eproto = nullptr;
const ::uint32_t TableStruct_raft_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::NewNodeAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::NewNodeAction, _impl_.my_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::NewNodeAction, _impl_.my_address_),
    PROTOBUF_FIELD_OFFSET(::prpc::NewNodeAction, _impl_.role_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftTransaction, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftTransaction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RaftTransaction, _impl_.my_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftTransaction, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftTransaction, _impl_.epoch_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftTransaction, _impl_.user_ref_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftTransaction, _impl_.new_node_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RaftActionRet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RaftActionRet, _impl_.my_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftActionRet, _impl_.epoch_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftActionRet, _impl_.success_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RaftPing, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RaftPing, _impl_.my_id_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftPing, _impl_.role_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftPing, _impl_.epoch_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::prpc::RaftPong, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RaftMsg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::prpc::RaftMsg, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftMsg, _impl_.action_),
    PROTOBUF_FIELD_OFFSET(::prpc::RaftMsg, _impl_.sync_actions_),
    ~0u,
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::prpc::NewNodeAction)},
        {11, 24, -1, sizeof(::prpc::RaftTransaction)},
        {29, -1, -1, sizeof(::prpc::RaftActionRet)},
        {40, -1, -1, sizeof(::prpc::RaftPing)},
        {51, -1, -1, sizeof(::prpc::RaftPong)},
        {59, 70, -1, sizeof(::prpc::RaftMsg)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::prpc::_NewNodeAction_default_instance_._instance,
    &::prpc::_RaftTransaction_default_instance_._instance,
    &::prpc::_RaftActionRet_default_instance_._instance,
    &::prpc::_RaftPing_default_instance_._instance,
    &::prpc::_RaftPong_default_instance_._instance,
    &::prpc::_RaftMsg_default_instance_._instance,
};
const char descriptor_table_protodef_raft_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nraft.proto\022\004prpc\"@\n\rNewNodeAction\022\r\n\005m"
    "y_id\030\001 \001(\t\022\022\n\nmy_address\030\002 \001(\t\022\014\n\004role\030\003"
    " \001(\005\"\264\001\n\017RaftTransaction\022\r\n\005my_id\030\001 \001(\t\022"
    "(\n\004type\030\002 \001(\0162\032.prpc.RaftTransaction.Typ"
    "e\022\r\n\005epoch\030\003 \001(\004\022\020\n\010user_ref\030\004 \001(\t\022%\n\010ne"
    "w_node\030\005 \001(\0132\023.prpc.NewNodeAction\" \n\004Typ"
    "e\022\013\n\007Unknown\020\000\022\013\n\007NewNode\020\001\">\n\rRaftActio"
    "nRet\022\r\n\005my_id\030\001 \001(\t\022\r\n\005epoch\030\002 \001(\004\022\017\n\007su"
    "ccess\030\003 \001(\010\"6\n\010RaftPing\022\r\n\005my_id\030\001 \001(\t\022\014"
    "\n\004role\030\002 \001(\005\022\r\n\005epoch\030\003 \001(\004\"\n\n\010RaftPong\""
    "\304\001\n\007RaftMsg\022 \n\004type\030\001 \001(\0162\022.prpc.RaftMsg"
    ".Type\022%\n\006action\030\002 \001(\0132\025.prpc.RaftTransac"
    "tion\022+\n\014sync_actions\030\003 \003(\0132\025.prpc.RaftTr"
    "ansaction\"C\n\004Type\022\013\n\007Unknown\020\000\022\n\n\006Action"
    "\020\001\022\016\n\nSyncAction\020\002\022\010\n\004Ping\020\003\022\010\n\004Pong\020\004B\010"
    "Z\006./prpcb\006proto3"
};
static ::absl::once_flag descriptor_table_raft_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_raft_2eproto = {
    false,
    false,
    616,
    descriptor_table_protodef_raft_2eproto,
    "raft.proto",
    &descriptor_table_raft_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_raft_2eproto::offsets,
    file_level_metadata_raft_2eproto,
    file_level_enum_descriptors_raft_2eproto,
    file_level_service_descriptors_raft_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_raft_2eproto_getter() {
  return &descriptor_table_raft_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_raft_2eproto(&descriptor_table_raft_2eproto);
namespace prpc {
const ::google::protobuf::EnumDescriptor* RaftTransaction_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_raft_2eproto);
  return file_level_enum_descriptors_raft_2eproto[0];
}
bool RaftTransaction_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RaftTransaction_Type RaftTransaction::Unknown;
constexpr RaftTransaction_Type RaftTransaction::NewNode;
constexpr RaftTransaction_Type RaftTransaction::Type_MIN;
constexpr RaftTransaction_Type RaftTransaction::Type_MAX;
constexpr int RaftTransaction::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RaftMsg_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_raft_2eproto);
  return file_level_enum_descriptors_raft_2eproto[1];
}
bool RaftMsg_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RaftMsg_Type RaftMsg::Unknown;
constexpr RaftMsg_Type RaftMsg::Action;
constexpr RaftMsg_Type RaftMsg::SyncAction;
constexpr RaftMsg_Type RaftMsg::Ping;
constexpr RaftMsg_Type RaftMsg::Pong;
constexpr RaftMsg_Type RaftMsg::Type_MIN;
constexpr RaftMsg_Type RaftMsg::Type_MAX;
constexpr int RaftMsg::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class NewNodeAction::_Internal {
 public:
};

NewNodeAction::NewNodeAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.NewNodeAction)
}
NewNodeAction::NewNodeAction(const NewNodeAction& from) : ::google::protobuf::Message() {
  NewNodeAction* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.my_id_){},
      decltype(_impl_.my_address_){},
      decltype(_impl_.role_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_my_id().empty()) {
    _this->_impl_.my_id_.Set(from._internal_my_id(), _this->GetArenaForAllocation());
  }
  _impl_.my_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_my_address().empty()) {
    _this->_impl_.my_address_.Set(from._internal_my_address(), _this->GetArenaForAllocation());
  }
  _this->_impl_.role_ = from._impl_.role_;

  // @@protoc_insertion_point(copy_constructor:prpc.NewNodeAction)
}
inline void NewNodeAction::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.my_id_){},
      decltype(_impl_.my_address_){},
      decltype(_impl_.role_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.my_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
NewNodeAction::~NewNodeAction() {
  // @@protoc_insertion_point(destructor:prpc.NewNodeAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NewNodeAction::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.my_id_.Destroy();
  _impl_.my_address_.Destroy();
}
void NewNodeAction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void NewNodeAction::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.NewNodeAction)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.my_id_.ClearToEmpty();
  _impl_.my_address_.ClearToEmpty();
  _impl_.role_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NewNodeAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2> NewNodeAction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NewNodeAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string my_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NewNodeAction, _impl_.my_id_)}},
    // string my_address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NewNodeAction, _impl_.my_address_)}},
    // int32 role = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NewNodeAction, _impl_.role_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NewNodeAction, _impl_.role_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string my_id = 1;
    {PROTOBUF_FIELD_OFFSET(NewNodeAction, _impl_.my_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string my_address = 2;
    {PROTOBUF_FIELD_OFFSET(NewNodeAction, _impl_.my_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 role = 3;
    {PROTOBUF_FIELD_OFFSET(NewNodeAction, _impl_.role_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\22\5\12\0\0\0\0\0"
    "prpc.NewNodeAction"
    "my_id"
    "my_address"
  }},
};

::uint8_t* NewNodeAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.NewNodeAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    const std::string& _s = this->_internal_my_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.NewNodeAction.my_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string my_address = 2;
  if (!this->_internal_my_address().empty()) {
    const std::string& _s = this->_internal_my_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.NewNodeAction.my_address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 role = 3;
  if (this->_internal_role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_role(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.NewNodeAction)
  return target;
}

::size_t NewNodeAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.NewNodeAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_id());
  }

  // string my_address = 2;
  if (!this->_internal_my_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_address());
  }

  // int32 role = 3;
  if (this->_internal_role() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_role());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NewNodeAction::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    NewNodeAction::MergeImpl
};
const ::google::protobuf::Message::ClassData*NewNodeAction::GetClassData() const { return &_class_data_; }


void NewNodeAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NewNodeAction*>(&to_msg);
  auto& from = static_cast<const NewNodeAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.NewNodeAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_my_id().empty()) {
    _this->_internal_set_my_id(from._internal_my_id());
  }
  if (!from._internal_my_address().empty()) {
    _this->_internal_set_my_address(from._internal_my_address());
  }
  if (from._internal_role() != 0) {
    _this->_internal_set_role(from._internal_role());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewNodeAction::CopyFrom(const NewNodeAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.NewNodeAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NewNodeAction::IsInitialized() const {
  return true;
}

void NewNodeAction::InternalSwap(NewNodeAction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_id_, lhs_arena,
                                       &other->_impl_.my_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_address_, lhs_arena,
                                       &other->_impl_.my_address_, rhs_arena);
        swap(_impl_.role_, other->_impl_.role_);
}

::google::protobuf::Metadata NewNodeAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raft_2eproto_getter, &descriptor_table_raft_2eproto_once,
      file_level_metadata_raft_2eproto[0]);
}
// ===================================================================

class RaftTransaction::_Internal {
 public:
  using HasBits = decltype(std::declval<RaftTransaction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_._has_bits_);
  static const ::prpc::NewNodeAction& new_node(const RaftTransaction* msg);
  static void set_has_new_node(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::NewNodeAction& RaftTransaction::_Internal::new_node(const RaftTransaction* msg) {
  return *msg->_impl_.new_node_;
}
RaftTransaction::RaftTransaction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.RaftTransaction)
}
RaftTransaction::RaftTransaction(const RaftTransaction& from) : ::google::protobuf::Message() {
  RaftTransaction* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_id_){},
      decltype(_impl_.user_ref_){},
      decltype(_impl_.new_node_){nullptr},
      decltype(_impl_.epoch_){},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_my_id().empty()) {
    _this->_impl_.my_id_.Set(from._internal_my_id(), _this->GetArenaForAllocation());
  }
  _impl_.user_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_ref_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_ref().empty()) {
    _this->_impl_.user_ref_.Set(from._internal_user_ref(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.new_node_ = new ::prpc::NewNodeAction(*from._impl_.new_node_);
  }
  ::memcpy(&_impl_.epoch_, &from._impl_.epoch_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.type_));

  // @@protoc_insertion_point(copy_constructor:prpc.RaftTransaction)
}
inline void RaftTransaction::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_id_){},
      decltype(_impl_.user_ref_){},
      decltype(_impl_.new_node_){nullptr},
      decltype(_impl_.epoch_){::uint64_t{0u}},
      decltype(_impl_.type_){0},
  };
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_ref_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
RaftTransaction::~RaftTransaction() {
  // @@protoc_insertion_point(destructor:prpc.RaftTransaction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RaftTransaction::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.my_id_.Destroy();
  _impl_.user_ref_.Destroy();
  if (this != internal_default_instance()) delete _impl_.new_node_;
}
void RaftTransaction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RaftTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.RaftTransaction)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.my_id_.ClearToEmpty();
  _impl_.user_ref_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.new_node_ != nullptr);
    _impl_.new_node_->Clear();
  }
  ::memset(&_impl_.epoch_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RaftTransaction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 42, 2> RaftTransaction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RaftTransaction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string my_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.my_id_)}},
    // .prpc.RaftTransaction.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaftTransaction, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.type_)}},
    // uint64 epoch = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RaftTransaction, _impl_.epoch_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.epoch_)}},
    // string user_ref = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.user_ref_)}},
    // .prpc.NewNodeAction new_node = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.new_node_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string my_id = 1;
    {PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.my_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .prpc.RaftTransaction.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 epoch = 3;
    {PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.epoch_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string user_ref = 4;
    {PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.user_ref_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .prpc.NewNodeAction new_node = 5;
    {PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.new_node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::NewNodeAction>()},
  }}, {{
    "\24\5\0\0\10\0\0\0"
    "prpc.RaftTransaction"
    "my_id"
    "user_ref"
  }},
};

::uint8_t* RaftTransaction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.RaftTransaction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    const std::string& _s = this->_internal_my_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.RaftTransaction.my_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .prpc.RaftTransaction.Type type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // uint64 epoch = 3;
  if (this->_internal_epoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_epoch(), target);
  }

  // string user_ref = 4;
  if (!this->_internal_user_ref().empty()) {
    const std::string& _s = this->_internal_user_ref();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.RaftTransaction.user_ref");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.NewNodeAction new_node = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::new_node(this),
        _Internal::new_node(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.RaftTransaction)
  return target;
}

::size_t RaftTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.RaftTransaction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_id());
  }

  // string user_ref = 4;
  if (!this->_internal_user_ref().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_ref());
  }

  // .prpc.NewNodeAction new_node = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.new_node_);
  }

  // uint64 epoch = 3;
  if (this->_internal_epoch() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_epoch());
  }

  // .prpc.RaftTransaction.Type type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RaftTransaction::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RaftTransaction::MergeImpl
};
const ::google::protobuf::Message::ClassData*RaftTransaction::GetClassData() const { return &_class_data_; }


void RaftTransaction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RaftTransaction*>(&to_msg);
  auto& from = static_cast<const RaftTransaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.RaftTransaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_my_id().empty()) {
    _this->_internal_set_my_id(from._internal_my_id());
  }
  if (!from._internal_user_ref().empty()) {
    _this->_internal_set_user_ref(from._internal_user_ref());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_new_node()->::prpc::NewNodeAction::MergeFrom(
        from._internal_new_node());
  }
  if (from._internal_epoch() != 0) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RaftTransaction::CopyFrom(const RaftTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.RaftTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RaftTransaction::IsInitialized() const {
  return true;
}

void RaftTransaction::InternalSwap(RaftTransaction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_id_, lhs_arena,
                                       &other->_impl_.my_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_ref_, lhs_arena,
                                       &other->_impl_.user_ref_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.type_)
      + sizeof(RaftTransaction::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(RaftTransaction, _impl_.new_node_)>(
          reinterpret_cast<char*>(&_impl_.new_node_),
          reinterpret_cast<char*>(&other->_impl_.new_node_));
}

::google::protobuf::Metadata RaftTransaction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raft_2eproto_getter, &descriptor_table_raft_2eproto_once,
      file_level_metadata_raft_2eproto[1]);
}
// ===================================================================

class RaftActionRet::_Internal {
 public:
};

RaftActionRet::RaftActionRet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.RaftActionRet)
}
RaftActionRet::RaftActionRet(const RaftActionRet& from) : ::google::protobuf::Message() {
  RaftActionRet* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.my_id_){},
      decltype(_impl_.epoch_){},
      decltype(_impl_.success_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_my_id().empty()) {
    _this->_impl_.my_id_.Set(from._internal_my_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.epoch_, &from._impl_.epoch_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.success_) -
    reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.success_));

  // @@protoc_insertion_point(copy_constructor:prpc.RaftActionRet)
}
inline void RaftActionRet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.my_id_){},
      decltype(_impl_.epoch_){::uint64_t{0u}},
      decltype(_impl_.success_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
RaftActionRet::~RaftActionRet() {
  // @@protoc_insertion_point(destructor:prpc.RaftActionRet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RaftActionRet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.my_id_.Destroy();
}
void RaftActionRet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RaftActionRet::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.RaftActionRet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.my_id_.ClearToEmpty();
  ::memset(&_impl_.epoch_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RaftActionRet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 32, 2> RaftActionRet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RaftActionRet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string my_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.my_id_)}},
    // uint64 epoch = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RaftActionRet, _impl_.epoch_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.epoch_)}},
    // bool success = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RaftActionRet, _impl_.success_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string my_id = 1;
    {PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.my_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 epoch = 2;
    {PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.epoch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool success = 3;
    {PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\22\5\0\0\0\0\0\0"
    "prpc.RaftActionRet"
    "my_id"
  }},
};

::uint8_t* RaftActionRet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.RaftActionRet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    const std::string& _s = this->_internal_my_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.RaftActionRet.my_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 epoch = 2;
  if (this->_internal_epoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_epoch(), target);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.RaftActionRet)
  return target;
}

::size_t RaftActionRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.RaftActionRet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_id());
  }

  // uint64 epoch = 2;
  if (this->_internal_epoch() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_epoch());
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RaftActionRet::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RaftActionRet::MergeImpl
};
const ::google::protobuf::Message::ClassData*RaftActionRet::GetClassData() const { return &_class_data_; }


void RaftActionRet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RaftActionRet*>(&to_msg);
  auto& from = static_cast<const RaftActionRet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.RaftActionRet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_my_id().empty()) {
    _this->_internal_set_my_id(from._internal_my_id());
  }
  if (from._internal_epoch() != 0) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RaftActionRet::CopyFrom(const RaftActionRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.RaftActionRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RaftActionRet::IsInitialized() const {
  return true;
}

void RaftActionRet::InternalSwap(RaftActionRet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_id_, lhs_arena,
                                       &other->_impl_.my_id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.success_)
      + sizeof(RaftActionRet::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(RaftActionRet, _impl_.epoch_)>(
          reinterpret_cast<char*>(&_impl_.epoch_),
          reinterpret_cast<char*>(&other->_impl_.epoch_));
}

::google::protobuf::Metadata RaftActionRet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raft_2eproto_getter, &descriptor_table_raft_2eproto_once,
      file_level_metadata_raft_2eproto[2]);
}
// ===================================================================

class RaftPing::_Internal {
 public:
};

RaftPing::RaftPing(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.RaftPing)
}
RaftPing::RaftPing(const RaftPing& from) : ::google::protobuf::Message() {
  RaftPing* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.my_id_){},
      decltype(_impl_.epoch_){},
      decltype(_impl_.role_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_my_id().empty()) {
    _this->_impl_.my_id_.Set(from._internal_my_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.epoch_, &from._impl_.epoch_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.role_) -
    reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.role_));

  // @@protoc_insertion_point(copy_constructor:prpc.RaftPing)
}
inline void RaftPing::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.my_id_){},
      decltype(_impl_.epoch_){::uint64_t{0u}},
      decltype(_impl_.role_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.my_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
RaftPing::~RaftPing() {
  // @@protoc_insertion_point(destructor:prpc.RaftPing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RaftPing::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.my_id_.Destroy();
}
void RaftPing::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RaftPing::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.RaftPing)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.my_id_.ClearToEmpty();
  ::memset(&_impl_.epoch_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.role_) -
      reinterpret_cast<char*>(&_impl_.epoch_)) + sizeof(_impl_.role_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RaftPing::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 27, 2> RaftPing::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RaftPing_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string my_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.my_id_)}},
    // int32 role = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaftPing, _impl_.role_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.role_)}},
    // uint64 epoch = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RaftPing, _impl_.epoch_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.epoch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string my_id = 1;
    {PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.my_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 role = 2;
    {PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.role_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint64 epoch = 3;
    {PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.epoch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\15\5\0\0\0\0\0\0"
    "prpc.RaftPing"
    "my_id"
  }},
};

::uint8_t* RaftPing::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.RaftPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    const std::string& _s = this->_internal_my_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "prpc.RaftPing.my_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 role = 2;
  if (this->_internal_role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_role(), target);
  }

  // uint64 epoch = 3;
  if (this->_internal_epoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_epoch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.RaftPing)
  return target;
}

::size_t RaftPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.RaftPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string my_id = 1;
  if (!this->_internal_my_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_id());
  }

  // uint64 epoch = 3;
  if (this->_internal_epoch() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_epoch());
  }

  // int32 role = 2;
  if (this->_internal_role() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_role());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RaftPing::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RaftPing::MergeImpl
};
const ::google::protobuf::Message::ClassData*RaftPing::GetClassData() const { return &_class_data_; }


void RaftPing::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RaftPing*>(&to_msg);
  auto& from = static_cast<const RaftPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.RaftPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_my_id().empty()) {
    _this->_internal_set_my_id(from._internal_my_id());
  }
  if (from._internal_epoch() != 0) {
    _this->_internal_set_epoch(from._internal_epoch());
  }
  if (from._internal_role() != 0) {
    _this->_internal_set_role(from._internal_role());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RaftPing::CopyFrom(const RaftPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.RaftPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RaftPing::IsInitialized() const {
  return true;
}

void RaftPing::InternalSwap(RaftPing* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_id_, lhs_arena,
                                       &other->_impl_.my_id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.role_)
      + sizeof(RaftPing::_impl_.role_)
      - PROTOBUF_FIELD_OFFSET(RaftPing, _impl_.epoch_)>(
          reinterpret_cast<char*>(&_impl_.epoch_),
          reinterpret_cast<char*>(&other->_impl_.epoch_));
}

::google::protobuf::Metadata RaftPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raft_2eproto_getter, &descriptor_table_raft_2eproto_once,
      file_level_metadata_raft_2eproto[3]);
}
// ===================================================================

class RaftPong::_Internal {
 public:
};

RaftPong::RaftPong(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:prpc.RaftPong)
}
RaftPong::RaftPong(const RaftPong& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  RaftPong* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:prpc.RaftPong)
}




const ::google::protobuf::Message::ClassData RaftPong::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*RaftPong::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata RaftPong::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raft_2eproto_getter, &descriptor_table_raft_2eproto_once,
      file_level_metadata_raft_2eproto[4]);
}
// ===================================================================

class RaftMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<RaftMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_._has_bits_);
  static const ::prpc::RaftTransaction& action(const RaftMsg* msg);
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::prpc::RaftTransaction& RaftMsg::_Internal::action(const RaftMsg* msg) {
  return *msg->_impl_.action_;
}
RaftMsg::RaftMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:prpc.RaftMsg)
}
RaftMsg::RaftMsg(const RaftMsg& from) : ::google::protobuf::Message() {
  RaftMsg* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sync_actions_){from._impl_.sync_actions_},
      decltype(_impl_.action_){nullptr},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.action_ = new ::prpc::RaftTransaction(*from._impl_.action_);
  }
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:prpc.RaftMsg)
}
inline void RaftMsg::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sync_actions_){arena},
      decltype(_impl_.action_){nullptr},
      decltype(_impl_.type_){0},
  };
}
RaftMsg::~RaftMsg() {
  // @@protoc_insertion_point(destructor:prpc.RaftMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RaftMsg::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sync_actions_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.action_;
}
void RaftMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RaftMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:prpc.RaftMsg)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_sync_actions()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_ != nullptr);
    _impl_.action_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RaftMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> RaftMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RaftMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .prpc.RaftMsg.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaftMsg, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.type_)}},
    // .prpc.RaftTransaction action = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.action_)}},
    // repeated .prpc.RaftTransaction sync_actions = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.sync_actions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .prpc.RaftMsg.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .prpc.RaftTransaction action = 2;
    {PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.action_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .prpc.RaftTransaction sync_actions = 3;
    {PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.sync_actions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::prpc::RaftTransaction>()},
    {::_pbi::TcParser::GetTable<::prpc::RaftTransaction>()},
  }}, {{
  }},
};

::uint8_t* RaftMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:prpc.RaftMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .prpc.RaftMsg.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .prpc.RaftTransaction action = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::action(this),
        _Internal::action(this).GetCachedSize(), target, stream);
  }

  // repeated .prpc.RaftTransaction sync_actions = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sync_actions_size()); i < n; i++) {
    const auto& repfield = this->_internal_sync_actions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prpc.RaftMsg)
  return target;
}

::size_t RaftMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prpc.RaftMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prpc.RaftTransaction sync_actions = 3;
  total_size += 1UL * this->_internal_sync_actions_size();
  for (const auto& msg : this->_internal_sync_actions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .prpc.RaftTransaction action = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.action_);
  }

  // .prpc.RaftMsg.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RaftMsg::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RaftMsg::MergeImpl
};
const ::google::protobuf::Message::ClassData*RaftMsg::GetClassData() const { return &_class_data_; }


void RaftMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RaftMsg*>(&to_msg);
  auto& from = static_cast<const RaftMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:prpc.RaftMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sync_actions()->MergeFrom(from._internal_sync_actions());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action()->::prpc::RaftTransaction::MergeFrom(
        from._internal_action());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RaftMsg::CopyFrom(const RaftMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prpc.RaftMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RaftMsg::IsInitialized() const {
  return true;
}

void RaftMsg::InternalSwap(RaftMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sync_actions_.InternalSwap(&other->_impl_.sync_actions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.type_)
      + sizeof(RaftMsg::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(RaftMsg, _impl_.action_)>(
          reinterpret_cast<char*>(&_impl_.action_),
          reinterpret_cast<char*>(&other->_impl_.action_));
}

::google::protobuf::Metadata RaftMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raft_2eproto_getter, &descriptor_table_raft_2eproto_once,
      file_level_metadata_raft_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace prpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

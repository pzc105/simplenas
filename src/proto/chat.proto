syntax = "proto3";

package prpc;

option go_package = "./prpc";

service ChatService {
  rpc QueryChatRoomServer(QueryChatRoomServerReq) returns (QueryChatRoomServerRes);
  rpc CreateChatRoom(CreateChatRoomReq) returns (CreateChatRoomRes);
  rpc QueryChatRoomInfo(QueryChatRoomInfoReq) returns (QueryChatRoomInfoRes);
  rpc JoinRoom(JoinRoomReq) returns (JoinRoomRes);
  rpc LeaveRoom(LeaveRoomReq) returns (LeaveRoomRes);
  rpc Send2ChatRoom(Send2ChatRoomReq) returns (Send2ChatRoomRes);
}

message ChatError {
  enum ErrorId {
    None = 0;
    InvalidIdentity = 1;
    NotAvailabled = 2;
  }
}

message ChatUserInfo {
  int64 user_id = 1;
  string token = 2;
}

message QueryChatRoomServerReq {
  ChatUserInfo user_info = 1;
  string room_key = 2;
}

message QueryChatRoomServerRes {
  repeated string addresses = 1;
}

message CreateChatRoomReq {
  ChatUserInfo user_info = 1;
  string room_key = 2;
}

message CreateChatRoomRes {
}

message QueryChatRoomInfoReq {
  ChatUserInfo user_info = 1;
  string room_key = 2;
}

message QueryChatRoomInfoRes {
}

message JoinRoomReq {
  ChatUserInfo user_info = 1;
  string room_key = 2;
}

message JoinRoomRes {
}

message LeaveRoomReq {
  ChatUserInfo user_info = 1;
  string room_key = 2;
}

message LeaveRoomRes {
}

message Send2ChatRoomReq {
  ChatUserInfo user_info = 1;
  string room_key = 2;
  string msg = 3;
}

message Send2ChatRoomRes {
}
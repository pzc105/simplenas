syntax = "proto3";

package prpc;

option go_package = "./prpc";

service BtService {
  rpc Parse(DownloadRequest) returns (DownloadRespone);
  rpc Download(DownloadRequest) returns (DownloadRespone);
  rpc RemoveTorrent(RemoveTorrentReq) returns (RemoveTorrentRes);
  rpc GetMagnetUri(GetMagnetUriReq) returns (GetMagnetUriRsp);
  rpc GetResumeData(GetResumeDataReq) returns (GetResumeDataRsp);
  rpc GetTorrentInfo(GetTorrentInfoReq) returns (GetTorrentInfoRsp);
  rpc GetBtStatus(GetBtStatusReq) returns (GetBtStatusRsp);

  rpc OnBtStatus(stream BtStatusRequest) returns (stream BtStatusRespone);
  rpc OnFileCompleted(stream FileCompletedReq) returns (stream FileCompletedRes);
}

message BtFile {
  enum State {
    stop = 0;
    downloading = 1;
    completed = 2;
  }
  string name = 1;
  int32 index = 2;
  State st = 3;
  int64 total_size = 4;
  int64 downloaded = 5;
}

message TorrentInfo {
  InfoHash info_hash = 1;
  string name = 2;
  string save_path = 3;
  repeated BtFile files = 4;
  int64 total_size = 5;
  int32 piece_length = 6;
  int32 num_pieces = 7;
}

enum BtStateEnum {
  unknown = 0;
  checking_files = 1;
  downloading_metadata = 2;
  downloading = 3;
  finished = 4;
  seeding = 5;
  checking_resume_data = 7;
}

message TorrentStatus {
  InfoHash info_hash = 1;
  string name = 2;
  int32 download_payload_rate = 3;
  int64 total_done = 4;
  int64 total = 5;
  float progress = 6;
  int32 num_peers = 7;
  BtStateEnum state = 8;
}

message DownloadRequest {
  enum ReqType {
    MagnetUri = 0;
    Torrent = 1;
    Resume = 2;
  }
  ReqType type = 1;
  bytes content = 2;
  string save_path = 3;
}

message InfoHash {
  int32 version = 1;
  bytes hash = 2;
}

message DownloadRespone {
  InfoHash info_hash = 1;
}

message GetMagnetUriReq {
  enum ReqType {
    Torrent = 0;
    InfoHash = 1;
  }
  ReqType type = 1;
  bytes content = 2;
  InfoHash info_hash = 3;
}

message GetMagnetUriRsp {
  InfoHash info_hash = 1;
  string magnet_uri = 2;
}

message GetResumeDataReq {
  InfoHash info_hash = 1;
}

message GetResumeDataRsp {
  bytes resume_data = 9; 
}

message GetTorrentInfoReq {
  InfoHash info_hash = 1;
}

message GetTorrentInfoRsp {
  TorrentInfo torrent_info = 1;
}

message GetBtStatusReq {
  InfoHash info_hash = 1;
}

message GetBtStatusRsp {
  TorrentStatus status = 1;
}

message BtStatusRequest {
  repeated InfoHash info_hash = 1;
}

message BtStatusRespone {
  repeated TorrentStatus status_array = 1;
}

message TorrentInfoReq {
  repeated InfoHash info_hash = 1;
}

message TorrentInfoRes {
  TorrentInfo ti = 1;
}

message RemoveTorrentReq {
  InfoHash info_hash = 1;
}

message RemoveTorrentRes {

}

message FileProgressReq {
  InfoHash info_hash = 1;
}

message FileProgressRes {
  InfoHash info_hash = 1;
  repeated BtFile files = 2;
}

message FileCompletedReq {

}

message FileCompletedRes {
  InfoHash info_hash = 1;
  int32 file_index = 2;
}
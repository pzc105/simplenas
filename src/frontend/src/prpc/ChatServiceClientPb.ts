/**
 * @fileoverview gRPC-Web generated client stub for prpc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.19.1
// source: chat.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as chat_pb from './chat_pb';


export class ChatServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorQueryChatRoomServer = new grpcWeb.MethodDescriptor(
    '/prpc.ChatService/QueryChatRoomServer',
    grpcWeb.MethodType.UNARY,
    chat_pb.QueryChatRoomServerReq,
    chat_pb.QueryChatRoomServerRes,
    (request: chat_pb.QueryChatRoomServerReq) => {
      return request.serializeBinary();
    },
    chat_pb.QueryChatRoomServerRes.deserializeBinary
  );

  queryChatRoomServer(
    request: chat_pb.QueryChatRoomServerReq,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.QueryChatRoomServerRes>;

  queryChatRoomServer(
    request: chat_pb.QueryChatRoomServerReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.QueryChatRoomServerRes) => void): grpcWeb.ClientReadableStream<chat_pb.QueryChatRoomServerRes>;

  queryChatRoomServer(
    request: chat_pb.QueryChatRoomServerReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.QueryChatRoomServerRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/prpc.ChatService/QueryChatRoomServer',
        request,
        metadata || {},
        this.methodDescriptorQueryChatRoomServer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/prpc.ChatService/QueryChatRoomServer',
    request,
    metadata || {},
    this.methodDescriptorQueryChatRoomServer);
  }

  methodDescriptorCreateChatRoom = new grpcWeb.MethodDescriptor(
    '/prpc.ChatService/CreateChatRoom',
    grpcWeb.MethodType.UNARY,
    chat_pb.CreateChatRoomReq,
    chat_pb.CreateChatRoomRes,
    (request: chat_pb.CreateChatRoomReq) => {
      return request.serializeBinary();
    },
    chat_pb.CreateChatRoomRes.deserializeBinary
  );

  createChatRoom(
    request: chat_pb.CreateChatRoomReq,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.CreateChatRoomRes>;

  createChatRoom(
    request: chat_pb.CreateChatRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.CreateChatRoomRes) => void): grpcWeb.ClientReadableStream<chat_pb.CreateChatRoomRes>;

  createChatRoom(
    request: chat_pb.CreateChatRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.CreateChatRoomRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/prpc.ChatService/CreateChatRoom',
        request,
        metadata || {},
        this.methodDescriptorCreateChatRoom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/prpc.ChatService/CreateChatRoom',
    request,
    metadata || {},
    this.methodDescriptorCreateChatRoom);
  }

  methodDescriptorQueryChatRoomInfo = new grpcWeb.MethodDescriptor(
    '/prpc.ChatService/QueryChatRoomInfo',
    grpcWeb.MethodType.UNARY,
    chat_pb.QueryChatRoomInfoReq,
    chat_pb.QueryChatRoomInfoRes,
    (request: chat_pb.QueryChatRoomInfoReq) => {
      return request.serializeBinary();
    },
    chat_pb.QueryChatRoomInfoRes.deserializeBinary
  );

  queryChatRoomInfo(
    request: chat_pb.QueryChatRoomInfoReq,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.QueryChatRoomInfoRes>;

  queryChatRoomInfo(
    request: chat_pb.QueryChatRoomInfoReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.QueryChatRoomInfoRes) => void): grpcWeb.ClientReadableStream<chat_pb.QueryChatRoomInfoRes>;

  queryChatRoomInfo(
    request: chat_pb.QueryChatRoomInfoReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.QueryChatRoomInfoRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/prpc.ChatService/QueryChatRoomInfo',
        request,
        metadata || {},
        this.methodDescriptorQueryChatRoomInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/prpc.ChatService/QueryChatRoomInfo',
    request,
    metadata || {},
    this.methodDescriptorQueryChatRoomInfo);
  }

  methodDescriptorJoinRoom = new grpcWeb.MethodDescriptor(
    '/prpc.ChatService/JoinRoom',
    grpcWeb.MethodType.UNARY,
    chat_pb.JoinRoomReq,
    chat_pb.JoinRoomRes,
    (request: chat_pb.JoinRoomReq) => {
      return request.serializeBinary();
    },
    chat_pb.JoinRoomRes.deserializeBinary
  );

  joinRoom(
    request: chat_pb.JoinRoomReq,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.JoinRoomRes>;

  joinRoom(
    request: chat_pb.JoinRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.JoinRoomRes) => void): grpcWeb.ClientReadableStream<chat_pb.JoinRoomRes>;

  joinRoom(
    request: chat_pb.JoinRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.JoinRoomRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/prpc.ChatService/JoinRoom',
        request,
        metadata || {},
        this.methodDescriptorJoinRoom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/prpc.ChatService/JoinRoom',
    request,
    metadata || {},
    this.methodDescriptorJoinRoom);
  }

  methodDescriptorLeaveRoom = new grpcWeb.MethodDescriptor(
    '/prpc.ChatService/LeaveRoom',
    grpcWeb.MethodType.UNARY,
    chat_pb.LeaveRoomReq,
    chat_pb.LeaveRoomRes,
    (request: chat_pb.LeaveRoomReq) => {
      return request.serializeBinary();
    },
    chat_pb.LeaveRoomRes.deserializeBinary
  );

  leaveRoom(
    request: chat_pb.LeaveRoomReq,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.LeaveRoomRes>;

  leaveRoom(
    request: chat_pb.LeaveRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.LeaveRoomRes) => void): grpcWeb.ClientReadableStream<chat_pb.LeaveRoomRes>;

  leaveRoom(
    request: chat_pb.LeaveRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.LeaveRoomRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/prpc.ChatService/LeaveRoom',
        request,
        metadata || {},
        this.methodDescriptorLeaveRoom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/prpc.ChatService/LeaveRoom',
    request,
    metadata || {},
    this.methodDescriptorLeaveRoom);
  }

  methodDescriptorSend2ChatRoom = new grpcWeb.MethodDescriptor(
    '/prpc.ChatService/Send2ChatRoom',
    grpcWeb.MethodType.UNARY,
    chat_pb.Send2ChatRoomReq,
    chat_pb.Send2ChatRoomRes,
    (request: chat_pb.Send2ChatRoomReq) => {
      return request.serializeBinary();
    },
    chat_pb.Send2ChatRoomRes.deserializeBinary
  );

  send2ChatRoom(
    request: chat_pb.Send2ChatRoomReq,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.Send2ChatRoomRes>;

  send2ChatRoom(
    request: chat_pb.Send2ChatRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.Send2ChatRoomRes) => void): grpcWeb.ClientReadableStream<chat_pb.Send2ChatRoomRes>;

  send2ChatRoom(
    request: chat_pb.Send2ChatRoomReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.Send2ChatRoomRes) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/prpc.ChatService/Send2ChatRoom',
        request,
        metadata || {},
        this.methodDescriptorSend2ChatRoom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/prpc.ChatService/Send2ChatRoom',
    request,
    metadata || {},
    this.methodDescriptorSend2ChatRoom);
  }

}

